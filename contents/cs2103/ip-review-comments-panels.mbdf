
<panel type="info" header="### 1. WONG JUN LONG `@junlong4321` (74 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/394#discussion_r480793513" expanded>

Maybe "Creates a Duke object" instead? Makes it clearer
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/394#discussion_r480793689" expanded>

Maybe "Creates a Duke object" instead? Makes it clearer 
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/394#discussion_r480800914" expanded>

Caps "Input" in param
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/394#discussion_r480801865" expanded>

Caps "If"

"@return Boolean indicating whether the program should terminate" would help to improve clarity
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/394#discussion_r480802462" expanded>

Caps "To"
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/394#discussion_r480804905" expanded>

Missing full stop 
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/394#discussion_r480805070" expanded>

Caps "To"
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/394#discussion_r480806251" expanded>

Output index are the indexes **of elements** in original dukeList.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/394#discussion_r480809333" expanded>

Caps "Default"
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/394#discussion_r480810848" expanded>

Maybe "Creates a DukeList object" instead? Makes it clearer

</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/394#discussion_r480811019" expanded>

Missing full stop
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/394#discussion_r480811242" expanded>

Caps "List"
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/394#discussion_r480811720" expanded>

Caps "Invalid"
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/394#discussion_r480811887" expanded>

Caps "Invalid"
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/394#discussion_r480812121" expanded>

Maybe "Creates a DukeList object" instead? Makes it clearer

</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/394#discussion_r480812733" expanded>

Caps "String"
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/394#discussion_r480813663" expanded>

Caps "Invalid"
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/394#discussion_r480813792" expanded>

Caps "Invalid". (I'll be stopping my review of missing full stops and capital letters here so do relook through your javadocs format)
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/394#discussion_r480815485" expanded>

"True if a task is completed. False otherwise" may help to make it clearer

</panel>

<panel  header="**20 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/394#discussion_r480816088" expanded>

Can consider changing to "Marks an item as completed" for clarity and better english. But its really a matter of preference here (I prefer to use completed rather than done)
</panel>

<panel  header="**21 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/394#discussion_r480818024" expanded>

"+" sign formatting is not consistent here, so do relook at it
</panel>

<panel  header="**22 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/394#discussion_r480819831" expanded>

"Display statistics / tasks in list" will help in improving clarity
</panel>

<panel  header="**23 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/394#discussion_r480821805" expanded>

private **static final** String PROJECT_ROOT ...
</panel>

<panel  header="**24 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/394#discussion_r480823347" expanded>

Overall good formatting / use of Java coding standards for this particular script Storage.java. Good job! 👍🏻 👍🏻 👍🏻 
</panel>

<panel  header="**25 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/394#discussion_r480824330" expanded>

Can consider adding javadocs here 
</panel>

<panel  header="**26 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/394#discussion_r480824435" expanded>

Can consider adding javadocs here

</panel>

<panel  header="**27 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/394#discussion_r480824624" expanded>

Can consider adding javadocs here

</panel>

<panel  header="**28 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/394#discussion_r480825224" expanded>

Consider describing what kind of enumerations there are here (ie LIST, DONE, DELETE, TERMINATE, TASK, FIND, INVALID) and what they are used for
</panel>

<panel  header="**29 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/394#discussion_r480825888" expanded>

Can give slightly more elaboration here.

Personally, i put "Throws custom exception commands if something goes wrong when processing user input." in my own DukeException so hope that it might help you as well on elaborating
</panel>

<panel  header="**30 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/394#discussion_r480827031" expanded>

Can write something like "Throws custom exception commands if something goes wrong when processing user input.". I'm not too sure whats the difference between your DukeException and DukeInvalidCommandException, so do change the class description accordingly 
</panel>

<panel  header="**31 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/394#discussion_r480827326" expanded>

This is good elaboration 👍🏻 
</panel>

<panel  header="**32 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/394#discussion_r480827646" expanded>

Good description 👍🏻 
</panel>

<panel  header="**33 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/394#discussion_r480827915" expanded>

Good description 👍🏻 
</panel>

<panel  header="**34 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/394#discussion_r480828434" expanded>

"Task that needs to be done before a specific date/time."
</panel>

<panel  header="**35 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/394#discussion_r480828876" expanded>

"Task that start at a specific time and ends at a specific time."
</panel>

<panel  header="**36 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/394#discussion_r480830091" expanded>

Good job for Task.java. Java coding standards were followed well here 👍🏻 
</panel>

<panel  header="**37 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/394#discussion_r480830561" expanded>

Similar to the other enumeration file you have, you can describe what kind of enumerations are inside
</panel>

<panel  header="**38 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/394#discussion_r480830897" expanded>

"Task without any date/time attached to it."
</panel>

<panel  header="**39 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/394#discussion_r480831590" expanded>

Can consider removing unused code
</panel>

<panel  header="**40 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/394#discussion_r480832571" expanded>

Very very good test code function namings here using featureUnderTest_testScenario_expectedBehavior(). 👍🏻 In fact i'll improve my code namings as well after looking at how you named them for Week 5's ip
</panel>

<panel  header="**41 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/394#discussion_r480835101" expanded>

"+" sign should begin on next line
</panel>

<panel  header="**42 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/394#discussion_r480835446" expanded>

Consider removing unused code
</panel>

<panel  header="**43 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/394#discussion_r480835931" expanded>

Consider following featureUnderTest_testScenario_expectedBehavior()

EventNotDone_toString_printedCorrectly()
</panel>

<panel  header="**44 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/394#discussion_r480836058" expanded>



Consider following featureUnderTest_testScenario_expectedBehavior()

EventDone_toString_printedCorrectly()

</panel>

<panel  header="**45 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/394#discussion_r480836763" expanded>

Consider removing unused code
</panel>

<panel  header="**46 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/394#discussion_r480836925" expanded>

Follow featureUnderTest_testScenario_expectedBehavior()
</panel>

<panel  header="**47 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/394#discussion_r480836982" expanded>

Follow featureUnderTest_testScenario_expectedBehavior()
</panel>

<panel  header="**48 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/171#discussion_r481315013" expanded>

Can consider isUserDone as an alternative naming for the boolean
</panel>

<panel  header="**49 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/171#discussion_r481315224" expanded>

Caps "FILEPATH"
</panel>

<panel  header="**50 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/171#discussion_r481316250" expanded>

Can consider renaming to writeToTaskStorage(...)
</panel>

<panel  header="**51 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/171#discussion_r481316745" expanded>

Can consider changing to printWelcomeMessage() so as to make it a verb (ie an action)
</panel>

<panel  header="**52 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/171#discussion_r481317019" expanded>

Can consider changing to printGoodbyeMessage() so as to make it a verb (ie an action)

</panel>

<panel  header="**53 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/171#discussion_r481317347" expanded>

Consider abstracting your dividers into a static final variable as there are repetitive usage of it
</panel>

<panel  header="**54 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/171#discussion_r481318138" expanded>

Can consider changing the naming to printTasks(...) so as to make it a verb (ie an action)
</panel>

<panel  header="**55 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/171#discussion_r481318504" expanded>

Can consider changing the naming to printTodaysTask(...) so as to make it a verb (ie an action)

</panel>

<panel  header="**56 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/171#discussion_r481319760" expanded>

Consider executeAddingOfTask(...) for more clarity 

</panel>

<panel  header="**57 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/171#discussion_r481320378" expanded>

Very good formatting here 👍🏻 
</panel>

<panel  header="**58 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/171#discussion_r481320709" expanded>

|| command.split(" ")[0].equals("event"); (Bring the OR operator down)
</panel>

<panel  header="**59 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/171#discussion_r481321892" expanded>

Consider executeDeletingOfTask(...) for more clarity

</panel>

<panel  header="**60 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/171#discussion_r481322295" expanded>


Consider markCompletionOfTask(...) for more clarity

</panel>

<panel  header="**61 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/171#discussion_r481322710" expanded>



Consider executeApplicationExit(...) for more clarity

</panel>

<panel  header="**62 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/171#discussion_r481323396" expanded>

Will not be commenting on this any further. Hope that my previous comments on execute will help your code clarity 😃 
</panel>

<panel  header="**63 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/171#discussion_r481324051" expanded>

createNewDeadline(...)
</panel>

<panel  header="**64 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/171#discussion_r481324397" expanded>

pullExistingDeadline(...)
</panel>

<panel  header="**65 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/171#discussion_r481324677" expanded>

createNewEvent(...)
</panel>

<panel  header="**66 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/171#discussion_r481324917" expanded>

createExistingEvent(...)
</panel>

<panel  header="**67 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/171#discussion_r481325530" expanded>

saveStringInStorage(...)
</panel>

<panel  header="**68 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/171#discussion_r481325941" expanded>

createNewTask(...). Will stop commenting on this set of naming , hope that the comments will help to improve code clarity 😃 
</panel>

<panel  header="**69 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/171#discussion_r481326161" expanded>

getCompetionStatus(...)
</panel>

<panel  header="**70 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/171#discussion_r481326650" expanded>

markTaskAsCompleted(...)
</panel>

<panel  header="**71 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/171#discussion_r481326819" expanded>

getTaskListSize(...)
</panel>

<panel  header="**72 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/171#discussion_r481327098" expanded>

createTodo(...)
</panel>

<panel  header="**73 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/171#discussion_r481328129" expanded>

Maybe something like pullTodo(...)? I notice that your Javadocs describe the method really well. I referred to your Javadocs to see how I would name the method so maybe you can consider referring back to your Javadocs for method naming
</panel>

<panel  header="**74 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/171#discussion_r481328715" expanded>

Good use of featureUnderTest_testScenario_expectedBehavior(). I'll have to change my test code naming for this part as i didn't follow this format :L

To improve it further, i think you can consider describing specifically what kind of exceptions are thrown in ...exceptionThrown()
</panel>

</panel>

<panel type="info" header="### 2. LIM ZI YANG `@Ziyang-98` (59 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/369#discussion_r479980154" expanded>

Constant names should be all uppercase. (Under Naming in Coding Standard)
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/369#discussion_r479980657" expanded>

Likewise, constant names should be all uppercase. (Under Naming in Coding Standard)
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/369#discussion_r479981802" expanded>

Missing header comment for Duke class, AKA javadocs. (Under Comments in coding standard)
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/369#discussion_r479981966" expanded>

Missing header comment for Deadline class, AKA javadocs. (Under Comments in coding standard)


</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/369#discussion_r479983145" expanded>

Add an empty line between description and parameter section. (Under Comments in coding standard)


</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/369#discussion_r479983725" expanded>

No need indentation for case. You can configure your IDE style settings for this. (Under Layout in coding standard)
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/369#discussion_r479984201" expanded>

Missing header comment for DukeException class, AKA javadocs. (Under Comments in coding standard)


</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/369#discussion_r479984290" expanded>

Missing header comment for Event class, AKA javadocs. (Under Comments in coding standard)


</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/369#discussion_r479984688" expanded>

Add an empty line between description and parameter section. (Under Comments in coding standard)


</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/369#discussion_r479984729" expanded>

Add an empty line between description and parameter section. (Under Comments in coding standard)


</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/369#discussion_r479985732" expanded>

Constant names should be all uppercase. (Under Naming in Coding Standard)


</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/369#discussion_r479985987" expanded>

Missing header comment for Storage class, AKA javadocs. (Under Comments in coding standard)


</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/369#discussion_r479986335" expanded>

Add an empty line between description and parameter section. (Under Comments in coding standard)


</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/369#discussion_r479988054" expanded>

Add a white space in front of if. (Under Layout in coding standards)
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/369#discussion_r479988137" expanded>

Add a white space in front of if. (Under Layout in coding standards)


</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/369#discussion_r479988225" expanded>

Add an empty line between description and parameter section. (Under Comments in coding standard)


</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/369#discussion_r479988413" expanded>

Add a white space in front of if. (Under Layout in coding standards)


</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/369#discussion_r479988450" expanded>

Add a white space in front of if statement. (Under Layout in coding standards)


</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/369#discussion_r479988492" expanded>

Add a white space in front of if. (Under Layout in coding standards)


</panel>

<panel  header="**20 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/369#discussion_r479988543" expanded>

Add a white space in front of if. (Under Layout in coding standards)


</panel>

<panel  header="**21 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/369#discussion_r479988878" expanded>

Missing header comment for Task class, AKA javadocs. (Under Comments in coding standard)


</panel>

<panel  header="**22 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/369#discussion_r479989786" expanded>

Use meaningful names instead of a character, for instance task. (Under Naming in coding standards)
</panel>

<panel  header="**23 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/369#discussion_r479990466" expanded>

Use meaningful names instead of a character, for instance taskSymbol. (Under Naming in coding standards)
</panel>

<panel  header="**24 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/369#discussion_r479990681" expanded>

Use meaningful names instead of a character, for instance isDoneSymbol. (Under Naming in coding standards)


</panel>

<panel  header="**25 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/369#discussion_r479990859" expanded>

Missing header comment for Tasklist class, AKA javadocs. (Under Comments in coding standard)


</panel>

<panel  header="**26 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/369#discussion_r479991041" expanded>

Add an empty line between description and parameter section. (Under Comments in coding standard)


</panel>

<panel  header="**27 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/369#discussion_r479991076" expanded>

Add an empty line between description and parameter section. (Under Comments in coding standard)


</panel>

<panel  header="**28 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/369#discussion_r479991119" expanded>

Add an empty line between description and parameter section. (Under Comments in coding standard)


</panel>

<panel  header="**29 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/369#discussion_r479991164" expanded>

Add an empty line between description and parameter section. (Under Comments in coding standard)


</panel>

<panel  header="**30 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/369#discussion_r479991208" expanded>

Add an empty line between description and parameter section. (Under Comments in coding standard)


</panel>

<panel  header="**31 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/369#discussion_r479991565" expanded>

Use meaningful name instead of ls, for instance tasks. (Under Naming in coding standards)
</panel>

<panel  header="**32 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/369#discussion_r479992050" expanded>

Use meaningful names instead of a character, for instance result. (Under Naming in coding standards)
</panel>

<panel  header="**33 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/369#discussion_r479992199" expanded>

Add a white space in front of if. (Under Layout in coding standards)


</panel>

<panel  header="**34 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/369#discussion_r479992345" expanded>

Add a white space in front of for. (Under Layout in coding standards)


</panel>

<panel  header="**35 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/369#discussion_r479993045" expanded>

Use meaningful names instead of a character, for instance string. (Under Naming in coding standards)


</panel>

<panel  header="**36 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/369#discussion_r479993252" expanded>

Missing header comment for Todo class, AKA javadocs. (Under Comments in coding standard)


</panel>

<panel  header="**37 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/369#discussion_r479993479" expanded>

Constant names should be all uppercase. (Under Naming in Coding Standard)


</panel>

<panel  header="**38 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/369#discussion_r479993982" expanded>

Static imports should be above other imports. (Under Package and Import Statements in coding standards)
</panel>

<panel  header="**39 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/369#discussion_r479994145" expanded>

Missing header comment for StorageTest class, AKA javadocs. (Under Comments in coding standard)


</panel>

<panel  header="**40 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/369#discussion_r479994652" expanded>

You can add more description to the name using three part format. (Under Naming in coding standard)
</panel>

<panel  header="**41 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/369#discussion_r479994706" expanded>

You can add more description to the name using three part format. (Under Naming in coding standard)
</panel>

<panel  header="**42 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/369#discussion_r479994893" expanded>

Use meaningful name instead of ls, for instance tasks. (Under Naming in coding standards)


</panel>

<panel  header="**43 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/369#discussion_r479994967" expanded>

Use meaningful name instead of ls, for instance tasks. (Under Naming in coding standards)


</panel>

<panel  header="**44 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/369#discussion_r480181572" expanded>

Hi all, I apologise for repeating comments and if I offended anyone. My intention was to make it easier to fix if I were to point which were areas that could be improved. Sorry! >.<
</panel>

<panel  header="**45 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/369#discussion_r480186023" expanded>

No pls dun be sorry! And yeah haha lets stop the thread, psps!
</panel>

<panel  header="**46 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/342#discussion_r480076532" expanded>

You can create multiple DukeException children classes instead of compiling all the possible exceptions and error messages in one class. For instance, DukeBadCommandException.
</panel>

<panel  header="**47 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/342#discussion_r480079590" expanded>

Could add a header, AKA javadocs to describe the class.
</panel>

<panel  header="**48 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/342#discussion_r480079770" expanded>

Could add a header here too, aka javadocs to describe a Deadline Command.
</panel>

<panel  header="**49 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/342#discussion_r480080311" expanded>

Could add a header here too, aka javadocs to describe a Delete Command.


</panel>

<panel  header="**50 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/342#discussion_r480080675" expanded>

Could add a header here too, aka javadocs to describe a Done Command.


</panel>

<panel  header="**51 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/342#discussion_r480080758" expanded>

Could add a header here too, aka javadocs to describe a Event Command.


</panel>

<panel  header="**52 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/342#discussion_r480080830" expanded>

Could add a header here too, aka javadocs to describe a Find Command.


</panel>

<panel  header="**53 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/342#discussion_r480081856" expanded>

eventTime might not provide enough context to the class attribute as it includes date of the event as well. Perhaps eventDateAndTime would be a more suited name.
</panel>

<panel  header="**54 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/342#discussion_r480082780" expanded>

deadlineString might be misleading as it could mean the description of the task. A more appropriate name would be deadlineDateAndTime. 
</panel>

<panel  header="**55 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/342#discussion_r480083534" expanded>

Could add a header here too, aka javadocs to describe a List Command.


</panel>

<panel  header="**56 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/342#discussion_r480083594" expanded>

Could add a header here too, aka javadocs to describe a Find Command.


</panel>

<panel  header="**57 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/342#discussion_r480085542" expanded>

Similarly, would be easier to identify the context of the variable if the name is dateAndTime.
</panel>

<panel  header="**58 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/342#discussion_r480087051" expanded>

Could include time in the variable name to make the context cleaer as well
</panel>

<panel  header="**59 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/342#discussion_r480087973" expanded>

Could include header here, aka javadocs to describe TasklistTest,
</panel>

</panel>

<panel type="info" header="### 3. FIDELLA WIDJOJO `@ZoroarkDarkrai` (54 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/203#discussion_r481031030" expanded>

Any reason why you use CommandExecutor instead of just an execute command? Command.execute() seems simpler than Command.getCommandExecutor().execute()?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/203#discussion_r481033061" expanded>

Any reason why you use the default modifier instead of private as you have a getter method?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/203#discussion_r481033827" expanded>

Perhaps you mean INDENT ?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/203#discussion_r481034975" expanded>

Perhaps the work in the Ui and Duke can be redistributed?  As of now Duke.java is just the launcher for the real Duke program?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/203#discussion_r481035837" expanded>

Perhaps "Hello from\n" can also be a constant to maintain consistency?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/203#discussion_r481036231" expanded>

Can add "\n" to the constants?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/203#discussion_r481037263" expanded>

Perhaps can use switch case without all the methods?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/183#discussion_r481000340" expanded>

Can add JavaDoc comment for this method?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/183#discussion_r481000629" expanded>

Can add JavaDoc comment for this method?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/183#discussion_r481000936" expanded>

Can remove this extra line?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/183#discussion_r481001312" expanded>

Can add JavaDoc comment for this method?
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/183#discussion_r481001894" expanded>

Can add JavaDoc comment for this method?
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/183#discussion_r481001985" expanded>

Can add JavaDoc comment for this method?
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/183#discussion_r481002228" expanded>

Can add JavaDoc comment for this method?
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/183#discussion_r481003932" expanded>

Any reason why this method has the default access modifier instead of public?
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/183#discussion_r481005725" expanded>

Can add @param in the javadoc?
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/183#discussion_r481005963" expanded>

Missing s from "Get"?
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/183#discussion_r481006385" expanded>

Missing s from "Remove"?
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/183#discussion_r481007098" expanded>

Missing empty line?
</panel>

<panel  header="**20 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/183#discussion_r481008164" expanded>

Extra empty line?
</panel>

<panel  header="**21 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/183#discussion_r481009093" expanded>

Can add @return?
</panel>

<panel  header="**22 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/183#discussion_r481009378" expanded>

Can add @param for task list?
</panel>

<panel  header="**23 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/183#discussion_r481009431" expanded>

Can add @param for task list?


</panel>

<panel  header="**24 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/183#discussion_r481009944" expanded>

Can add Javadoc of the class?
</panel>

<panel  header="**25 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/183#discussion_r481010197" expanded>

Can add @return?
</panel>

<panel  header="**26 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/183#discussion_r481010340" expanded>

Can add @return?
</panel>

<panel  header="**27 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/183#discussion_r481010518" expanded>

Can add @return?
</panel>

<panel  header="**28 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/183#discussion_r481010657" expanded>

Can add empty line?
</panel>

<panel  header="**29 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/183#discussion_r481011450" expanded>

Can add empty line?
</panel>

<panel  header="**30 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/183#discussion_r481011573" expanded>

Can add @return?
</panel>

<panel  header="**31 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/183#discussion_r481011751" expanded>

Can add @return?
</panel>

<panel  header="**32 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/183#discussion_r481012118" expanded>

Can add Javadoc of the class?
</panel>

<panel  header="**33 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/183#discussion_r481012285" expanded>

Can add Javadoc for the method?
</panel>

<panel  header="**34 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/183#discussion_r481012650" expanded>

Can add @return?
</panel>

<panel  header="**35 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/183#discussion_r481012927" expanded>

Can add @return?
</panel>

<panel  header="**36 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/183#discussion_r481013235" expanded>

Can add javadoc for the class?
</panel>

<panel  header="**37 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/183#discussion_r481013321" expanded>

Can add javadoc for the method?
</panel>

<panel  header="**38 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/183#discussion_r481013461" expanded>

Can add javadoc for the class?
</panel>

<panel  header="**39 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/183#discussion_r481013685" expanded>

Can add javadoc for the method?
</panel>

<panel  header="**40 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/183#discussion_r481013790" expanded>

Can add javadoc for the class?
</panel>

<panel  header="**41 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/183#discussion_r481013859" expanded>

Can add javadoc for the class?
</panel>

<panel  header="**42 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/183#discussion_r481015499" expanded>

Can add javadoc for the class?
</panel>

<panel  header="**43 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/183#discussion_r481015588" expanded>

Can add javadoc for the method?
</panel>

<panel  header="**44 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/183#discussion_r481015747" expanded>

Can add javadoc for the method?
</panel>

<panel  header="**45 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/183#discussion_r481015797" expanded>

Can add javadoc for the method?
</panel>

<panel  header="**46 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/183#discussion_r481015958" expanded>

Can add javadoc for the class?
</panel>

<panel  header="**47 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/183#discussion_r481016014" expanded>

Can add javadoc for the method?
</panel>

<panel  header="**48 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/183#discussion_r481016215" expanded>

Can add javadoc for the method?
</panel>

<panel  header="**49 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/183#discussion_r481016270" expanded>

Can add javadoc for the method?
</panel>

<panel  header="**50 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/183#discussion_r481016324" expanded>

Can add javadoc for the method?
</panel>

<panel  header="**51 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/183#discussion_r481016376" expanded>

Can add javadoc for the method?
</panel>

<panel  header="**52 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/183#discussion_r481016423" expanded>

Can add javadoc for the method?
</panel>

<panel  header="**53 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/183#discussion_r481016518" expanded>

Can add javadoc for the method?
</panel>

<panel  header="**54 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/183#discussion_r481016591" expanded>

Can add javadoc for the method?
</panel>

</panel>

<panel type="info" header="### 4. WEN JUNHUA `@jh123x` (53 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/393#discussion_r480223296" expanded>

Nice updating of readme to teach users how to run the file.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/393#discussion_r480226130" expanded>

'''suggestion
            return "[D][✓] " + super.getName() + "(by: " + printDateTime() + ")";
'''
Might be better to split long strings rather than short strings.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/393#discussion_r480229725" expanded>

Might be better to use a switch statement here instead of adding else ifs.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/393#discussion_r480233080" expanded>

Maybe considering not using * imports
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/393#discussion_r480233890" expanded>

'''suggestion
            return "[T][✓] " + super.getName();
'''
I think it looks cleaner when put short strings in a single set of ""s.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/157#discussion_r480154687" expanded>

Might want to end the statement with a '.'
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/157#discussion_r480154816" expanded>

Might want to end the statement with a '.'
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/157#discussion_r480200496" expanded>

Might want to list imported classes explicitly.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/157#discussion_r480200564" expanded>

Might want to list imported classes explicitly.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/157#discussion_r480200648" expanded>

Might want to list imported classes explicitly.
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/157#discussion_r480200861" expanded>

Might want to end the statement with a '.'
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/157#discussion_r480202007" expanded>

'''suggestion
 * Command that closes Duke.
'''
Might want to end the statement with a '.'
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/157#discussion_r480202210" expanded>

'''suggestion
     * Returns whether this is an exit command.
'''
Might want to end the statement with a '.'
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/157#discussion_r480202304" expanded>

'''suggestion
 * Interface for all command classes.
'''
Might want to end the statement with a '.'
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/157#discussion_r480207042" expanded>

'''suggestion
 * Command that delete a task in task list and storage.
'''
Might want to end the statement with a '.'
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/157#discussion_r480207135" expanded>

'''suggestion
     * Initializes a DeleteCommand with the given index.
'''
Change 'an' to 'a'.
Might want to end the statement with a '.'

</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/157#discussion_r480207590" expanded>

'''suggestion
     * @param index the index given.
'''
Might want to end the statement with a '.'
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/157#discussion_r480213124" expanded>

'''suggestion
     * Returns whether this is an exit command.
'''
Might want to end the statement with a '.'
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/157#discussion_r480213203" expanded>

'''suggestion
     * @return false at all times.
'''
Might want to end the statement with a '.'
</panel>

<panel  header="**20 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/157#discussion_r480213385" expanded>

'''suggestion
     * and print the response using the given ui.
'''
Might want to end the statement with a '.'
</panel>

<panel  header="**21 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/157#discussion_r480213509" expanded>

'''suggestion
     * @param taskList the task list to be updated.
'''
Might want to end the statement with a '.'
</panel>

<panel  header="**22 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/157#discussion_r480213642" expanded>

'''suggestion
     * @param ui the ui that handles inputs and outputs.
'''
Might want to end the statement with a '.'
</panel>

<panel  header="**23 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/157#discussion_r480213847" expanded>

'''suggestion
     * @param storage the permanent storage of task list.
'''
Might want to end the statement with a '.'
</panel>

<panel  header="**24 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/157#discussion_r480214042" expanded>

'''suggestion
     *                      or the task list cannot be saved to the storage.
'''
Might want to end the statement with a '.'
</panel>

<panel  header="**25 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/157#discussion_r480214505" expanded>

'''suggestion
import duke.component.*;
'''
Might want to list imported classes explicitly.
</panel>

<panel  header="**26 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/157#discussion_r480214921" expanded>

'''suggestion
 * Command that complete a task in task list and storage.
'''
Might want to end the statement with a '.'
</panel>

<panel  header="**27 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/157#discussion_r480215097" expanded>

'''suggestion
     * Initializes an DoneCommand with the given index.
'''
Might want to end the statement with a '.'
</panel>

<panel  header="**28 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/157#discussion_r480215295" expanded>

'''suggestion
     * @param index the index given.
'''
Might want to end the statement with a '.'
</panel>

<panel  header="**29 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/157#discussion_r480215452" expanded>

'''suggestion
     * Returns whether this is an exit command.
'''
Might want to end the statement with a '.'
</panel>

<panel  header="**30 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/157#discussion_r480216261" expanded>

'''suggestion
     * @return false at all times.
'''
Might want to end the statement with a '.'
</panel>

<panel  header="**31 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/157#discussion_r480216443" expanded>

'''suggestion
     * and print the response using the given ui.
'''
Might want to end the statement with a '.'
</panel>

<panel  header="**32 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/157#discussion_r480216691" expanded>

'''suggestion
     * @param taskList the task list to be updated.
'''
Might want to end the statement with a '.'
</panel>

<panel  header="**33 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/157#discussion_r480216799" expanded>

'''suggestion
     * @param ui the ui that handles inputs and outputs.
'''
Might want to end the statement with a '.'
</panel>

<panel  header="**34 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/157#discussion_r480216907" expanded>

'''suggestion
     * @param storage the permanent storage of task list.
'''
Might want to end the statement with a '.'
</panel>

<panel  header="**35 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/157#discussion_r480217112" expanded>

'''suggestion
     *                      or the task list cannot be saved to the storage.
'''
Might want to end the statement with a '.'
</panel>

<panel  header="**36 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/157#discussion_r480217812" expanded>

'''suggestion
import duke.component.*;
'''
Might want to list imported classes explicitly.
</panel>

<panel  header="**37 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/157#discussion_r480218095" expanded>

'''suggestion
import duke.component.*;
'''
Might want to list imported classes explicitly.
</panel>

<panel  header="**38 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/157#discussion_r480218647" expanded>

'''suggestion
     * Initializes an AddCommand with the given new Task.
'''
Might want to end the statement with a '.'
</panel>

<panel  header="**39 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/157#discussion_r480218767" expanded>

'''suggestion
     * @param newTask the new task given.
'''
Might want to end the statement with a '.'
</panel>

<panel  header="**40 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/157#discussion_r480218898" expanded>

'''suggestion
     * Returns whether this is an exit command.
'''
Might want to end the statement with a '.'
</panel>

<panel  header="**41 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/157#discussion_r480219003" expanded>

'''suggestion
     * @return false at all times.
'''
Might want to end the statement with a '.'
</panel>

<panel  header="**42 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/157#discussion_r480219103" expanded>

'''suggestion
     * and print the response using the given ui.
'''
Might want to end the statement with a '.'
</panel>

<panel  header="**43 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/157#discussion_r480219799" expanded>

'''suggestion
     * @param taskList the task list to be updated.
'''
Might want to end the statement with a '.'
</panel>

<panel  header="**44 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/157#discussion_r482680763" expanded>

Nice touch here for plural vs singular
</panel>

<panel  header="**45 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/157#discussion_r482681877" expanded>

In my opinion, might be better ux to check between 1 and taskList.size() for those who are not used to 0 as starting index
</panel>

<panel  header="**46 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/157#discussion_r482682745" expanded>

In my opinion, it might be to do the searching within the list command to make other developers find the list command code more easily in case any modification is needed. (Single responsibility principle)
</panel>

<panel  header="**47 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/157#discussion_r482683533" expanded>

Adding the exception might help in detecting what type of error it is. It might allow easier modification when multiple commands throw the same type of exception.
</panel>

<panel  header="**48 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/157#discussion_r482683861" expanded>

Might want to add the searching within the list command itself so that other developers who extend/work together on your project will be able to find it more easily.
</panel>

<panel  header="**49 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/157#discussion_r482684062" expanded>

Nice touch on the single/plural form of the task. 
</panel>

<panel  header="**50 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/157#discussion_r482684267" expanded>

Might want to change it into an abstract class so that you don't have to redefine isExit every time in every class and just take the argument as an input in the constructor.
</panel>

<panel  header="**51 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/157#discussion_r482685399" expanded>

Might want to use enums to define different types so that editing the message stored on the enum will change all the places where the same error is thrown.
</panel>

<panel  header="**52 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/157#discussion_r482686404" expanded>

Might want to group similar commands together in a switch rather than using if elses. It might cut down on the code count too
</panel>

<panel  header="**53 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/157#discussion_r482688785" expanded>

Maybe change this to exclude the question mark so that the class that extends this can just do
"D " + super.toStorageString() 
</panel>

</panel>

<panel type="info" header="### 5. CHEN XIHAO `@howtoosee` (50 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/446#discussion_r482213961" expanded>

wrong order of import (alphabetical)
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/446#discussion_r482214874" expanded>

damn optional 0.0 
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/446#discussion_r482215792" expanded>

missing javadocs for methods in this class
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/446#discussion_r482216202" expanded>

missing javadocs
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/446#discussion_r482216233" expanded>

missing javadocs
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/446#discussion_r482216461" expanded>

missing javadocs for methods in this classs
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/446#discussion_r482216755" expanded>

missing spaces between parentheses and brace
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/446#discussion_r482217122" expanded>

use an import rather than referring to `duke.TaskType`
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/446#discussion_r482217441" expanded>

is there a better name than `string`? this isn't very informative
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/446#discussion_r482218197" expanded>

i think my tutor mentioned that 'list' as a collection name isnt very intuitive and informative.
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/357#discussion_r482224248" expanded>

consider referencing instance level variables with `this.` to mitigate variable shadowing and be clearer
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/357#discussion_r482224960" expanded>

Missing javadoc for class, similarly for other classes too.
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/357#discussion_r482225700" expanded>

Consider naming variables differently to the class name for clarity
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/357#discussion_r482226305" expanded>

consider extracting the addShowOnScreen to the parent class AddCommand, or Command itself
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/357#discussion_r482228261" expanded>

Consider giving this boolean a more meaningful name
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/357#discussion_r482229050" expanded>

variable name "by" is not very intuitive. maybe use "dateString" 
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/357#discussion_r482230559" expanded>

missing `@Override` tag
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/357#discussion_r482231380" expanded>

method name should be a commanding word starting with a verb, such as 'getStringForPrinting'
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/171#discussion_r482845189" expanded>

can consider naming variables differently to the class name to avoid confusion
</panel>

<panel  header="**20 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/171#discussion_r482847839" expanded>

this is a repetition of the if-else condition in line 33, consider merging them
</panel>

<panel  header="**21 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/171#discussion_r482848084" expanded>

exception should be specific with a message string to avoid confusion
</panel>

<panel  header="**22 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/171#discussion_r482848486" expanded>

caps "If", similar for other docs too
</panel>

<panel  header="**23 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/171#discussion_r482849323" expanded>

unintuitive variable name for a stringbuilder, sounds more like a collection of tasks instead.
</panel>

<panel  header="**24 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/171#discussion_r482851391" expanded>

consider changing theses if-else to a switch statement for clarity
</panel>

<panel  header="**25 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/171#discussion_r482851732" expanded>

method name should sound like a boolean, consider "isValidAddTaskCommand"
</panel>

<panel  header="**26 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/171#discussion_r482853409" expanded>

I think the exceptions thrown should be as specific as possible
</panel>

<panel  header="**27 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/171#discussion_r482854297" expanded>

try to use present tense
</panel>

<panel  header="**28 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/171#discussion_r482854492" expanded>

can consider adding exception handling here
</panel>

<panel  header="**29 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/171#discussion_r482854706" expanded>

each enum be on a new line
</panel>

<panel  header="**30 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/171#discussion_r482855104" expanded>

should include expected behaviour, similarly for the method names below
</panel>

<panel  header="**31 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/36#discussion_r481932789" expanded>

I think it might be better to use a stronger word as as "InvalidCommand", rather than "unknown", which can give the feeling of the command being unhandled?
</panel>

<panel  header="**32 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/36#discussion_r481933121" expanded>

consider using string.format for this
</panel>

<panel  header="**33 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/36#discussion_r481933635" expanded>

variable name 't' is not very clear
</panel>

<panel  header="**34 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/36#discussion_r481937735" expanded>

i think its better to reference your instance variables starting with the "this" keyword, such as `this.ui` to be clear and prevent variable shadowing
</panel>

<panel  header="**35 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/36#discussion_r481938508" expanded>

'c' is not a very intuitive variable name. if i rmb correctly, single character names should only be used for scratch variables
</panel>

<panel  header="**36 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/36#discussion_r481939527" expanded>

main method as an entry point should be separate from the other class level and instance level methods. consider moving it to the bottom
</panel>

<panel  header="**37 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/36#discussion_r481939737" expanded>

'c' as a variable name is not the most intuitive
</panel>

<panel  header="**38 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/36#discussion_r481939951" expanded>

remove commented out code?
</panel>

<panel  header="**39 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/36#discussion_r481941449" expanded>

consider writing this in line with `String.format` for clarity
</panel>

<panel  header="**40 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/36#discussion_r481941981" expanded>

un-intuitive variable name
</panel>

<panel  header="**41 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/36#discussion_r481943345" expanded>

convention to call super() as first line in constructor
</panel>

<panel  header="**42 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/36#discussion_r481944471" expanded>

consider using switch rather than if-else. this is slightly hard to read
</panel>

<panel  header="**43 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/36#discussion_r481945631" expanded>

whats the use of protected here?
</panel>

<panel  header="**44 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/36#discussion_r481946148" expanded>

shouldn't have return statements in constructors
</panel>

<panel  header="**45 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/36#discussion_r481947435" expanded>

since this is repeated for all the events, consider declaring as static final.
</panel>

<panel  header="**46 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/36#discussion_r481947891" expanded>

can simply return `description.contains(keyword)` without the need for conditional expression.
</panel>

<panel  header="**47 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/36#discussion_r481948466" expanded>

consider moving this to your parser!
</panel>

<panel  header="**48 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/36#discussion_r481949269" expanded>

consider renaming to `add` to follow the naming conventions in Collections
</panel>

<panel  header="**49 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/36#discussion_r481949559" expanded>

`idx` is not very intuitive :/
</panel>

<panel  header="**50 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/36#discussion_r481950660" expanded>

missing javadoc for test methods
</panel>

</panel>

<panel type="info" header="### 6. TIN KAH ONG ISAAC `@IsaacTin` (44 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/391#discussion_r479965100" expanded>

Should there be a Javadoc comment here?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/391#discussion_r479965338" expanded>

Should there be a trailing whitespace here? Also, perhaps it might be good to add a new line to end of file.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/391#discussion_r479965624" expanded>

Should there be a Javadoc comment here?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/391#discussion_r479965743" expanded>

Should there be a new line at the end of file?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/391#discussion_r479966006" expanded>

Should there be a Javadoc comment here?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/391#discussion_r479966156" expanded>

Should there be a trailing whitespace here? Also, perhaps it might be good to add a new line to end of file.


</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/391#discussion_r479967404" expanded>

Should the variable 'in' and 'taskList' be private and have accessor methods?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/391#discussion_r479968694" expanded>

I think the line below has more than 120 characters. Perhaps it might good to split this line up into two and place half in a new line?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/391#discussion_r479968855" expanded>

I think the line below has more than 120 characters. Perhaps it might good to split this line up into two and place half in a new line?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/391#discussion_r479969477" expanded>

Should there be a new line after end of file? It seems to be prevalent among most of the files, so perhaps it might be good to ensure it in every file.
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/391#discussion_r479970222" expanded>

Should variable 'file' be private and have accessor methods?
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/391#discussion_r479970379" expanded>

Should there be a Javadoc comment here?
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/391#discussion_r479970770" expanded>

Should each variable declaration be in its own statement?
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/391#discussion_r479975303" expanded>

Should switch and case statements have the same indentations?
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/391#discussion_r479975876" expanded>

Should there be a default clause at the end of switch statements?
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/391#discussion_r479976361" expanded>

Should there be a Javadoc comment here?
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/391#discussion_r479977602" expanded>

Should variable 'lst' and 'storage' be private and have accessor methods?


</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/391#discussion_r479977936" expanded>

Should there be '{}' for the if statement?
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/391#discussion_r479978014" expanded>

Should there be '{}' for the if statement?


</panel>

<panel  header="**20 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/391#discussion_r479978348" expanded>

Should there be a javadoc comment here?
</panel>

<panel  header="**21 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/391#discussion_r479978467" expanded>

Should there be '{}' for the if statement?


</panel>

<panel  header="**22 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/391#discussion_r479978566" expanded>

Should there be a javadoc comment here?


</panel>

<panel  header="**23 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/391#discussion_r479978727" expanded>

Should there be '{}' for the if statements?


</panel>

<panel  header="**24 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/391#discussion_r479978862" expanded>

Should there be a javadoc comment here?


</panel>

<panel  header="**25 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/391#discussion_r479978956" expanded>

Should there be a javadoc comment here?


</panel>

<panel  header="**26 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/391#discussion_r479979666" expanded>

Should there be Javadoc comments for all public methods?
</panel>

<panel  header="**27 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/391#discussion_r479979985" expanded>

Should import statements be arranged in this order?
</panel>

<panel  header="**28 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/391#discussion_r479980201" expanded>

Should import statements be arranged in this order?
</panel>

<panel  header="**29 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/391#discussion_r479980433" expanded>

Should import statements be arranged in this order?
</panel>

<panel  header="**30 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/189#discussion_r479936524" expanded>

Should there be a JavaDoc Comment here?
</panel>

<panel  header="**31 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/189#discussion_r479936839" expanded>

Should there be a JavaDoc Comment here?


</panel>

<panel  header="**32 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/189#discussion_r479937313" expanded>

I think you might want to add newline at end of file
</panel>

<panel  header="**33 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/189#discussion_r479938874" expanded>

Perhaps also adding a newline at the end of file would be good?
</panel>

<panel  header="**34 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/189#discussion_r479939140" expanded>

 Perhaps also adding a newline at the end of file would be good?
The newline issue seems to be prevalent among other files, so perhaps it might be good to go about adding them to all the files.

</panel>

<panel  header="**35 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/189#discussion_r479944085" expanded>

Should there be a Javadoc comment here?


</panel>

<panel  header="**36 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/189#discussion_r479944642" expanded>

Should there be a Javadoc comment here?


</panel>

<panel  header="**37 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/189#discussion_r479944984" expanded>

Should there be a Javadoc comment here?


</panel>

<panel  header="**38 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/189#discussion_r479945602" expanded>

Should there be a Javadoc comment here?


</panel>

<panel  header="**39 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/189#discussion_r479946068" expanded>

Should there be a Javadoc comment here?


</panel>

<panel  header="**40 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/189#discussion_r479946784" expanded>

Should the import statements be arranged this way? 
</panel>

<panel  header="**41 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/189#discussion_r479947113" expanded>

Should there be a Javadoc comment here?
</panel>

<panel  header="**42 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/189#discussion_r479947256" expanded>

Should there be a Javadoc comment here?


</panel>

<panel  header="**43 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/189#discussion_r479947705" expanded>

Should the import statements be arranged this way?


</panel>

<panel  header="**44 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/189#discussion_r479947882" expanded>

Should there be a Javadoc comment here?


</panel>

</panel>

<panel type="info" header="### 7. FLORENCIA MARTINA `@florenciamartina` (43 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/375#discussion_r480113201" expanded>

Agreed! Organising your code into packages might improve the manageability and readability of your code!  Even though it is optional, it's a good practice 👍 
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/375#discussion_r480120729" expanded>

Perhaps this variable can be declared as private instead? Since it is only used within the scope of Deadline class. If you want to make it accessible to another class, you can write a getter method instead.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/375#discussion_r480125785" expanded>

I really like that you ordered import statements consistently. However, even if it is not compulsory, I think it is better to order your import statements in lexicographical order to make it look neater.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/375#discussion_r480129801" expanded>

Perhaps it would be better to separate this method into different classes (Parser, Ui, Storage, TaskList, etc), following the OOP principle as required by the module (even though I know it exceeds the minimum requirements). However, it is a good practice and separating it would make debugging, managing, and testing a lot easier. It might take more effort now, but you won't regret it! Cheers 😄 
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/375#discussion_r480132957" expanded>

Perhaps it is better to rename the variable names to "file" and "scanner" to enhance readability and clarity.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/375#discussion_r480135873" expanded>

I think it is better to rename the variable name into "parsed/splittedTask" or "parsed/splittedInput" to avoid confusion 😃 
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/375#discussion_r480137722" expanded>

Instead of accessing task[0], task[2], etc multiple times. I suggest you store them in variables (e. g. commandType, etc) to make improve readability and make debugging easier (you won't have to remember what is task[0] refers to). You can also consider using switch statement!
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/375#discussion_r480139628" expanded>

I think it is redundant to use an array for just one string. Maybe you can consider changing greetingText to a string? I noticed the same issue in several other places too. 
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/375#discussion_r480143946" expanded>

May I ask why do you need 2 scanners in 1 class? I think it is better to just use one scanner to avoid confusion 👍 
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/375#discussion_r480144491" expanded>

Maybe you can write the variable as receivedMessage instead?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/375#discussion_r480146213" expanded>

In my opinion, I think it is a bit redundant to create a class for Response. Perhaps you want to consider storing them as a static variable instead? (e. g. private static final String BYE_MESSAGE = "....";) 😃 
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/375#discussion_r480147801" expanded>

Perhaps it is better to name it as "foundTasks" instead? I was a bit confused at first.
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/375#discussion_r480150645" expanded>

Perhaps it would be better if you throw all the Exception? They might be useful in the future use (for try-catching).  I noticed the same issue in several other places too.
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/375#discussion_r480152179" expanded>

Agreed. You can write a getter method to get the type of the Task and just move the writeMessage (would be better if you change the name to "getMessage") to Task class. It's more OOP that way 👍 
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/375#discussion_r480152833" expanded>

In my opinion, it's better if all your exception extends DukeException.
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/375#discussion_r480154903" expanded>

I think it is redundant to assign "done" to an empty string. You can just leave it as variable declaration only.
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/375#discussion_r480156559" expanded>

May I ask why do you put empty string as your parameter? 😄 
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/375#discussion_r480157675" expanded>

Perhaps you want to consider changing the access modifier to private instead? 
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/375#discussion_r480159028" expanded>

Perhaps you want to consider using switch statement?
</panel>

<panel  header="**20 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/375#discussion_r480162143" expanded>

Just an advice, this might not be a coding standard violation, but I think it is better if you make Task class an abstract class.

In addition, it is better to change the access modifier of variable description and isDone (on Line 3 and 4) to protected (following encapsulation fundamental, it is not advisable to declare your variable public)
</panel>

<panel  header="**21 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/375#discussion_r480163759" expanded>

You can write "../src/main/java/*.java" instead, to support extension to your code, so that you don't need to keep adding lines when creating new classes 😃 
</panel>

<panel  header="**22 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/329#discussion_r480180794" expanded>

I think it is better to add access modifier to your variables (private, preferably) to comply with coding standard (and encapsulation) 😄 
</panel>

<panel  header="**23 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/329#discussion_r480184786" expanded>

It's missing the newline at the end of the file. You might want to consider doing checkstyle in IntelliJ as it highlights all coding style violation! (makes our life easier) 😄 
</panel>

<panel  header="**24 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/329#discussion_r480188517" expanded>

In my opinion, you don't need the message attribute since Exception has it.
</panel>

<panel  header="**25 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/329#discussion_r480189053" expanded>

Following the previous comment, there is no need to write toString() method since Exception class already has a built-in function getMessage() to fetch the error message.
</panel>

<panel  header="**26 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/329#discussion_r480191214" expanded>

It is good that you group the import statements consistently. However (this is just nitpicking, not compulsory), it looks neater if you write them in lexicographical order.
</panel>

<panel  header="**27 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/329#discussion_r480193007" expanded>

May I ask why do you leave these cases empty? Is it because Todo, Deadline, and Event are considered as AddCommand? Perhaps you might want to consider separating them (TodoCommand, DeadlineCommand, EventCommand extending from AddCommand) to make it more OOP.
</panel>

<panel  header="**28 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/329#discussion_r480194003" expanded>

Perhaps you might want to consider renaming this variable to something like "parsedInput" or "splittedInput" to avoid confusion? (stringArray is a bit too general) 😆 I noticed the same issue in several other places too.
</panel>

<panel  header="**29 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/329#discussion_r480196496" expanded>

To avoid repetition, you might want to consider making the parsedInput as class variable. So you don't have to parsed multiple times.
</panel>

<panel  header="**30 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/329#discussion_r480197515" expanded>

I think it is better to avoid magic number because it is confusing. Just like my previous comment, I think it is better to store the parsedInput to make debugging easier! I noticed this same issue in several other places too, you might want to consider this! 😄 
</panel>

<panel  header="**31 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/329#discussion_r480200248" expanded>

I think it's really great that you abstract this to methods! It makes debugging easier (you might want to avoid magic number though!)
</panel>

<panel  header="**32 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/329#discussion_r480200987" expanded>

To make it sounds more like boolean, you might want to rename this to "hasDirectory" instead.
</panel>

<panel  header="**33 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/329#discussion_r480202074" expanded>

I think this part is great since it is easy to read. Just some nitpicking, though, I think it is better if your error message is more specific so the user can know the problem! 👍 
</panel>

<panel  header="**34 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/329#discussion_r480204280" expanded>

Perhaps it is better to rename the method to "readDataToList"?
</panel>

<panel  header="**35 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/329#discussion_r480205777" expanded>

Assuming these are constants (since they won't change), I think the variable names must be all uppercase (e. g. DIVIDER and LOGO)
</panel>

<panel  header="**36 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/329#discussion_r480206802" expanded>

To make this variable sounds more boolean, you might want to consider renaming this to isExit.
</panel>

<panel  header="**37 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/329#discussion_r480207793" expanded>

I see that you do taskList.getListSize() several times. I think it is better to store it as a variable listSize to avoid calling getListSize() multiple times.
</panel>

<panel  header="**38 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/329#discussion_r480209779" expanded>

It's a good practice to avoid using * when importing. You should only import statements that you are going to use! 😄 
</panel>

<panel  header="**39 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/329#discussion_r480210870" expanded>

May I ask what is GetCommand for? Correct me if I'm wrong but assuming this is for finding task, perhaps you might want to consider renaming this class to FindCommand to avoid confusion. Since get is a bit ambiguous (can also be interpreted as a verb).
</panel>

<panel  header="**40 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/329#discussion_r480214063" expanded>

May I ask what is the difference between both of these commands? Maybe you want to rename it something more intuitive (SHOW, FIND_KEYWORD, FIND_DATE, etc) ? 
</panel>

<panel  header="**41 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/329#discussion_r480216588" expanded>

You might want to change this class to an abstract class because it doesn't make sense to create a new a Task. It is algo a good practice in OOP because it reduces code repetition.
</panel>

<panel  header="**42 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/329#discussion_r480217886" expanded>

Don't forget the access modifier! 😄 It is important as attributes should be declared private when possible and neglecting access modifier makes the attributes implicitly public.
</panel>

<panel  header="**43 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/329#discussion_r480218697" expanded>

You might want to consider renaming this to comply with the coding standard. Method name should be a verb and intuitive.
</panel>

</panel>

<panel type="info" header="### 8. AUGUSTINE KAU ZHI CONG `@augustinekau` (43 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/364#discussion_r480110416" expanded>

Should there be 'No blank line between the documentation block and the method/class'?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/364#discussion_r480113508" expanded>

Naming of fold might be unclear?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/364#discussion_r480113877" expanded>

naming of var list can be more specific?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/364#discussion_r480114139" expanded>

Will it be clearer if 'current' is named 'currentTask' instead?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/364#discussion_r480114939" expanded>

Is 'finsih' a typo?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/364#discussion_r480115480" expanded>

Naming of method 'tasks' can be misleading. Perhaps it should 'explain the named entity to the reader accurately and at a sufficient level of detail.'?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/364#discussion_r480116260" expanded>

Naming of var 'type' is not descriptive? 
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/364#discussion_r480116662" expanded>

Will it be better if it is "currentTask" instead of "current"?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/364#discussion_r480117061" expanded>

should it be "keyword" instead of "keyWord"?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/364#discussion_r480117915" expanded>

"finding" is not descriptive of what it does?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/252#discussion_r480092998" expanded>

I think is good to have the header <h></h> and @author tag in the JavaDoc of the class.
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/252#discussion_r480094134" expanded>

Should there be a fullstop behind each param line because "Punctuation behind each parameter description"
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/252#discussion_r480096517" expanded>

Should there be an 'empty line between description and parameter section'?
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/252#discussion_r480096741" expanded>

Should there be an 'empty line between description and parameter section'?
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/252#discussion_r480097064" expanded>

Maybe can put as "@param args Unused." instead?
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/252#discussion_r480097562" expanded>

Should there be an 'empty line between description and parameter section'?
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/252#discussion_r480097613" expanded>

Should there be an 'empty line between description and parameter section'?
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/252#discussion_r480097682" expanded>

Should there be an 'empty line between description and parameter section'?
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/252#discussion_r480097879" expanded>

Should there be an 'empty line between description and parameter section'?
</panel>

<panel  header="**20 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/252#discussion_r480098686" expanded>

Should there be an 'empty line between description and parameter section'?
</panel>

<panel  header="**21 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/252#discussion_r480098757" expanded>

Should there be an 'empty line between description and parameter section'?
</panel>

<panel  header="**22 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/252#discussion_r480098862" expanded>

Should there be an 'empty line between description and parameter section'?
</panel>

<panel  header="**23 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/252#discussion_r480098933" expanded>

Should there be an 'empty line between description and parameter section'?
</panel>

<panel  header="**24 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/252#discussion_r480099170" expanded>

Should there be an 'empty line between description and parameter section'?
</panel>

<panel  header="**25 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/252#discussion_r480099208" expanded>

Should there be an 'empty line between description and parameter section'?
</panel>

<panel  header="**26 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/252#discussion_r480099408" expanded>

Should there be an 'empty line between description and parameter section'?
</panel>

<panel  header="**27 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/252#discussion_r480099442" expanded>

Should there be an 'empty line between description and parameter section'?
</panel>

<panel  header="**28 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/252#discussion_r480099729" expanded>

Should there be a fullstop behind each param line because "Punctuation behind each parameter description"
</panel>

<panel  header="**29 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/252#discussion_r480099855" expanded>

Should there be an 'empty line between description and parameter section'?
</panel>

<panel  header="**30 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/252#discussion_r480099962" expanded>

Should there be a fullstop behind each param line because "Punctuation behind each parameter description"
</panel>

<panel  header="**31 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/252#discussion_r480100265" expanded>

Should there be a description for return?
</panel>

<panel  header="**32 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/252#discussion_r480100353" expanded>

Should there be an 'empty line between description and parameter section'?
</panel>

<panel  header="**33 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/252#discussion_r480100542" expanded>

Should there be an 'empty line between description and parameter section'?
</panel>

<panel  header="**34 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/252#discussion_r480100686" expanded>

Should there be a fullstop behind each param line because "Punctuation behind each parameter description"
</panel>

<panel  header="**35 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/252#discussion_r480101042" expanded>

Should there be an 'empty line between description and parameter section'?
</panel>

<panel  header="**36 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/252#discussion_r480101148" expanded>

Should there be an 'empty line between description and parameter section'?
</panel>

<panel  header="**37 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/252#discussion_r480101205" expanded>

Should there be an 'empty line between description and parameter section'?
</panel>

<panel  header="**38 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/252#discussion_r480101322" expanded>

Should there be an 'empty line between description and parameter section'?
</panel>

<panel  header="**39 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/252#discussion_r480101653" expanded>

Should the description for return be empty?
</panel>

<panel  header="**40 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/252#discussion_r480102138" expanded>

Should there be an 'empty line between description and parameter section'?
</panel>

<panel  header="**41 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/252#discussion_r480102375" expanded>

Should there be an 'empty line between description and parameter section'?
</panel>

<panel  header="**42 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/252#discussion_r480103224" expanded>

Should be "Returns..." as "In method header comments, the first sentence should start in the form Returns ..., Sends ..., Adds ... (not Return or Returnning etc.)"?
</panel>

<panel  header="**43 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/252#discussion_r480103299" expanded>

Should be "Returns..." as "In method header comments, the first sentence should start in the form Returns ..., Sends ..., Adds ... (not Return or Returnning etc.)"?
</panel>

</panel>

<panel type="info" header="### 9. ANIKESH BHUVANESHWARAM `@Ebolaeater` (42 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/433#discussion_r480805260" expanded>

You could consider packaging the code to improve readability
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/433#discussion_r480806617" expanded>

Probably one thing you could consider could be to extend ArrayList from taskManager to reduce the amount of code needed to be written
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/433#discussion_r480808492" expanded>

The parser can possibly be placed in its own class to aid with the parsing of the dateTime objects when they start coming in
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/433#discussion_r480809347" expanded>

Please consider writing javadocs to aid people reading your code
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/433#discussion_r480811379" expanded>

Good use of overloading the toString method
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/433#discussion_r480813476" expanded>

You could probably consider creating custom exceptions.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/433#discussion_r480816423" expanded>

One thing to consider here would be that you could override your toString method to save time and code later on
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/317#discussion_r480273701" expanded>

The javadocs are quite professional since you added the version as well as your name. 
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/317#discussion_r480274303" expanded>

Maybe there's no need to mention the package name. One suggestion could be to package your code more.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/317#discussion_r480274953" expanded>

Does this WhileLoop: do anything in the code? I have never seen it before so I am not sure
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/317#discussion_r480275229" expanded>

Probably using shorter variable names could boost code readability.
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/317#discussion_r480276120" expanded>

One suggestion would be to use the parser class to entirely take care of the logic as well as making full use of the UI class to scan in your input.
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/317#discussion_r480278739" expanded>

You could try creating custom exception in which case you would not have to do a nested try and catch and instead you would get to do something like 
'''
try {
    Your code
} catch (IllegalFormatException ex) {
     System.out.println(Error Message);
} catch (IllegalTaskException ex) {
     System.out.println(Error message);
}
'''
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/317#discussion_r480280032" expanded>

Just to repeat the point that making a custom exception would be a really great idea.
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/317#discussion_r480281240" expanded>

Probably you could consider how to differentiate between Event, Deadline by overloading a method in your Task class instead of using instanceOf. Using instanceOf is normally a last resort so please consider using an overloaded method to distinguish between a deadline, task and even todo.
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/317#discussion_r480282043" expanded>

Probably putting it into an exception package would improve like understanding of your code especially when gradle is implemented. 
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/317#discussion_r480283077" expanded>

Good use of javadocs again. Probably a bit more description might be needed but otherwise it is good practise to have documentation on almost all your non trivial methods and constructors.
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/317#discussion_r480284140" expanded>

Maybe remove this constructor since Java does it for you by default
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/317#discussion_r480284344" expanded>

Probably a typo but String is repeated twice here
</panel>

<panel  header="**20 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/317#discussion_r480285412" expanded>

One big suggestion from me would be to expand on what your parser class does. So far from what I can see its more of a String trimmer or splitter which is quite a basic functionality. Think about how you could build on it like using the parser to get your LocalDateTime object from input and so on.
</panel>

<panel  header="**21 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/317#discussion_r480286010" expanded>

Probably removing the javadocs for trivial methods like getters and setters. This is just a small suggestion.
</panel>

<panel  header="**22 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/317#discussion_r480287071" expanded>

Please reconsider the use of instanceOf.
</panel>

<panel  header="**23 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/317#discussion_r480287802" expanded>

One way to reduce this duplicate code would be to overload the toString method in your TaskList class.
</panel>

<panel  header="**24 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/317#discussion_r480289387" expanded>

Very comprehensive set of methods to show error messages and so on. Probably recieving user input here would fit in well with the OOP principles and increase modularity of your code.
</panel>

<panel  header="**25 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/317#discussion_r480295372" expanded>

Quite a few methods tested but probably the name of the Test file is a bit misleading since you are testing more of the tasks than the actual duke functionality. Probably renaming it to TaskTest would be more apt.
</panel>

<panel  header="**26 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/252#discussion_r480297281" expanded>

Love the twist given to the name. 👍 
</panel>

<panel  header="**27 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/252#discussion_r480298445" expanded>

Could consider removing javadocs for functions like public static void main which are ubiquitous in Java.
</panel>

<panel  header="**28 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/252#discussion_r480299106" expanded>

More detailed description of each param would aid readability of the code
</panel>

<panel  header="**29 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/252#discussion_r480299800" expanded>

Could consider making a custom exception here instead of throwing a DuckieException.
</panel>

<panel  header="**30 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/252#discussion_r480300346" expanded>

Instead of repeating the input.toLowerCase() maybe you could assign it to a variable at the start itself making it more readable.
</panel>

<panel  header="**31 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/252#discussion_r480301027" expanded>

The use of a command class is very good OOP practice. 👍  
</panel>

<panel  header="**32 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/252#discussion_r480302185" expanded>

One suggestion here could be to consider the fact that the mkdirs and createNewFile functions already make a new directory/file if it doesnt exist. 
</panel>

<panel  header="**33 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/252#discussion_r480303444" expanded>

I am sorry but I noticed that you have copy pasted this same comment like multiple times so far. Mentioning it once or twice already makes the point I feel.
</panel>

<panel  header="**34 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/252#discussion_r480305083" expanded>

Sorry for pointing out a trivial issue but the previous function of getHorizLine would probably be enough for your code to function. Probably consider removing the method. 
</panel>

<panel  header="**35 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/252#discussion_r480306094" expanded>

Nice usage of packaging. 👍 
</panel>

<panel  header="**36 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/252#discussion_r480307777" expanded>

It depends on your reasoning as well but this approach would probably have a greater run time than perhaps just storing all the lists in the end when the user inputs the "bye" command.  
</panel>

<panel  header="**37 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/252#discussion_r480308690" expanded>

Good use of Javadocs
</panel>

<panel  header="**38 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/252#discussion_r480310576" expanded>

There might not really be a need to override this method since you won't be really printing out the exception object created.
</panel>

<panel  header="**39 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/252#discussion_r480311224" expanded>

Probably you could consider initializing the INDENT variable just once in the DuckieException and then using it from there in all the other exceptions that extend it.
</panel>

<panel  header="**40 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/252#discussion_r480313980" expanded>

Could consider if TaskList should be placed inside the task package or along side the duckie class
</panel>

<panel  header="**41 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/252#discussion_r480315183" expanded>

Could consider getting rid of this test class since it actually is just a dummy test that doesn't really test any of the features in your actual code
</panel>

<panel  header="**42 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/252#discussion_r480315554" expanded>

Very comprehensive testing of tasklist. 👍 
</panel>

</panel>

<panel type="info" header="### 10. ZHANG WANLIN `@ZhangWanlin98` (38 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/439#discussion_r482043556" expanded>

Is it better and clearer if sc is renamed as scanner?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/439#discussion_r482043999" expanded>

Will it make more sense if the variable renamed as listOfTasks?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/439#discussion_r482044796" expanded>

Is it better and clearer if ans is renamed to answer?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/439#discussion_r482046188" expanded>

Is it better and clearer if d is renamed as deadlineTask or other specific name?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/439#discussion_r482046904" expanded>

Is it better and clearer if e is renamed as event or other specific names?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/439#discussion_r482048056" expanded>

Would it be better if each + sign indents a new line? 
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/439#discussion_r482048773" expanded>

Is it better if the @Override of toString() can be specified?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/439#discussion_r482050596" expanded>

Is it better to place a white space between the close bracket and the open curly brace?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/439#discussion_r482050726" expanded>

Is it better to place a white space between the close bracket and the open curly brace?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/439#discussion_r482050828" expanded>

Is it better to place a white space between the close bracket and the open curly brace?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/439#discussion_r482051686" expanded>

Is it better to place a white space between the if and open bracket, as well as between the close bracket and the open curly brace?
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/310#discussion_r482030747" expanded>

Is it better if an empty line is placed to separate the code above the comment and the comment?
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/310#discussion_r482031715" expanded>

Is it better if the access of the constructor is specified? 
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/310#discussion_r482032871" expanded>

Is it better if an empty line is placed separate the description and the param explanation?
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/310#discussion_r482033353" expanded>

Is it better to use a more formal java doc to explain the method?
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/310#discussion_r482033986" expanded>

Is it better if we can have an empty line to separate the description and the @param?
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/310#discussion_r482034721" expanded>

Is it better if the access of the constructor is specified?
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/310#discussion_r482035631" expanded>

Is it better we have an empty line to separate the description and @param?
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/310#discussion_r482036244" expanded>

Is it more specific to rename c as command?
</panel>

<panel  header="**20 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/310#discussion_r482036853" expanded>

Is it better if the @Override can be specified?
</panel>

<panel  header="**21 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/310#discussion_r482037308" expanded>

Is it better if the @Override can be specified?
</panel>

<panel  header="**22 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/310#discussion_r482038031" expanded>

Is it better if you specify the access?
</panel>

<panel  header="**23 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/310#discussion_r482038694" expanded>

Is it better to have a formal java doc?
</panel>

<panel  header="**24 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/310#discussion_r482039163" expanded>

Is it better if the @Override can be specified?
</panel>

<panel  header="**25 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/310#discussion_r482039381" expanded>

Is it better if the @Override can be specified?
</panel>

<panel  header="**26 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/99#discussion_r482058690" expanded>

Is it more readable if tmp is rename as a specific word?
</panel>

<panel  header="**27 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/99#discussion_r482059098" expanded>

Is it more readable if db is rename as a specific word?
</panel>

<panel  header="**28 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/99#discussion_r482060126" expanded>

Maybe you also want to have an explanation on the parameter?
</panel>

<panel  header="**29 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/99#discussion_r482061171" expanded>

Is is better if an empty line can be placed to separate the description and @param?
</panel>

<panel  header="**30 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/99#discussion_r482061789" expanded>

Would it be more readable and clearer if there is an empty line in between each case?
</panel>

<panel  header="**31 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/99#discussion_r482062369" expanded>

Maybe it is better to break down this long method into different shorter methods?
</panel>

<panel  header="**32 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/99#discussion_r482063211" expanded>

Is it better if the empty line is closed?
</panel>

<panel  header="**33 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/99#discussion_r482064315" expanded>

An empty line can be added to separate the description and the @param
</panel>

<panel  header="**34 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/99#discussion_r482064581" expanded>

Is it better if an empty line can be added to separate the description and the @param?
</panel>

<panel  header="**35 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/99#discussion_r482065041" expanded>

Is it better if an empty line can be added to separate the description and the @param?
</panel>

<panel  header="**36 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/99#discussion_r482065555" expanded>

Maybe you want to add an empty line to separate the two methods so it is more readable?
</panel>

<panel  header="**37 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/99#discussion_r482066929" expanded>

Would it be more readable if your can declare each string as a variable?
</panel>

<panel  header="**38 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/99#discussion_r482069176" expanded>

Can have an empty line to separate the import and main code
</panel>

</panel>

<panel type="info" header="### 11. NOORUL AZLINA D/O H U `@itssodium` (36 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/363#discussion_r481014377" expanded>

Perhaps it would be better to separate the import statements.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/363#discussion_r481016999" expanded>

Good coding standard for variables
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/363#discussion_r481018705" expanded>

Perhaps you can try to rewrite the name of this class name because I don't really understand it.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/363#discussion_r481019505" expanded>

Perhaps you can try changing the indentation, seems to be a bit off.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/363#discussion_r481019763" expanded>

Perhaps you can consider deleting this white space.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/363#discussion_r481026372" expanded>

Perhaps you can consider deleting white spaces
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/363#discussion_r481028886" expanded>

Seems like a wrong JavaDoc comment, you may want to change it.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/363#discussion_r481029565" expanded>

Correct naming style of constants 👌
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/363#discussion_r481029905" expanded>

Seems like a wrong JavaDoc comment, you may want to change it.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/363#discussion_r481037489" expanded>

Seems like a wrong JavaDoc comment, you may want to change it.
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/363#discussion_r481037627" expanded>

Seems like a wrong JavaDoc comment, you may want to change it.
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/363#discussion_r481039979" expanded>

Sometimes you have a gap between the above line and next sometimes you don't, perhaps you want to look into it.
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/363#discussion_r481040236" expanded>

Seems like a wrong JavaDoc comment, you may want to change it.
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/363#discussion_r481040336" expanded>

Seems like a wrong JavaDoc comment, you may want to change it.
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/363#discussion_r481040405" expanded>

Seems like a wrong JavaDoc comment, you may want to change it.
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/363#discussion_r481189027" expanded>

Perhaps you can think about separating the import statements. 
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/363#discussion_r481194462" expanded>

Perhaps try to separate import statements, for better readability.
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/242#discussion_r481056906" expanded>

May consider deleting this white line
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/242#discussion_r481067310" expanded>

Code length seems to be more than 30 lines.

</panel>

<panel  header="**20 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/242#discussion_r481067997" expanded>

Wouldn't it be better to have a better name for time instead of at?
</panel>

<panel  header="**21 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/242#discussion_r481069555" expanded>

Perhaps it would be better to have a clearer name for by.
</panel>

<panel  header="**22 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/242#discussion_r481070652" expanded>

Most of your classes do not have this unnecessary white lines of code at the end. Wouldn't it be better to remove them? I have noticed these in some other classes as well.
</panel>

<panel  header="**23 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/242#discussion_r481073092" expanded>

Clear method names throughout this class. 👍🏽
</panel>

<panel  header="**24 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/242#discussion_r481073594" expanded>

Wouldn't it be better to have an else statement, so that it is easier to read?
</panel>

<panel  header="**25 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/242#discussion_r481074883" expanded>

Maybe you can try changing the name of the method to, formatForList for easier understanding?
</panel>

<panel  header="**26 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/242#discussion_r481075298" expanded>

Good job in your method names, extremely clear 👍🏽.
</panel>

<panel  header="**27 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/242#discussion_r481076005" expanded>

I think there is a spelling error in this JavaDoc statement.
</panel>

<panel  header="**28 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/242#discussion_r481076448" expanded>

Instead of description wouldn't it be better to have a clearer name
</panel>

<panel  header="**29 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/242#discussion_r481077409" expanded>

Perhaps it would be better to avoid such complex expressions. It is also better and more natural to test for Files.exists(path) rather than !Files.exists(path). 
</panel>

<panel  header="**30 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/242#discussion_r481077826" expanded>

Isn't this an unnecessary white space? I have noticed this in quite a number of places.
</panel>

<panel  header="**31 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/242#discussion_r481080597" expanded>

Would be better to phrase this into isParseDelete? Applies to the methods above as well.
</panel>

<panel  header="**32 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/242#discussion_r481081967" expanded>

Perhaps better to add else block as well, to improve readability.
</panel>

<panel  header="**33 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/242#discussion_r481118196" expanded>

Sometimes you have a gap between the class definition and java doc and sometimes you don't. Perhaps you want to look into it
</panel>

<panel  header="**34 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/242#discussion_r481122570" expanded>

May consider adding else block for easier code readability, have noticed this in other classes as well.
</panel>

<panel  header="**35 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/242#discussion_r481135377" expanded>

Perhaps it would be better to separate the import statements.
</panel>

<panel  header="**36 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/242#discussion_r481136288" expanded>

Perhaps it would be better to separate import statements.
</panel>

</panel>

<panel type="info" header="### 12. YE JIADONG `@yejiadong` (33 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/151#discussion_r480796285" expanded>

Should there be an empty line between description and params?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/151#discussion_r480799479" expanded>

Same as above, might be good to leave an empty line between description and params/return statements.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/151#discussion_r480801918" expanded>

Might want to avoid deep nesting. Possible to separate the unusual conditions and exit separately in an earlier block.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/151#discussion_r480805397" expanded>

Might want to use "tasks" here to indicate plurality as tasklist was used previously.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/135#discussion_r479920458" expanded>

 Should the imported classes be listed explicitly?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/135#discussion_r479920553" expanded>

Should the imported classes be listed explicitly?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/135#discussion_r479981479" expanded>

Should the imported classes be listed explicitly? I noticed the same issue in several other places too.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/135#discussion_r479982353" expanded>

Perhaps consider shifting private to the front of static to be more consistent with the other variables? 
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/135#discussion_r479982947" expanded>

Might be better to shift this below the static variable.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/135#discussion_r479985512" expanded>

Might be good to add in punctuation at the end. I noticed the same issue in several other places too.
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/135#discussion_r479987136" expanded>

Should there be an empty line between description and parameter section? I noticed the same issue in several other places too.
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/135#discussion_r479990899" expanded>

Might want to start first sentence with "Parses" instead. I noticed this in other areas as well.
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/135#discussion_r479991891" expanded>

Perhaps consider breaking the line before the operator "+"?
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/135#discussion_r479992339" expanded>

Is there any header documentation for this Ui class?
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/135#discussion_r479993722" expanded>

Is there any header documentation for this class?
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/135#discussion_r479994219" expanded>

Consider sorting imports by lexicographical order. Noticed this in a couple of areas as well.
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/135#discussion_r479995198" expanded>

Perhaps enclose the if blocks with curly braces?
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/135#discussion_r479995850" expanded>

Consider using a clearer variable name instead of "that".
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/135#discussion_r479996906" expanded>

Any idea when the DukeException will be thrown?
</panel>

<panel  header="**20 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/135#discussion_r479997805" expanded>

Might want to consider breaking this line as it is longer than 120 characters.
</panel>

<panel  header="**21 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/135#discussion_r479998510" expanded>

Might want to consider breaking this line for better clarity.
</panel>

<panel  header="**22 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/135#discussion_r479998795" expanded>

Should the white space before the trailing semi-colon be removed?
</panel>

<panel  header="**23 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/135#discussion_r479999272" expanded>

Should the white space before the trailing semi-colon be removed? Noticed this in a couple of other areas as well.
</panel>

<panel  header="**24 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/135#discussion_r479999619" expanded>

Might want to add a space before the opening curly brace.
</panel>

<panel  header="**25 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/135#discussion_r479999998" expanded>

Is it possible to break this line up?
</panel>

<panel  header="**26 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/135#discussion_r480000287" expanded>

Perhaps add in the curly braces here? Noticed this in a couple of areas.
</panel>

<panel  header="**27 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/135#discussion_r480000907" expanded>

Consider breaking this line up.
</panel>

<panel  header="**28 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/135#discussion_r480001302" expanded>

Perhaps public can be shifted in front of abstract. Noticed this in a couple of areas as well.
</panel>

<panel  header="**29 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/135#discussion_r480001643" expanded>

Any idea what is the accessibility of this variable?
</panel>

<panel  header="**30 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/135#discussion_r480001852" expanded>

Perhaps break this line before the && operator?
</panel>

<panel  header="**31 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/135#discussion_r480002345" expanded>

Is this an unused import?
</panel>

<panel  header="**32 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/135#discussion_r480004203" expanded>

Is there more than one whitespace between the "=" and "new"? Noticed the same issue below as well.
</panel>

<panel  header="**33 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/135#discussion_r480004433" expanded>

Any reason why this method getStore is left blank? Noticed a couple of methods below left blank as well.
</panel>

</panel>

<panel type="info" header="### 13. KOR MING SOON `@kormingsoon` (33 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/248#discussion_r480982682" expanded>

Think you can create subclasses for Command such as ListCommand / DeleteCommand to handle the various inputs. Should help to make the code more readable and better abstracted. Think that will help to optimize and shorten your code, and prevent having too many constructors for similar purposes 
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/248#discussion_r480983190" expanded>

No issues, but just a suggestion to use String.format
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/248#discussion_r480984070" expanded>

I have never seen this syntax before? Is it an meant to be commented out?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/248#discussion_r480984383" expanded>

Great use of switch case, very readable!
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/248#discussion_r480989407" expanded>

I think you can afford to use "private" instead of "protected" since there is not subclass for Event.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/248#discussion_r480990884" expanded>

this throwing of error can be abstracted to a subclass DoneCommand (for example), so you can shorten the code for your Parser
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/248#discussion_r480991472" expanded>

Just a suggestion: instead of checking for length, use substring to split the code, thereafter, check if empty. 
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/248#discussion_r480992485" expanded>

think this is not required in the code? (or do you face the return nothing error?)
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/248#discussion_r480993235" expanded>

Just a suggestion: I used enum to create TaskType and use Tasktype as part of the printing (further leverage on Liskov Sub Principle)
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/248#discussion_r480994023" expanded>

Javadoc can be added here too
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/248#discussion_r480994179" expanded>

access modifier for your methods can be included
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/248#discussion_r480994818" expanded>

I think can be private instead of protected as your Ui class has no subclass
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/248#discussion_r480995061" expanded>

Like the abstraction for readability!
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/248#discussion_r481608487" expanded>

Wow, thanks for sharing man
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/242#discussion_r481611692" expanded>

feel like your if else is too late, probably can abstract out some stuff to shorten the code.
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/242#discussion_r481615979" expanded>

Great abstraction, the name is very readable
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/242#discussion_r481616850" expanded>

I think you can try catch (DukeEmptyEventException  | DukeTimeParseException  | ... ) to catch exceptions
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/242#discussion_r481617318" expanded>

Great naming man
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/68#discussion_r480997685" expanded>

Think you can javadoc here if you want LOL
</panel>

<panel  header="**20 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/68#discussion_r480998361" expanded>

Like the formatting
</panel>

<panel  header="**21 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/68#discussion_r480999036" expanded>

Interesting way of running Duke haha
</panel>

<panel  header="**22 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/68#discussion_r480999190" expanded>

Ooo good use of StringBuilder
</panel>

<panel  header="**23 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/68#discussion_r480999534" expanded>

Access modifier can be added here
</panel>

<panel  header="**24 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/68#discussion_r480999937" expanded>

Would suggest to use this.list(), was abit confused where the method came from when I read it initially
</panel>

<panel  header="**25 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/68#discussion_r481001069" expanded>

I would recommend you to create the Command class to better abstract commands such as ListCommand DeleteCommand etc, will help in shortening Parser.java.
</panel>

<panel  header="**26 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/68#discussion_r481001763" expanded>

I would recommend concatenating the string or using your StringBuilder to construct your input as a whole instead of appending so many times
</panel>

<panel  header="**27 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/68#discussion_r481002295" expanded>

Access modifier
</panel>

<panel  header="**28 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/68#discussion_r481003076" expanded>

access modifier
</panel>

<panel  header="**29 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/68#discussion_r481004601" expanded>

great use of static variables here
</panel>

<panel  header="**30 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/68#discussion_r481004749" expanded>

access modifier
</panel>

<panel  header="**31 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/68#discussion_r481006295" expanded>

think you can abstract a separate method here
</panel>

<panel  header="**32 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/68#discussion_r481007216" expanded>

feels like there are some repetition you can abstract to the super class.
</panel>

<panel  header="**33 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/68#discussion_r481007666" expanded>

nice testing
</panel>

</panel>

<panel type="info" header="### 14. HUANG CHENGYU `@HCY123902` (31 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/141#discussion_r479874261" expanded>

Will it be better if there can be more details about the file and path in the parameter description? Additionally, will it be better if there can be a full stop to make the parameter description a sentence?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/141#discussion_r479874975" expanded>

Should there be a new line between the description of the method and the description of the parameter?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/141#discussion_r479875203" expanded>

Looks good but it seems that the full stop on this line is missing.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/141#discussion_r479875818" expanded>

I am not sure whether it will be better to start the method description with a verb instead.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/141#discussion_r479875885" expanded>

I am not sure whether it will be better to start the method description with a verb instead.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/141#discussion_r479876016" expanded>

It seems that the pull stop is missing here.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/141#discussion_r479876056" expanded>

It seems that the pull stop is missing here.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/141#discussion_r479876226" expanded>

The comment looks good and clear.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/141#discussion_r479876626" expanded>

Will the new line between the method signature and the variable declaration be necessary?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/141#discussion_r479877330" expanded>

It seems that punctuation is missing here. I noticed that are also similar problems in several other places.
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/141#discussion_r479877889" expanded>

It seems that this line may be a bit too long here. Will it be better to start a new line?
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/141#discussion_r479878623" expanded>

Will it better to include the method comment here?
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/141#discussion_r479878791" expanded>

Will it be better to include a method comment here?
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/141#discussion_r479879228" expanded>

I am not sure whether there should be a space between the case content and the colon here.
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/141#discussion_r479879780" expanded>

Will it be better to start the class description with the class name here? I have also noticed similar problems in several other places.
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/141#discussion_r479880165" expanded>

Will it be better if there can be a new line between the description of the method and the description of the parameter? I have also noticed similar problems in several other places.
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/24#discussion_r479882079" expanded>

Will it be better if there can be a new line between the description of the method and the description of the parameter and the description of the result?
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/24#discussion_r479882275" expanded>

Will it be better if there can be a new line between the description of the method and the description of the parameter and the description of the result? I have noticed similar problems in several other places.
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/24#discussion_r479882852" expanded>

Will it be better to include a default section here?
</panel>

<panel  header="**20 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/24#discussion_r479883389" expanded>

Will it be better to give a more descriptive name for the method, such as identifying the command elements and evaluating the command?
</panel>

<panel  header="**21 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/24#discussion_r479883504" expanded>

Will it be better to include the keyword else here?
</panel>

<panel  header="**22 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/24#discussion_r479883594" expanded>

Will it be better to include the keyword else here? I have also noticed similar problems in several other places. 
</panel>

<panel  header="**23 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/24#discussion_r479883765" expanded>

It seems that the indentation needs to be adjusted a bit here.
</panel>

<panel  header="**24 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/24#discussion_r479883869" expanded>

Will it be better to include a keyword break here?
</panel>

<panel  header="**25 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/24#discussion_r479884060" expanded>

Will it be better to include a keyword break here? I have also noticed some similar problems in several other places.
</panel>

<panel  header="**26 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/24#discussion_r479884284" expanded>

Will it be better to give a more descriptive name for the method?
</panel>

<panel  header="**27 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/24#discussion_r479884771" expanded>

Will it be better to give a more descriptive name to the method, such as the name is directory present?
</panel>

<panel  header="**28 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/24#discussion_r479884848" expanded>

Will it be better to give a more descriptive name to the method, such as the name is file present?
</panel>

<panel  header="**29 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/24#discussion_r479885024" expanded>

Will it be better to give a more descriptive name to the method and include the sources of the task list in the name?
</panel>

<panel  header="**30 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/24#discussion_r479885183" expanded>

Will it be better to give an accessor to the variable here?
</panel>

<panel  header="**31 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/24#discussion_r479886261" expanded>

Will it be better to give a more descriptive name and include the information on which part of the command it represents?
</panel>

</panel>

<panel type="info" header="### 15. TAN PINXI `@FizzyAgent` (30 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/369#discussion_r480137760" expanded>

Would it be better if errors such as this were captured in your own exception?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/369#discussion_r480138302" expanded>

Please avoid using wildcard import statements. 
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/369#discussion_r480140467" expanded>

Hi please leave only 1 comment for repeated mistake. Under [Best practices for reviewing PRs](https://se-education.org/guides/guidelines/PRs-reviewing.html):
"No need to repeat the same comment many times. It's not the job of the reviewer to clean up after a sloppy author. If you notice the same problem in multiple places, after commenting an a few of them, you can simply say ... I noticed the same issue in several other places too."

</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/369#discussion_r480141218" expanded>

Maybe a more meaningful name "completeTask/markAsDone" would be more descriptive?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/369#discussion_r480142583" expanded>

You can consider using a more descriptive enum name such as "TaskType".
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/369#discussion_r480143648" expanded>

More extensive testing could be done in the future.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/149#discussion_r480130051" expanded>

This is cool but quite hard to read. Will if statements be more readable if you require more than 1 ternary operation?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/149#discussion_r480130709" expanded>

You can consider using trim() which should achieve similar outcome. 
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/149#discussion_r480132025" expanded>

You can consider using dateformat to reformat your date's presentation. Could potentially reduce errors and it is easier to catch exceptions. 
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/149#discussion_r480132739" expanded>

Is it a bit wasteful to create a method that's only for 1 exit command? Can consider using the "instance of" check to exit the app instead. 
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/54#discussion_r480022149" expanded>

Will it be better to name the class as "DukeException" or something more specific, since "CustomException" is too broad and does not inform us on the purpose of the exception?
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/54#discussion_r480022591" expanded>

Will it be better to store the tab spacing as a variable, since it is used in other functions as well?
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/54#discussion_r480022995" expanded>

Please avoid using wildcard import statements.
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/54#discussion_r480023288" expanded>

Please indent switch statements according to the Java style guide.
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/54#discussion_r480024769" expanded>

Do you need to check for index out of bounds for cases where u access part[1] e.g. user inputs "done" (just checking I'm not sure if it will cause an error)
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/54#discussion_r480025622" expanded>

Maybe you can consider try-catching the IOException here and throwing a CustomException with a customised message. This way you can better control the error messages. 
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/54#discussion_r480027102" expanded>

I'm not sure if catching all exceptions is recommended since it makes debugging harder. 
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/54#discussion_r480027578" expanded>

I feel that "by" is not a very descriptive variable name. 
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/54#discussion_r480028420" expanded>

I would recommend using the unicode encoding (/uXXX) instead of directly pasting it in as it might not display properly in some cases. 
</panel>

<panel  header="**20 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/54#discussion_r480028814" expanded>

Do you need to check that the user input a invalid taskIndex (e.g. -1 or too large)?
</panel>

<panel  header="**21 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/54#discussion_r480029519" expanded>

Can this be moved to the parent class instead?
</panel>

<panel  header="**22 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/54#discussion_r480030789" expanded>

Should this be renamed to "hasKeyword"
</panel>

<panel  header="**23 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/54#discussion_r480031002" expanded>

Do you need to check for invalid date formats?
</panel>

<panel  header="**24 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/54#discussion_r480056570" expanded>

Is protected necessary or will private be sufficient?
</panel>

<panel  header="**25 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/54#discussion_r480057128" expanded>

You can consider using ternary operations to condense this section.
</panel>

<panel  header="**26 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/33#discussion_r480118659" expanded>

Is it possible to perform the exit command without using a function, since it is the only command that meaningfully uses this function? You can consider using the "instance of" check to exit the app. 
</panel>

<panel  header="**27 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/33#discussion_r480119282" expanded>

Can "by" be a bit vague? You could use a more detailed variable name. 
</panel>

<panel  header="**28 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/33#discussion_r480121043" expanded>

Will a switch statement be more condensed in this case?
</panel>

<panel  header="**29 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/33#discussion_r480121429" expanded>

Do you need to include this inside every if block, or can you have 1 of this outside the block?
</panel>

<panel  header="**30 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/33#discussion_r480127419" expanded>

Do you need to mark both the task and the item in tasklist as complete? Since it's passed by reference, marking either as done should suffice (unless you cloned the task at some point).
</panel>

</panel>

<panel type="info" header="### 16. JONAS NG ZUO EN `@jonasngs` (29 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/445#discussion_r479963405" expanded>

Should these class variables be declared with a non-public access modifier to adhere to encapsulation principles? Perhaps you could consider using protected or private?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/445#discussion_r479969188" expanded>

Perhaps you could consider following the guidelines for Java coding standards when writing JavaDoc comments? I think you are missing a 'return parameter' for the JavaDoc comment, or perhaps is there any reason why you wrote the JavaDoc comments in the way you did? I observed the same issue in several other methods as well.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/445#discussion_r479973411" expanded>

Perhaps you could list out all the imported classes explicitly? I noticed the same issue in several other classes as well.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/445#discussion_r479974153" expanded>

Perhaps you could consider adding JavaDoc comments for class members as well?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/445#discussion_r479978114" expanded>

Perhaps you could add a whitespace after 'while'? The guidelines on Java coding standards states that Java reserved words should be followed by a white space.  I noticed this issue in other methods containing while, if and if-else blocks as well.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/445#discussion_r479981272" expanded>

Should there be an extra whitespace after the '&&' operator? I noticed the same issue in other areas as well.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/445#discussion_r479990473" expanded>

Perhaps you could use Egyptian style brackets for the 'for' loop? Also, maybe you can consider writing the 'if' block on the next line below the 'for' statement? I think this can make the code look cleaner and enhances readability.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/445#discussion_r479993062" expanded>

Perhaps the conditional else statement body should be put on a separate line, i.e line 128? Also, maybe you could wrap the body of the else statement in curly braces to enhance readability?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/445#discussion_r480021881" expanded>

Perhaps you can leave this constructor out since Java creates a default constructor if no constructor was declared. However, I do not think this is a serious issue. I noticed a similar issue in the Storage class below as well.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/445#discussion_r480024619" expanded>

Perhaps you could put the conditional if statement body on a separate line by moving the if block body to the next line, i.e line 33? I noticed this issue in several other areas as well.
Also, perhaps the 2 lines: arr.add(""); and continue; could be written in separate lines to enhance readability. 
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/445#discussion_r480027169" expanded>

Perhaps you can consider handling the caught exception in this catch block? Is there any specific reason why you chose not to handle the caught exception? I observed a similar issue in other methods as well, such as on line 65-66 in this same class.
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/445#discussion_r480035858" expanded>

Perhaps this method name is very ambiguous and does not give readers a clear idea on what variable is being retrieved? Perhaps you can use 'getTask' as the method name? I believe this provides more clarity as well. I noticed similar issues in other classes as well.
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/445#discussion_r480038127" expanded>

Perhaps you could shift this constructor to line 11 below the other constructor?  Placing a constructor at the bottom of the class might not be ideal for readability.
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/445#discussion_r480039177" expanded>

Perhaps line 9 could be removed so that the '@Test' annotation is directly above the junit test method? This might not be a serious issue though. I observed a similar issue for the TodoTest class below.
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/445#discussion_r480063359" expanded>

I like how all the class names in your code and clear, concise and adhered to the Java coding standards and naming conventions.
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/214#discussion_r480898496" expanded>

Perhaps you could add JavaDoc comments for classes? I noticed some other classes were missing JavaDoc comments as well.
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/214#discussion_r480903140" expanded>

Perhaps you could add an empty line after the JavaDoc header comment to separate the header and the parameter description? Also, I think you might have to add a full stop after all sentences in JavaDoc comments? I observed a similar issue in other JavaDoc comments.
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/214#discussion_r480904861" expanded>

If I am not wrong, I think abstract methods should require JavaDoc comments as well?
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/214#discussion_r480906790" expanded>

Perhaps you could add a whitespace after "if" since it is a Java reserved word? I noticed a similar issue in other areas well.
</panel>

<panel  header="**20 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/214#discussion_r480907086" expanded>

I think you should add a white space after "while" ? I observed a similar issue in other areas too.
</panel>

<panel  header="**21 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/214#discussion_r480908892" expanded>

Perhaps you could add a full stop after each sentence in JavaDoc comments? I think this issue was highlighted in the guidelines for Java coding standard. I observed a similar issue in other JavaDoc comments as well.
</panel>

<panel  header="**22 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/214#discussion_r480910879" expanded>

Perhaps you could consider writing the next if-else block immediately after the closing curly brace of the previous if-else block? I think this is a very minor issue still.
</panel>

<panel  header="**23 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/214#discussion_r480911665" expanded>

I think the first sentence of the JavaDoc header comment has to start on line 9?
</panel>

<panel  header="**24 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/214#discussion_r480914306" expanded>

I think you are missing a return description here?
</panel>

<panel  header="**25 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/214#discussion_r480917402" expanded>

I think there is a wrong indentation on line 208? I believe there should only be 4 spaces indentation.
</panel>

<panel  header="**26 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/214#discussion_r480919925" expanded>

If I am not wrong, I think the first letter of each sentence of the JavaDoc comments should be capitalized? I noticed a similar issue in other JavaDoc comments as well. Perhaps you could capitalize "given" and "message" in this case?
</panel>

<panel  header="**27 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/214#discussion_r480920690" expanded>

I think you are missing a JavaDoc header comment here?
</panel>

<panel  header="**28 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/214#discussion_r480922685" expanded>

Perhaps you could consider adding JavaDoc comments for class variables as well? Just a small suggestion!
</panel>

<panel  header="**29 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/214#discussion_r480926782" expanded>

I think the closing bracket and opening curly brace should be on line 36 together with the 'for' statement?
</panel>

</panel>

<panel type="info" header="### 17. LAU SIAW SAM `@silvernitro` (28 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/281#discussion_r481074906" expanded>

Since this is a constant, should we make its name all uppercase? 
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/281#discussion_r481079748" expanded>

Lint: See https://github.com/nus-cs2103-AY2021S1/ip/pull/281/files#r480009471
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/281#discussion_r481082062" expanded>

I like the concise name for the parameter here since it's a scratch variable :D
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/281#discussion_r481083343" expanded>

I think we're missing the method summary here, perhaps it'll be good to include one for readers?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/281#discussion_r481085728" expanded>

Just realised this is the case with the other class methods too 😬
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/281#discussion_r481086165" expanded>

Lint: See https://github.com/nus-cs2103-AY2021S1/ip/pull/281/files#r480009471
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/281#discussion_r481087402" expanded>

Lint: Perhaps we can add a whitespace after 'while' since its a reserved word?
'''suggestion
        while (task != null) {
'''
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/281#discussion_r481088524" expanded>

I'm not sure if this might help, but would it be good to include line breaks between logical pieces of code in this fxn to improve readability? :D
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/281#discussion_r481088812" expanded>

Same comment for the other methods in this class too 😬
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/281#discussion_r481090415" expanded>

Oops I actually feel like a short param name seems appropriate since this var is only used once in this one-liner fxn >< But I see your point here :D Perhaps adding javadocs to describe the param `i` might help instead? Just my two cents 😬
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/281#discussion_r481096096" expanded>

Could we use a verb for the method name?
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/281#discussion_r481096470" expanded>

See comment in `Deadline.java`
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/188#discussion_r481578143" expanded>

Suggestion: could we add logical line breaks to this fxn? Perhaps one way to section it could be:

- FXML loading logic

- Setting up of nodes

- Masking logic
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/188#discussion_r481585372" expanded>

Nit: Is the 2nd semicolon a typo? 😁 
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/188#discussion_r481587050" expanded>

I really like how everything here is at the same level of abstraction 👍 
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/188#discussion_r481591038" expanded>

To make the happy path more prominent, could we remove the redundant 'else' clause here?

'''suggestion
        if (!super.completed) {
            throw new IncompleteDukeCommandException("Add command was not completed.");
        }
        
        return String.format(
                    "Got it. I've added this task:\n  %s\nNow you have %d tasks in your list.\n",
                    createdTask.toString(),
                    remainingTaskCount);
'''
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/188#discussion_r481593315" expanded>

Perhaps we can name this `isCompleted` to make it sound more boolean-ish? 😄 
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/188#discussion_r481599389" expanded>

To avoid arrow-styled nested code, can we use 'else if' clauses instead of nesting the if-elses here?
'''suggestion
        boolean isExistingTasksEmpty = existingTasks.size() == 0;
        
        if (super.completed && isExistingTasksEmpty) {
            return "Congratulations! You don't have any tasks left to do.";
        } else if (super.completed && !isExistingTasksEmpty) {
            printout = "Here are the tasks in your list:\n";
            for (int i = 0; i < existingTasks.size(); i++) {
                printout += String.format("%d.%s\n", i + 1, existingTasks.get(i).toString());
            }
            return printout;
        }
'''
The new boolean variable is just an optional suggestion to make the conditionals easier to read :D
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/188#discussion_r481606650" expanded>

I like the constant names, they're very clear 👍 
</panel>

<panel  header="**20 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/188#discussion_r481610301" expanded>

I like that you've included a comment to explain the empty catch block 💯 
</panel>

<panel  header="**21 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/188#discussion_r481614785" expanded>

It took me a few seconds to realise that 1440 = no. of minutes a day (dumb me 😆 ). Perhaps we can declare a named constant for the no. of minutes in a day to make it easier on readers?

Totally optional and just my two-cents though! I understand that it's only used once here. But just wanted to throw it out there since the module dislikes magic numbers
</panel>

<panel  header="**22 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/188#discussion_r481617391" expanded>

🤣 
</panel>

<panel  header="**23 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/188#discussion_r481623389" expanded>

Suggestion: Can we refactor this as a guard clause and put it at the top (just below the first guard clause on line 57)? It could help make the happy path more prominent
</panel>

<panel  header="**24 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/188#discussion_r481625587" expanded>

The comment is great at explaining 👍  But since this is the case, perhaps you could just place the return statement in the catch block? Since we aim to avoid unnecessary empty catch blocks
'''suggestion
            // We attempt to parse the string as a LocalDate and compare it to the deadline date,
            // but upon failure, we perform a comparison with the deadline description.
            return searchParameter.contains(description) || description.contains(searchParameter);
        }

'''
</panel>

<panel  header="**25 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/188#discussion_r481629250" expanded>

Same comment as before: we can consider moving the return statement into the catch block
</panel>

<panel  header="**26 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/188#discussion_r481629929" expanded>

Could we name this `isCompleted` to make it sound more boolean-ish?
</panel>

<panel  header="**27 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/188#discussion_r481631362" expanded>

Perhaps we can name this `getTaskCount()` to make the method name a verb 
</panel>

<panel  header="**28 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/188#discussion_r481632598" expanded>

Could we make this a guard clause at the top of the method instead to make the happy path unindented and clearer? 
</panel>

</panel>

<panel type="info" header="### 18. CHRISTOPHER GOH ZHEN FUNG `@chrisgzf` (28 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/441#discussion_r483046182" expanded>

Not sure what issues this might cause in the future, but it might be safer to set it as your actual package name in the future.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/441#discussion_r483047336" expanded>

Since there are no classes inheriting from Event, should we set it to `private` first?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/441#discussion_r483047467" expanded>

Same as above
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/441#discussion_r483049372" expanded>

Do you want to catch more specific exceptions? Might be better to catch a `DateTimeParseException` instead.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/441#discussion_r483050296" expanded>

Might be worth using an enum for `errorType`, because it seems weird that you are comparing strings. Might lead to runtime improvements too.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/441#discussion_r483051278" expanded>

Same as above, should use `private`
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/441#discussion_r483052095" expanded>

'''suggestion
        String dateTime = Parser.getDateTime(by);
'''
We should be consistent and use camelCase for our variables.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/441#discussion_r483056009" expanded>

I feel the class name shouldn't sound imperative. Perhaps something like `DukeFileReader` (to prevent confusion with `FileReader`) would be better?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/441#discussion_r483057093" expanded>

Might be better to wrap this into either a try-with-resources or try-catch-finally, so that the `.close()` will be run regardless of whether an exception occurs or not. In this case, when a IOException occurs in the previous lines, the `bufferedReader.close()` won't actually be executed.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/441#discussion_r483057252" expanded>

Same as above
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/441#discussion_r483057390" expanded>

Same as above
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/441#discussion_r483058778" expanded>

+1 on Jia Xin's suggestions. Method names should start with a imperative verb.
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/441#discussion_r483059099" expanded>

Same as above
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/441#discussion_r483059412" expanded>

Let's try to avoid unnecessary use of `this` (from advanced style guide)
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/441#discussion_r483061128" expanded>

Same, avoid unnecessary use of `this`
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/376#discussion_r483064710" expanded>

Hmm, you should look into this... Or just manually rename the folder in your file browser.
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/376#discussion_r483066659" expanded>

I like how you allow users to pass in a customisable `filePath`. Might be useful to extend functionality in the future / cater for cases where the user cannot write to the `.jar` file's directory (e.g. if the app is living on a network share with tight permissions).
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/376#discussion_r483072272" expanded>

Try not to use `this` unnecessarily. According to the advanced style guide, 
<img width="993" alt="image" src="https://user-images.githubusercontent.com/4933577/92136179-49194f80-ee3e-11ea-9e49-5e90e3d1929b.png">

</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/376#discussion_r483075008" expanded>

Instead of specifically catching exceptions as part of your flow (in this case, to check if the file exists), we should manually refactor this part of the code to check for file existance, or even better, just use `.getParentFile().mkdirs()` and/or `.createNewFile()`, which are built in Java API methods that creates the files if they don't exist. Exceptions should be meant for error and ...exceptional cases.
</panel>

<panel  header="**20 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/376#discussion_r483077471" expanded>

Same as above. I think your code would look cleaner if you removed all unnecessary uses of `this`
</panel>

<panel  header="**21 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/376#discussion_r483080120" expanded>

Right now, I see many blocks of code where there is a huge list of exceptions to catch. Perhaps it's neater to refactor these exceptions to become a subclass of another Exception class? e.g. `DukeException` extends `Exception`, then make these extend `DukeException`. If the code is refactored that way, then you can just make use of substitutability and `catch (DukeException e)` instead of this long list.
</panel>

<panel  header="**22 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/376#discussion_r483081148" expanded>

Would be great if you could write more javadocs docstrings for public methods
</panel>

<panel  header="**23 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/376#discussion_r483081239" expanded>

Same as above
</panel>

<panel  header="**24 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/376#discussion_r483081970" expanded>

I feel this class name would sound better if it is made to sound less imperative, e.g. `InfoParser`
</panel>

<panel  header="**25 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/376#discussion_r483082751" expanded>

Might be better to use a method name with an imperative verb, e.g
'''suggestion
    public void setTaskListDidUpdate() {
'''
</panel>

<panel  header="**26 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/376#discussion_r483084355" expanded>

Refactoring your exceptions in the way I mentioned above will also make your docstrings cleaner
</panel>

<panel  header="**27 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/376#discussion_r483084987" expanded>

'''suggestion
        // DONE PORTION HERE----------------------------------------------------------
'''
Comments should have a space after '//'
</panel>

<panel  header="**28 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/376#discussion_r483086238" expanded>

Should wrap this in a try-with-resources or try-catch-finally, so that we can ensure that `.close()` is always run, regardless of whether exceptions are thrown or not.

Currently, if an IOException occurs in `writer.write`, `writer.close()` is skipped, and this might cause data integrity issues.
</panel>

</panel>

<panel type="info" header="### 19. TEE KOK SIANG `@teekoksiang` (27 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/428#discussion_r482063201" expanded>

Perhaps can split to multiple imports of duke classes?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/428#discussion_r482079913" expanded>

Perhaps Ui class does not need to aware of the TaskList class? 
Can consider Ui to display a message based on the provided arguments.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/428#discussion_r482084722" expanded>

Perhaps can use List interface instead of ArrayList class?
So, it can accept different kinds of implementation of List interface.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/428#discussion_r482094160" expanded>

Perhaps can abstract reading task from line to avoid duplicate check of task status and set the task as done?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/428#discussion_r482096918" expanded>

Can consider creating a file if the file is not found in the load method.
Do check for the spelling of the method name.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/428#discussion_r482103865" expanded>

Perhaps could handle the task message in each of the Task subclass?
For example, declaring a writeToFile method that returns a task message to be written to the file in the Task class. 
Then, overriding the method in Todo, Deadline and Event. 
Therefore, calling currentTask.writeToFile() will return the respective task message.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/428#discussion_r482106989" expanded>

setIsDone and markAsDone have similar functionality.
Can consider combining these two methods and move the doneString to the relevant class.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/428#discussion_r482111603" expanded>

Should Storage#createFile be called from the Storage#load method?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/428#discussion_r482113472" expanded>

Should Storage#storeFile be called after every command to save the task message in case of the application crash?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/428#discussion_r482118663" expanded>

Should there not be a space between the Javadoc comments and the override signature?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/428#discussion_r482119931" expanded>

I like the use of enum here, make it easy to refer to the different types of command. 👍 
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/428#discussion_r482123718" expanded>

Since this method covers a lot of logic, should it be abstract out to different method to improve the readability?
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/428#discussion_r482126033" expanded>

Can consider using try catch to handle the exception and display the error message? 
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/428#discussion_r482129688" expanded>

Recommend to close the scanner to explicitly deallocate the resources.
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/428#discussion_r482130743" expanded>

Variable name must be in camelCase.
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/428#discussion_r482133461" expanded>

Perhaps can check if the new deadline task is added to the task list? 
Can consider checking on the task list for other tests as well.
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/428#discussion_r483097671" expanded>

I mean can consider declaring `ArrayList<Task> tasks` as `List<Task> tasks`. 
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/428#discussion_r483100911" expanded>

Oh, I see. Perhaps can consider rewriting the whole task information to the file after every add, edit and delete operation.
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/34#discussion_r483573113" expanded>

`super()` with no argument will be called implicitly. Can consider omitting the `super()` here and it applies to the rest of the `Command` subclasses as well.
</panel>

<panel  header="**20 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/34#discussion_r483575637" expanded>

Perhaps can throw a `DukeException` when the command is incomplete.
Can consider throwing a `DukeException` and using try-catch to handle it from the caller of `AddDeadlineCommand#execute` and it applies to the rest of the `Command` subclasses as well.
</panel>

<panel  header="**21 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/34#discussion_r483581123" expanded>

`AddDeadlineCommand`, `AddEventCommand` and `AddTodoCommand` are very similar. Perhaps can combine these 3 classes to `AddTaskCommand`.
</panel>

<panel  header="**22 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/34#discussion_r483584933" expanded>

`System.exit(0)` exits current program before returning `ui.bye()`. Can consider move the command after calling the `ui.bye()`.
</panel>

<panel  header="**23 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/34#discussion_r483600680" expanded>

I like the exception handling of `storage.load()`. 👍 
</panel>

<panel  header="**24 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/34#discussion_r483612093" expanded>

Is it required to declare an empty constructor?
</panel>

<panel  header="**25 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/34#discussion_r483616690" expanded>

I like the use of `Constants.CommandType` enum together with switch-case, it greatly improves the readability of the codes.
</panel>

<panel  header="**26 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/34#discussion_r483618381" expanded>

Is it required to declare `List<Task>`?
</panel>

<panel  header="**27 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/34#discussion_r483626411" expanded>

I like the test coverage of `DukeException`. Perhaps can further test if the `DukeException` display the respective error message.
</panel>

</panel>

<panel type="info" header="### 20. LAM ZHI YUAN `@lamlaaaam` (27 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/349#discussion_r480033764" expanded>

Perhaps change the constants to all caps? e.g. BLANK, CLEAR, etc.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/349#discussion_r480034223" expanded>

Might want to change the variable name to something clearer?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/349#discussion_r480034361" expanded>

"done" seems like a boolean value, maybe try "isDone"?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/349#discussion_r480034856" expanded>

Perhaps extract out certain parts into helper methods? Currently this method seems too long and will only grow longer as more logic is added.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/349#discussion_r480034987" expanded>

Maybe split up this line as it is too long?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/349#discussion_r480035095" expanded>

A single line main function! Nice 👍 
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/349#discussion_r480035226" expanded>

Maybe remove the extra newline?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/349#discussion_r480035497" expanded>

Perhaps extract the magic number into a constant variable?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/349#discussion_r480035715" expanded>

Again, maybe consider breaking the method up into several smaller ones?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/349#discussion_r480036216" expanded>

This code block is getting close to an arrowhead style! Maybe try to refrain nesting too many try blocks?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/349#discussion_r480036661" expanded>

Parameters look quite long and there's many magic numbers, maybe split up the lines and use constants?
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/349#discussion_r480037123" expanded>

Perhaps change the method name to "printErrorMsg"?
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/349#discussion_r480037385" expanded>

Why does parsing "todo" and "event" expect an error command?
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/255#discussion_r480022891" expanded>

Perhaps a clearer variable name such as command?
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/255#discussion_r480023184" expanded>

A one line main function! Very nice 👍 
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/255#discussion_r480023625" expanded>

Maybe change the comment to a Javadoc format for consistency?
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/255#discussion_r480024459" expanded>

Perhaps extract the code blocks within each `if (t.isSomething())` out to separate functions? Otherwise as more task types add on, this method will get very long.
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/255#discussion_r480025084" expanded>

Maybe extract the magic number 7 out into a constant variable? Naming it would make what the 7 stands for clearer.
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/255#discussion_r480025255" expanded>

Nice breaking up the long line for clarity!
</panel>

<panel  header="**20 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/255#discussion_r480025907" expanded>

Maybe change the description to "prints goodbye text"? Currently the code block doesn't really exit the program.
</panel>

<panel  header="**21 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/255#discussion_r480026575" expanded>

Just a nitpick, maybe add a line break before the parameters?
</panel>

<panel  header="**22 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/255#discussion_r480027574" expanded>

Just a preference, but perhaps consider a switch?
</panel>

<panel  header="**23 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/255#discussion_r480028143" expanded>

I might be overlooking something, why is this a static method?
</panel>

<panel  header="**24 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/255#discussion_r480028521" expanded>

Again, might want to consider avoiding single letter variable names.
</panel>

<panel  header="**25 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/255#discussion_r480029388" expanded>

Perhaps consider grouping all static methods together?
</panel>

<panel  header="**26 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/255#discussion_r480030615" expanded>

Nitpicking, might want to add a period at the end and a newline?
</panel>

<panel  header="**27 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/255#discussion_r480030915" expanded>

Remember to add some unit testing!
</panel>

</panel>

<panel type="info" header="### 21. MASAGCA ERIS JACEY DUMASIS `@erisjacey` (27 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/327#discussion_r480064557" expanded>

Should this extra line break be here?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/327#discussion_r480064870" expanded>

Shouldn't `Task` and the proceeding `{` afterwards be separated by a single space?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/327#discussion_r480065471" expanded>

Perhaps the relevant `io` files could be listed and imported explicitly instead of using a wildcard import?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/327#discussion_r480066624" expanded>

Perhaps the relevant `io` files could be listed and imported explicitly instead of using a wildcard import?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/327#discussion_r480067190" expanded>

Perhaps `Task` and its proceeding `{` could have a space in between them?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/327#discussion_r480067476" expanded>

For each line 7 and 12, shouldn't there be a space between the closing parenthesis `)` and its proceeding brace `{`?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/155#discussion_r480070151" expanded>

Shouldn't it be `Runs` instead of `Run`?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/155#discussion_r480070800" expanded>

Perhaps you could import each class that you would require explicitly instead of using wildcard imports?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/155#discussion_r480071316" expanded>

Perhaps there could be spaces between each expression and its operator?

For example, line 43 could be changed to:
'''
return (type.equals(command.type)) && (description.equals(command.description))
'''
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/155#discussion_r480071663" expanded>

Perhaps this line could start with `* Contains information ...`?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/155#discussion_r480072080" expanded>

Perhaps you could import each class that you would require explicitly instead of using wildcard imports?
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/155#discussion_r480072293" expanded>

I noticed a similar issue regarding wildcard imports in several other places too.
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/155#discussion_r480072508" expanded>

I noticed a similar issue in several other places too.
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/155#discussion_r480072660" expanded>

Perhaps the extra line break could be removed here?
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/155#discussion_r480072999" expanded>

Is it necessary to import a class from the same package?
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/155#discussion_r480073435" expanded>

Perhaps you could do a line break **before** the operator, i.e.
'''
        this("java.tasks.Task not saved due to wrong format. ꉂ 'o´ ) Please specify the date in the following format: \n" 
                + "yyyy-mm-dd i.e. 2020-01-01");
'''
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/155#discussion_r480073589" expanded>

I noticed a similar issue in several other places as well.
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/155#discussion_r480073723" expanded>

Perhaps `Cut` could be changed to `Cuts`?
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/155#discussion_r480073831" expanded>

Maybe `Return` could be changed to `Returns`?
</panel>

<panel  header="**20 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/155#discussion_r480074562" expanded>

Perhaps this block of code could be abstracted into multiple method definitions within this class so as to shorten the method length?
</panel>

<panel  header="**21 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/155#discussion_r480074720" expanded>

I noticed a similar issue here in several other places as well.
</panel>

<panel  header="**22 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/155#discussion_r480075055" expanded>

I noticed a similar issue in the leading word of each Javadoc comment in other places as well.
</panel>

<panel  header="**23 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/155#discussion_r480075367" expanded>

Perhaps this could be renamed to `getData()`?
</panel>

<panel  header="**24 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/155#discussion_r480075568" expanded>

Maybe this single line break could be removed?
</panel>

<panel  header="**25 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/155#discussion_r480075764" expanded>

I noticed a similar issue wrt Javadoc comment leading words in several other places.
</panel>

<panel  header="**26 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/155#discussion_r480076064" expanded>

I noticed a similar issue elsewhere regarding Javadoc comments.
</panel>

<panel  header="**27 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/155#discussion_r480076214" expanded>

I noticed a similar issue with import wildcards in other places.
</panel>

</panel>

<panel type="info" header="### 22. CEDRIC LIM JUN WEI `@Cedo8` (27 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/359#discussion_r479996433" expanded>

Perhaps you can use a noun and something less ambiguous for the method name such as taskFormatter()?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/359#discussion_r479998668" expanded>

Be careful of white space requirements as mentioned by Jaylenlee
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/359#discussion_r479999790" expanded>

I am not too sure if the usage of while loop here is an acceptable standard, perhaps you can shift this to the top?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/359#discussion_r480000394" expanded>

Maybe you can remove the extra line spacing here?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/359#discussion_r480001376" expanded>

Is this necessary? Since the function does not need return anything.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/359#discussion_r480001769" expanded>

Perhaps add a line spacing here?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/359#discussion_r480002331" expanded>

Does this method require an @Override annotation?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/359#discussion_r480003435" expanded>

Perhaps deadlineInput is clear enough?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/359#discussion_r480004276" expanded>

Maybe use a more specific name instead of 'flag'?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/359#discussion_r480005266" expanded>

Can you confirm if the order of import statements here are correct?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/359#discussion_r480007994" expanded>

Maybe use a more specific name for the parameter 'bool'?
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/359#discussion_r480008634" expanded>

Maybe use 'numberOfTasks'?
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/359#discussion_r480009091" expanded>

Maybe use 'getNumberOfTasks'?
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/359#discussion_r480009847" expanded>

Maybe use a less ambiguous method name here?
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/359#discussion_r480010101" expanded>

Maybe 'deleteTask' will suffice?
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/359#discussion_r480011936" expanded>

Perhaps avoid naming variables like var1, var2 and so on? Try using a short form of the type of error such as 'accessError' or 'deleteError'?
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/210#discussion_r479930496" expanded>

The code for this class is clean and adheres to the Java coding standard as far as I can tell. Good job!
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/210#discussion_r479932143" expanded>

Is this line missing a semicolon?
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/210#discussion_r479933253" expanded>

Would 'time' be a better name for this variable?
</panel>

<panel  header="**20 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/210#discussion_r479937425" expanded>

Is this variable necessary? Perhaps you can just use the variable i in the for loop?
</panel>

<panel  header="**21 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/210#discussion_r479940837" expanded>

I like the fact that you abstracted these methods instead of writing everything under the parse method.
</panel>

<panel  header="**22 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/210#discussion_r479953633" expanded>

Perhaps use a more descriptive name for 's' like 'description'?
</panel>

<panel  header="**23 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/210#discussion_r479954508" expanded>

Maybe add a javadoc comment here? Even though it is just a getter.
</panel>

<panel  header="**24 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/210#discussion_r479955947" expanded>

I feel that this variable is slightly redundant? (Not sure if you want to keep it for the purpose of being clear)
</panel>

<panel  header="**25 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/210#discussion_r479959572" expanded>

Perhaps just "Deletes the task at the specified index." will suffice?
</panel>

<panel  header="**26 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/210#discussion_r479962516" expanded>

Maybe you can add javadoc comments for the public methods here?
</panel>

<panel  header="**27 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/210#discussion_r479968655" expanded>

Perhaps you can separate the tests and name your test methods in this format: featureUnderTest_testScenario_expectedBehavior().
</panel>

</panel>

<panel type="info" header="### 23. NEIL GUPTA `@Jargonx` (26 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/374#discussion_r481723618" expanded>

You can refer to the naming conventions for tests here https://se-education.org/guides/conventions/java/index.html under the "Naming" section!
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/374#discussion_r481729396" expanded>

Maybe you can test the loading functionality and the Todo Class functionality separately? It might make more sense to test Todo functionality first in this case separately, then test the loading.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/374#discussion_r481730277" expanded>

Perhaps you could add in an assert equals for testing purposes
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/374#discussion_r481731661" expanded>

Perhaps the user does not need to know about the file path validation process? I would suggest these be used more as debugging statements!
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/374#discussion_r481734067" expanded>

Perhaps here you could catch the FileNotFoundException and then throw a custom DukeException such that your Duke class can handle the thrown Exception, and you wont need to handle this specific Exception at all reducing the scope of Exceptions thrown!
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/374#discussion_r481734380" expanded>

Refer to the comment on the FileNotFoundException!
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/374#discussion_r481736200" expanded>

This is incorrect, the Parser class is used by the UI class.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/374#discussion_r481738161" expanded>

Maybe this method can be made more modular? It seems that this one method seems to have a lot of functionality that can be broken down into several separate methods, which can be made private for this class if necesary.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/374#discussion_r481739412" expanded>

For the load method, refer to the comment on the parse method from the Parse class. Making your method modular is also applicable here.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/374#discussion_r481741431" expanded>

I think it's great that your UI text will have user friendly icons! However, I do suggest that since these are Magical Constants, perhaps they can be defines as top level class members as private and final using the appropriate Caps Lock separation instead of placing them in the middle of your code as this may confuse future reviewers!
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/374#discussion_r481742553" expanded>

Perhaps in this case the variable is not necessary to be used?
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/306#discussion_r481753202" expanded>

Its a good idea to have a class of Common methods that are used throughout your code! I think I may implement this in my future projects!
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/306#discussion_r481755898" expanded>

Refer to comment on CommonMethod, is also applicable here!
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/306#discussion_r481758233" expanded>

Perhaps you can think about shifting your taskList object to the StorageManager Class? Having your taskList in your main class could possibly complicate your manipulations of the items inside!
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/306#discussion_r481763654" expanded>

Perhaps you can catch the IOException error within the originating class and throw a DukeException instead, that way the main Duke Class never has to deal with Exceptions that are expose the Java Exceptions! Although it is always good to be explicit in what errors you are catching, since most of the originating errors are Extended from DukeException, you could always just use 
'''suggestion
            } catch (DukeException e) {
                System.out.println(e);
            }
'''
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/306#discussion_r481767536" expanded>

Perhaps there can be a better way to Store your isExit variable instead of having to pass it in to every Command Object that is initialised, since not every Command Object needs to know of the existence of the isExit parameter, as can be seen from your AddCommand class constructor, where you initialise isExit with false.
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/306#discussion_r481771321" expanded>

As with the taskList being passed around the entire program, the uiManager and storageManager Object are being passed around the entire program, which may not be necessary. Consider using a Non-Persistent Storage Object at initialisation of program so that you can easily reference to the non persistent data throughout the program without using up parameter space to pass in objects that may or may not be used by the methods/classes that they are being passed into
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/306#discussion_r481773721" expanded>

Consider using in built Date and Time objects that are provided by the Java JDK! They provide extensive functionality including parsing and Formatting abilities!
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/306#discussion_r481775073" expanded>

Perhaps you can consider splitting this class into multiple classes, such as a Save and Load file which deals with persistent storage and consider having another class for Non-Persistent storage! Making your classes more modular will help you maintain your code in the future!
</panel>

<panel  header="**20 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/306#discussion_r481775628" expanded>

Refer to comment on IOException in the main Duke Class!
</panel>

<panel  header="**21 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/306#discussion_r481777249" expanded>

Perhaps instead of making this ArrayList Object into a class and only exposing the methods that are required, you can consider using a Storage class from which you can accomplish the same goal but have the flexibility of having more methods related to storage rather than restrict yourself to methods only relating to one specific data structure!
</panel>

<panel  header="**22 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/306#discussion_r481778380" expanded>

I like this class because its function has been very well defined and followed through with! Good job! 👍 
</panel>

<panel  header="**23 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/306#discussion_r481779449" expanded>

Perhaps you can consider another case - what happens if a user types in a command with the wrong capitalisation? Does your program still accept that as the correct command?
</panel>

<panel  header="**24 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/306#discussion_r481785193" expanded>

Its good that your UI has such a User friendly display! Maybe you can instead define these as private final constant variables above as class level members since these look like Magic Numbers that may confuse future reviewers!
</panel>

<panel  header="**25 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/306#discussion_r481786529" expanded>

This seems like a common method for DeadlineTask and EventTask, is there a better place that you could place this method?
</panel>

<panel  header="**26 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/306#discussion_r481787492" expanded>

You seem to have done extensive testing! Good job! 👍 
</panel>

</panel>

<panel type="info" header="### 24. FOO KAI EN `@wakululuu` (26 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/440#discussion_r482181920" expanded>

Perhaps add this file to .gitignore?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/440#discussion_r482186720" expanded>

Perhaps use `respond()` instead? The coding standard states "Names representing methods must be verbs".
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/440#discussion_r482188048" expanded>

Should there be a period at the end of this line?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/440#discussion_r482188749" expanded>

Similar to the issue in `Bye.java`, consider `respond()` instead?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/440#discussion_r482189919" expanded>

Consider abstracting this logic somewhere else since this method is getting rather long?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/440#discussion_r482190612" expanded>

Consider `respond()` as above?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/440#discussion_r482191538" expanded>

Should there be whitespace between ')' and '{'?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/440#discussion_r482194171" expanded>

Should the indentation for wrapped lines be only 8 spaces?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/440#discussion_r482195207" expanded>

Consider adding a verb to your method name? Maybe `printListOfTasks()`? The coding standard states "Names representing methods must be verbs" and that would be more intuitive for the reader as well.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/440#discussion_r482196212" expanded>

Should there be a Javadoc comment for this public method? Unclear what this method does. Consider adding a verb to the method name as well?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/440#discussion_r482197534" expanded>

Perhaps there is no need to split this into 2 lines? May be easier for the reader to read that way.
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/440#discussion_r482200233" expanded>

Consider abstracting some logic away? The else block seems to be getting long.
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/440#discussion_r482201511" expanded>

Perhaps use a clearer class name? Some readers may not know what 'ls' is.
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/94#discussion_r482159759" expanded>

Should this be a multi-line comment instead? The coding standard only states "Javadoc of class members can be specified on a single line". However, since this comment is for a class, perhaps it should follow the general form for Javadoc comments where "The opening `/**` [is] on a separate line"?
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/94#discussion_r482161908" expanded>

Should there be a period at the end of this line?
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/94#discussion_r482162870" expanded>

Should there be periods at the end of each of these lines? The coding standard states "Punctuation behind each parameter description".
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/94#discussion_r482165774" expanded>

Should this be a multi-line comment instead? See similar comment in `Deadline.java`.
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/94#discussion_r482166601" expanded>

Should this be a multi-line comment instead?
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/94#discussion_r482168843" expanded>

Should there be periods at the end of each of these lines?
</panel>

<panel  header="**20 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/94#discussion_r482169170" expanded>

Same issue as above
</panel>

<panel  header="**21 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/94#discussion_r482169562" expanded>

Same issue as above
</panel>

<panel  header="**22 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/94#discussion_r482169808" expanded>

Same issue as above
</panel>

<panel  header="**23 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/94#discussion_r482170275" expanded>

Same issue regarding single line comments as above. Perhaps check through the rest of your classes for this issue as well as the issue regarding the periods at the end of lines?
</panel>

<panel  header="**24 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/94#discussion_r482176035" expanded>

Agree, the rest of your classes seem to use `SAVE_PATH` as well. Perhaps this is an oversight?
</panel>

<panel  header="**25 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/94#discussion_r482184333" expanded>

Agree, the coding standard states "there is no indentation for case clauses."
</panel>

<panel  header="**26 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/94#discussion_r482186043" expanded>

Agree, the coding standard states "Names representing methods must be verbs".
</panel>

</panel>

<panel type="info" header="### 25. LI JIAYU `@lll-jy` (26 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/371#discussion_r480058910" expanded>

Is it better to specify the visibility of the constructor, e.g. `public`?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/371#discussion_r480059281" expanded>

Maybe add JavaDoc for this public class can make your program clearer?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/371#discussion_r480059695" expanded>

Do you expect this method to have a specified visibility, e.g. `public`? I will omit similar problems of missing specification of visibility for other files.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/371#discussion_r480060143" expanded>

Since you name this as an exception, do you intend to make this class an exception? So perhaps extend the `Exception` class? `EventException` and `ToDoException` also has the problem.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/371#discussion_r480062395" expanded>

What is this exception? When would it be thrown? Perhaps it is better to specify in the JavaDoc. Same for other JavaDoc comments for @throws tag.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/371#discussion_r480063361" expanded>

What does the return value mean for create()? May specify it? Same for some other JavaDoc on methods.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/371#discussion_r480064797" expanded>

Is this a typo? Do you mean `Getter for the arr`? In addition, for the JavaDoc description of a method, you may start using a verb. So maybe it'll be better to say something like `Gets the arr.`?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/371#discussion_r480065833" expanded>

Would it be better if you use more meaningful names instead of abbreviation?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/371#discussion_r480066876" expanded>

Perhaps here should be a tag `@throws` for the JavaDoc of this method? I observed similar problems with some other methods as well.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/164#discussion_r479998701" expanded>

Perhaps a new line before the main method?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/164#discussion_r479999057" expanded>

Maybe you can add a JavaDoc for this class?
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/164#discussion_r480000324" expanded>

Would it be better if you name these 2 variables like indexOfSpace/Slash or positionOfSpace/Slash? Although I can understand what you mean, and it causes no confusion in this context, the meaning of the variables seem a bit ambiguous.
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/164#discussion_r480002348" expanded>

Maybe you can add JavaDoc here since the overridden method also has no JavaDoc? Same for a few other Command classes.
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/164#discussion_r480002875" expanded>

`private int index;`?
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/164#discussion_r480003776" expanded>

Same as DeleteCommand. Maybe you mean `private`?
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/164#discussion_r480004937" expanded>

Did you accidentally add an extra space after before `extends`?
In addition, `IncorrectFormat` seem not to be the conventional way of naming an exception. Perhaps `IncorrectFormatException`? Or maybe even more specific.
Furthermore, maybe add a JavaDoc for the exception would be better because `IncorrectFormat` is still vague and ambiguous
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/164#discussion_r480005330" expanded>

Similar to your `IncorrectFormat` about the naming.
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/164#discussion_r480006491" expanded>

Did you make a typo here? Do you mean `Processes ... and returns ...`?
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/164#discussion_r480006972" expanded>

Typo here? `The` instead of `THe`.
</panel>

<panel  header="**20 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/164#discussion_r480007992" expanded>

Is `IOException` really thrown? I think you've dealt with it using `catch` right?
</panel>

<panel  header="**21 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/164#discussion_r480008346" expanded>

Similar to `createFile` method about the `IOException`.
</panel>

<panel  header="**22 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/164#discussion_r480008961" expanded>

Set it as `private`?
</panel>

<panel  header="**23 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/164#discussion_r480009270" expanded>

Maybe a more meaningful name could be better?
</panel>

<panel  header="**24 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/164#discussion_r480010011" expanded>

May specify all as `private`? I will omit other similar problems from this point.
</panel>

<panel  header="**25 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/164#discussion_r480011211" expanded>

Is the last space before `)` extra?
</panel>

<panel  header="**26 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/164#discussion_r480011895" expanded>

Consider a more meaningful name? (By the way, is this variable used?)
</panel>

</panel>

<panel type="info" header="### 26. ERIN MAY GUNAWAN `@erinmayg` (25 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/271#discussion_r480109795" expanded>

I think it is better to explicitly state the imported classes that you're going to use instead of using '*' 😄 
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/271#discussion_r480111296" expanded>

I think it complies with the coding standard more if you add "// Fallthrough" at the end of each cases with no "break" line.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/271#discussion_r480113215" expanded>

LGTM 😄 I like the clean coding style.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/271#discussion_r480114051" expanded>

I like how you use switch statements 😄 It's easier to read compared to 'ifs and elses'.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/271#discussion_r480114660" expanded>

I think it's better to omit the default if it contains no statements, it makes the code simpler.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/271#discussion_r480116141" expanded>

Perhaps you could use a StringBuilder instead? I think it makes it run faster. It's optional though 😅 
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/271#discussion_r480116605" expanded>

LGTM 😄 Other than a few small (optional) changes.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/271#discussion_r480117035" expanded>

I like the clean coding style 😄 LGTM!
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/271#discussion_r480118268" expanded>

I think attributes should be private (and if used outside the class, try adding a get method)... Noticed it, in other Command classes as well. I like how you're using it to improve code readability 😄  Other than that, LGTM!
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/271#discussion_r480121248" expanded>

You can omit this 😄 I think Java has automatically built an empty constructor method for every object... Noticed it in other types of commands as well.
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/271#discussion_r480122234" expanded>

It's cute, I love it! 🥰 LGTM!
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/271#discussion_r480124546" expanded>

Perhaps you could add a blank space to separate import statements from different packages? I think it complies better with the CS2103 coding standard 😄 Noticed it in other classes as well.
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/271#discussion_r480125993" expanded>

I like how you specified the correct format! It lessens the confusion for new (possible) users! 😄 
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/271#discussion_r480131387" expanded>

I noticed you haven't added Javadoc to any of the classes and methods 😅 Perhaps you could add it in the future?
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/271#discussion_r480132416" expanded>

I think it complies better with the Java coding standard to put the square brackets '[ ]' next to the data type 😅  Noticed it in other places as well.
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/185#discussion_r480151282" expanded>

Since this statement is used in most cases, perhaps it would be better if you move the code above the switch statements (use it more globally?) and add an exclusion for cases "list" and "find" 😅 
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/185#discussion_r480155164" expanded>

Perhaps it would be better if you moved this method to each of the Task classes and use polymorphism to your advantage 😅 It makes it more simpler and logical, I think.
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/185#discussion_r480156702" expanded>

I think it's more efficient if you put the message in the exception's constructor instead so you don't have to type it for every case 😄 Noticed it in other exceptions as well!
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/185#discussion_r480158927" expanded>

I don't think this if statement is necessary since Java already has an IndexOutOfBoundsException, perhaps you could throw the InvalidIndexException when catching that instead? 😄 Noticed it in other methods as well.
</panel>

<panel  header="**20 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/185#discussion_r480162351" expanded>

Perhaps it would be better that the attributes be made not public? 😅 I think it complies better with the coding standard set by the module. Noticed it in other classes as well.
</panel>

<panel  header="**21 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/185#discussion_r480164559" expanded>

I think it is better to make an attribute for isExit, hence there is no need to type multiple isExit methods for each Command class. You can just make the isExit method return the value of the boolean attribute in the Command class 😄 
</panel>

<panel  header="**22 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/185#discussion_r480165859" expanded>

Perhaps it would be better to make a new type of exception (extending DukeException) for this type of error 😄 
</panel>

<panel  header="**23 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/185#discussion_r480167791" expanded>

I think it's better to rename the method to "getCompletionStatus" or "getStatus" or something similar since it (grammatically) makes more sense 😅 
</panel>

<panel  header="**24 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/185#discussion_r480168469" expanded>

I like how you followed the naming method for testcases! 👍 
</panel>

<panel  header="**25 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/185#discussion_r480169333" expanded>

Since the coding standard demands use of US English, I think it's better to rename it to "initialize" 😅 Just a small (optional) change though, otherwise LGTM!
</panel>

</panel>

<panel type="info" header="### 27. LIU ZHENGDAO `@justacasul` (25 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/442#discussion_r479948874" expanded>

consider adding a whitespace between Command and { for readability
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/442#discussion_r479955148" expanded>

Would be nice to add a javadoc comment for readability
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/442#discussion_r479956131" expanded>

Should the block comment be at this level?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/442#discussion_r479957328" expanded>

Consider adding a javadoc comment here too
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/442#discussion_r479959197" expanded>

Having a javadoc comment here would be great for readability
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/442#discussion_r479959322" expanded>

Consider having a javadoc comment here to help readers
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/442#discussion_r479961317" expanded>

There's a hard to catch trailing whitespace after EventException,
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/442#discussion_r479961951" expanded>

1 extra whitespace between super.toString() + and " (at: " that you might have missed
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/442#discussion_r479963546" expanded>

trailing whitespaces here as well
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/442#discussion_r479964020" expanded>

some trailing whitespaces here
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/442#discussion_r479965040" expanded>

Should the imports be in this order?
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/442#discussion_r479965678" expanded>

There's some trailing whitespaces you might have missed on lines above and below generateSaveFileData();
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/442#discussion_r479965841" expanded>

this method might do well with accompanying javadocs
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/442#discussion_r479966365" expanded>

consider not sandwiching every method here with whitespaces to help prevent diff noise
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/442#discussion_r479966671" expanded>

should letter be public?
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/442#discussion_r479967242" expanded>

should static modifier come after final?
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/442#discussion_r479967493" expanded>

should "+" be on the old line?
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/442#discussion_r479969629" expanded>

should "?" and ":"  be in a staircase format?
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/442#discussion_r479969733" expanded>

should "?" and ":" be in a staircase format?
</panel>

<panel  header="**20 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/72#discussion_r479981925" expanded>

you missed a ; here
</panel>

<panel  header="**21 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/72#discussion_r479983362" expanded>

Consider the class name CommandDeleter as it is a noun
</panel>

<panel  header="**22 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/72#discussion_r479984767" expanded>

Should the class name be a verb? Pardon my naming sense, but do consider something like DoneMarker
</panel>

<panel  header="**23 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/72#discussion_r479985165" expanded>

Consider using a noun for class name
</panel>

<panel  header="**24 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/72#discussion_r479985443" expanded>

Consider using a noun, like CommandLister
</panel>

<panel  header="**25 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/72#discussion_r479986777" expanded>

the name "of" is slightly ambiguous, might I suggest something like parseTime?
</panel>

</panel>

<panel type="info" header="### 28. YEO KE XIN `@pockii` (25 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/396#discussion_r481128080" expanded>

Perhaps it may be better to list the imported classes explicitly so that others can easily identify what classes are used?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/396#discussion_r481130963" expanded>

Maybe we could standardize the use of `this` keyword as these statements imply there's another ui/parser object?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/396#discussion_r481157996" expanded>

I'm not really sure, but since this is a public method, it may require a javadoc?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/396#discussion_r481159118" expanded>

Quite minor, but it may be clearer to state that this function will mark the task as completed since it's not possible to mark it as incomplete.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/396#discussion_r481160847" expanded>

I think there's no need to override the inherited function if there's no change made to it?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/396#discussion_r481161393" expanded>

I really like how you separated the emojis out into an enum! 
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/396#discussion_r481164964" expanded>

Maybe you could extract out the command name by splitting the string which can also help with the condition checking?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/396#discussion_r481172916" expanded>

In Javadoc comments, there should be an empty line between description and parameter section and the first word of the params' description should be capitalised.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/396#discussion_r481173916" expanded>

In Javadoc comments, there should be an empty line between description and parameter section and the first word of the params' description should be capitalised.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/396#discussion_r481174792" expanded>

In Javadoc comments, there should be an empty line between description and return section.
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/396#discussion_r481184559" expanded>

According to Java guidelines, this should be "represents".
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/396#discussion_r481184775" expanded>

According to Java guidelines, this should be "constructs".


</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/396#discussion_r481185100" expanded>

According to Java guidelines, this should be "constructs". There should also be an empty line between the description and params here, and the first letter of the params should be capitalised. 

(There are more Javadoc comments that require a little editing, but I will stop adding more comments here so as to not flood the reviews!)


</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/394#discussion_r481176598" expanded>

I think this new line isn't necessary, so maybe it can be deleted?
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/394#discussion_r481181728" expanded>

Perhaps you can throw a child of DukeException here to tell the user that they may have forgotten to input the number of the task to be marked done for better UI.
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/394#discussion_r481183434" expanded>

Perhaps you can throw a child of DukeException here to tell the user that they forgot to input the number of the task to be deleted for better UI.
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/394#discussion_r481189047" expanded>

As it is possible to initialise the taskList without a defined capacity, would it be better to just leave it undefined so that there is no limit to the number of tasks that will be added in? 
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/394#discussion_r481191716" expanded>

Similarly, perhaps throwing a more specific Exception here may be better to inform the user they failed to give the correct task number to be marked as done.
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/394#discussion_r481196300" expanded>

Maybe the message here ("The description cannot be empty") can be encapsulated in DukeNoDescriptionException instead, so you don't have to throw a new Exception.
</panel>

<panel  header="**20 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/394#discussion_r481197300" expanded>

Similarly, maybe the message can be encapsulated in DukeNoDateException to reduce the number of try/catch blocks.
</panel>

<panel  header="**21 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/394#discussion_r481197888" expanded>

I think this can be generalised to DukeException?
</panel>

<panel  header="**22 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/394#discussion_r481198206" expanded>

I think this empty line is not really necessary, so maybe it can be deleted?
</panel>

<panel  header="**23 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/394#discussion_r481202140" expanded>

Since it is common to leave out a return statement, maybe the //Fallthrough comments could be added here to show that it is intentional?

</panel>

<panel  header="**24 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/394#discussion_r481209296" expanded>

Unnecessary empty line, maybe it can be deleted?
</panel>

<panel  header="**25 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/394#discussion_r481211036" expanded>

I really like how you separated this out! 
</panel>

</panel>

<panel type="info" header="### 29. LIM JUN CHENG `@JunCheng98` (24 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/124#discussion_r480879906" expanded>

1) Since an object of Command class would unlikely be instantiated, I believe it would be better if it was made abstract instead. This is similar to cases where the Animal and Shape classes are made abstract etc.
2) I noticed that you did not put access modifiers to tasklist and str. It would be good practice to make them protected variables since they are inherited from Command subclasses.
3) tasklist may not be needed as an attribute here, and can instead be used simply as an attribute in the execute() method.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/124#discussion_r480936293" expanded>

Also, I notice that you have missing JavaDocs for your classes themselves; please do add them by next week's increment to adhere by the coding standard!
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/124#discussion_r480938132" expanded>

It may not be obvious at once to those reading/testing your code as to what an exceptionCommand actually is; perhaps a more intuitive approach would be to check if the input is valid while parsing and output the exception from there, instead of having to create a new exception command.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/124#discussion_r480939443" expanded>

To adhere to the coding standard, this import statement should be grouped above with all the import.java statements above.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/124#discussion_r480940075" expanded>

These import javafx statements should be grouped together with those below!
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/124#discussion_r480941746" expanded>

DialogBox feels like it could be placed in a separate class by itself. It may confuse readers/testers when the first class they see in Duke.java is the DialogBox class instead of the Duke class!
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/124#discussion_r480943647" expanded>

A more appropriate option would be to make the first letter of a class name uppercase in adherence to the coding standard. Similar mistakes are found in the following classes as well. camelCase should be used for variable and method naming!
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/124#discussion_r480945532" expanded>

Minor issue, but this file can be removed if it is now obsolete.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/124#discussion_r480946602" expanded>

To rephrase, it would be better to group this exception with your DukeException class below.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/124#discussion_r480952067" expanded>

A space should be needed here to separate the 2 import statements.
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/124#discussion_r480953365" expanded>

One neater alternative would be to make smaller methods such as handleDeadline() or handleEvent() for example instead of one huge method which handles every case bulked together. This could make the code appear untidy and bulky.
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/124#discussion_r480953928" expanded>

Instead of using the wildcard(*), do list out all the import statements used from the java.io package.
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/124#discussion_r480954929" expanded>

It is important to ensure that your class attributes are labelled as private. I also noticed some other attributes in other classes without access modifiers or having the wrong ones attached to them. Do take note of this!
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/124#discussion_r480956285" expanded>

Instead of suppressing it, maybe you could try resolving this warning such that it does not pop up again. This statement would be redundant if this warning can be resolved manually.
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/124#discussion_r480957028" expanded>

The indentation here looks inaccurate. The first line of the String should follow the return statement above instead of being below it and indented again.
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/124#discussion_r480957826" expanded>

It is good that you considered creating a pleasant user experience by making it easier for users to enter correct commands!
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/44#discussion_r480850951" expanded>

I like how you used an abstract method to account for program exit for all Command subclasses. One other cleaner way could perhaps be to make the method simply return a boolean value which would eliminate the need to create an isExit attribute.
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/44#discussion_r480853527" expanded>

It is great that you created a custom Date and Timing class to format your date printing, but perhaps you would have had your work cut out for you if you had used the Java Date library instead! They have methods to print your dates and times in different formats too.
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/44#discussion_r480855468" expanded>

As you have multiple Deadline constructors, I think it would be great if you commented on what each of them did differently and how the extra parameters influence how the object is instantiated.
</panel>

<panel  header="**20 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/44#discussion_r480857326" expanded>

It would be better to adhere to the coding standard and make the attributes private here instead!
</panel>

<panel  header="**21 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/44#discussion_r480858643" expanded>

This may not be required since the Exception class has its own String attribute called message as well as a method for its subclasses to retrieve the message.
</panel>

<panel  header="**22 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/44#discussion_r480860014" expanded>

A similar issue to the Deadline constructors I commented on a while back. It would be great if your comments could be more detailed and diverse for constructors of the same class!
</panel>

<panel  header="**23 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/44#discussion_r480865306" expanded>

This method is a little long. Perhaps you could consider making smaller methods such as handleDeadline() or handleTodo() for example to make the code cleaner and more organised.
</panel>

<panel  header="**24 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/44#discussion_r480868706" expanded>

I like the simplicity and structure of this enum, which is set up such that it is easy to add more new TaskTypes in the future if needed.
</panel>

</panel>

<panel type="info" header="### 30. KOH RUI LING `@ruilingk` (24 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/281#discussion_r480008154" expanded>

I think the ordering of the imports are not correct? 🤔 
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/281#discussion_r480009471" expanded>

Should there be a new line after the description, to separate the description and parameter sections?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/281#discussion_r480010670" expanded>

Maybe you could take a look at `Duke.java`? It is the same issue, and for the rest of the classes too! 😅 
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/281#discussion_r480011442" expanded>

I think the naming for `exit` variable could be clearer and sound more like a boolean, so maybe you could consider `isExit`? Just a suggestion!
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/281#discussion_r480012333" expanded>

Should there be a description for this method in the Javadocs? 🤔 Maybe you could also check for subsequent classes too (i.e. `Parser.java`)!
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/281#discussion_r480012682" expanded>

Maybe a more intuitive variable name called `index` would be clearer?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/281#discussion_r480013092" expanded>

Maybe you could look at `DeleteCommand.java`? It is the same issue. 😀 You could also check for subsequent classes too (i.e. `Parser.java`).
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/281#discussion_r480018645" expanded>

Maybe a clearer naming would be `getTask(int index)`? 
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/281#discussion_r480019178" expanded>

I like how you have variations for users to input their Deadline and Event tasks! 👍 
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/281#discussion_r480020595" expanded>

Maybe you can consider naming this method as `formatTaskToText()`? Just a suggestion! 😃 
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/211#discussion_r479970652" expanded>

Maybe you could create a method in `Task.java` which returns the tick or cross symbols based on whether the Task is done? This might reduce the duplicate codes in the 3 different types of Task classes! 🤔 
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/211#discussion_r479973885" expanded>

Should there be a spacing after Exception followed by the starting curly brace? 😀 
'''suggestion
public class DukeException extends Exception {
'''
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/211#discussion_r479975427" expanded>

Maybe you can take a look at `DukeException.java`? It is the same issue. 😅 
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/211#discussion_r479981254" expanded>

Maybe you could take a look at the suggestion mentioned in `Deadline.java`? Same for `ToDo.java`!
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/211#discussion_r479985390" expanded>

I am not sure about this, but I think there should be a spacing between closing parenthesis and starting curly brace? 
'''suggestion
    protected Parser() {}
'''
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/211#discussion_r479986445" expanded>

Should there be a spacing between these imports? 🤔 
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/211#discussion_r479988467" expanded>

Should there be a @return for the boolean in the Javadocs? 😅 
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/211#discussion_r479989325" expanded>

Maybe you could look at `Storage.java`? It has the same issue.
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/211#discussion_r479990394" expanded>

I think there is an extra 4 spaces for the indentation? 
</panel>

<panel  header="**20 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/211#discussion_r479991307" expanded>

Maybe you could take a look at the above comment? It is the same. 😃 
</panel>

<panel  header="**21 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/211#discussion_r479992416" expanded>

I like how your bot is personalised! 👍 
</panel>

<panel  header="**22 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/211#discussion_r479994096" expanded>

Static imports should have precedence, followed by Java's imports, then followed by this Test import. Maybe when you run checkstyle, you would be clearer. At first, I did not know too! 😄 
'''suggestion
import static org.junit.jupiter.api.Assertions.assertEquals;

import java.time.LocalDate;

import org.junit.jupiter.api.Test;
'''
</panel>

<panel  header="**23 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/211#discussion_r479996187" expanded>

Maybe you could take a look at `ParserTest.java`? It has the same issue, and for the rest of the test classes too! 
</panel>

<panel  header="**24 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/211#discussion_r479996823" expanded>

I like how comprehensive your testing is! 👏 
</panel>

</panel>

<panel type="info" header="### 31. LIM WEI QUAN, ERNEST `@ernestlim8` (23 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/375#discussion_r480094446" expanded>

May you could rename the method to getMessage for better clarity?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/375#discussion_r480095110" expanded>

Perhaps you can organise your code into packages for better modularity?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/375#discussion_r480096054" expanded>

Perhaps you can rename lists to taskList, since it is supposed to be singular? Additionally, taskList can be declared as List<Task> instead of ArrayList<Task>.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/375#discussion_r480096500" expanded>

Can consider using a switch statement for better readability.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/375#discussion_r480096628" expanded>

Perhaps this line is redundant?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/375#discussion_r480096909" expanded>

Nice customised design of duke 👍 
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/375#discussion_r480097232" expanded>

Should you refactor into 2 variables instead?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/375#discussion_r480097579" expanded>

Maybe you could consider using just a string to store one String?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/375#discussion_r480098203" expanded>

Perhaps you can print out the response message to the user on line 86 like u did for line 83?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/375#discussion_r480098433" expanded>

Should there be nested try and catch?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/375#discussion_r480098825" expanded>

Can consider printing a message to the user instead of using the default constructor.
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/375#discussion_r480099861" expanded>

You may consider adding a custom message which is easier for user to understand.
Eg. 
'''
public DukeException(String message) {
    super(message);
}
'''

</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/375#discussion_r480100381" expanded>

Perhaps you can refactor this method to the Task class to avoid repetition of code in child classes?
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/375#discussion_r480100954" expanded>

Should your exceptions in your programme extend Exception or Duke Exception? 
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/375#discussion_r480101202" expanded>

Perhaps you can rename Tag as CommandType for better readability?
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/375#discussion_r480101378" expanded>

Should the variables be public or private?
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/375#discussion_r480101865" expanded>

Consider renaming linesOfText to responseText for better understanding.
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/290#discussion_r479999113" expanded>

Should the indentation be at 8 lines instead of 4?
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/290#discussion_r479999906" expanded>

Nice use of javadocs to credit the original author 👍 
</panel>

<panel  header="**20 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/290#discussion_r480000949" expanded>

Perhaps using else if will make the code look nicer?
</panel>

<panel  header="**21 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/290#discussion_r480002296" expanded>

Will it be easier to read if the ToDo class is renamed to Todo?
</panel>

<panel  header="**22 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/290#discussion_r480026552" expanded>

Consider renaming the field by for easier understanding
</panel>

<panel  header="**23 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/290#discussion_r480026936" expanded>

nice use of method to extract out the status icon
</panel>

</panel>

<panel type="info" header="### 32. LIM MING CHONG `@qwoprocks` (23 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/434#discussion_r480599931" expanded>

Should there be a space between 'run' and '{'?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/434#discussion_r480603082" expanded>

I think the imported classes should be listed explicitly? (Instead of using *)
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/434#discussion_r480604284" expanded>

Should there be an indentation for case clauses in a switch statement?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/434#discussion_r480608148" expanded>

Should this class field be left with the default access modifier?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/434#discussion_r480611095" expanded>

Should there be no empty line between the Javadoc comment description and parameter section? I've noticed this issue in other Javadoc comments as well.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/434#discussion_r480613968" expanded>

Should there be no spacing between 'Command' and '{'?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/434#discussion_r480619592" expanded>

Should the import statements be more consistent in format? I.e. New line between duke imports and standard java imports, just like in the other files.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/434#discussion_r480621184" expanded>

Should these variables be left as the default access modifier?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/434#discussion_r480621762" expanded>

Should this if statement be on a single line without curly braces?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/434#discussion_r480622262" expanded>

Should the case clauses have indentation?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/434#discussion_r480623393" expanded>

Should this if statement be on a single line with no curly braces?
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/434#discussion_r480915827" expanded>

Yup, but its indented in your code haha 😅
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/7#discussion_r480637325" expanded>

Should there be a space between 'run' and '{'?
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/7#discussion_r480645860" expanded>

Perhaps this can be renamed to 'arrayContainsString'. Also, seems weird to put this in a Parser class, perhaps a separate utility class can be created instead, especially since this method doesn't use any of the instance level variables.
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/7#discussion_r480651906" expanded>

I think it would be clearer and more direct if `inputString` is used instead of `getString()` as readers may have to check the `getString()` function to see what it does, instead of directly seeing that it is just returns the `inputString` variable.
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/7#discussion_r480652628" expanded>

Perhaps this function should be renamed to `getInputString()` to be clearer and more direct about what it does.
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/7#discussion_r480659608" expanded>

Should there be a new line before this Javadoc comment?
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/7#discussion_r480662267" expanded>

Perhaps this variable can be renamed to `userInputSplit` as `userStrings` sounds a bit unclear and vague.
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/7#discussion_r480664370" expanded>

Should there be a space between `//` and the comment contents? 
</panel>

<panel  header="**20 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/7#discussion_r480667311" expanded>

Should the `getArray()` function name be changed to something more descriptive? For example, `getUserInputSplit()` 
</panel>

<panel  header="**21 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/7#discussion_r480668434" expanded>

Perhaps the name of this function should be changed to something more meaningful? What is the significance of the first index?
</panel>

<panel  header="**22 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/7#discussion_r480674341" expanded>

Should the boolean be named `isDone` instead?
</panel>

<panel  header="**23 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/7#discussion_r480677564" expanded>

I feel that a better name for this function would be something like `getStringForStorage()`, because `appendFile` doesn't seem to describe what this function does well.
</panel>

</panel>

<panel type="info" header="### 33. YEH YU CHUN `@peter-yeh` (23 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/402#discussion_r480095432" expanded>

Should this be listed explicitly?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/402#discussion_r480095565" expanded>

Should this be listed explicitly?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/402#discussion_r480116706" expanded>

Should the import statements be listed explicitly?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/402#discussion_r480117167" expanded>

Should there be empty line between description and parameter section?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/402#discussion_r480145014" expanded>

I liked how detailed this java doc is
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/402#discussion_r480149652" expanded>

It is good that this did not take up more than 3 indentation
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/402#discussion_r480150689" expanded>

Does this need to be public? 
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/402#discussion_r480154507" expanded>

Why does this overloaded method needs to be public if it's only used inside this class ?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/402#discussion_r480155489" expanded>

I like how this is abstracted and kept inside this class
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/402#discussion_r480156138" expanded>

Does this need a @Override tag? 
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/184#discussion_r480162536" expanded>

Is this merge conflict resolved? 
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/184#discussion_r480164080" expanded>

I like how descriptions is given for these private variables as well
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/184#discussion_r480164902" expanded>

I liked how enum is used for these commands
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/184#discussion_r480166797" expanded>

I noticed a lot of your methods are marked as package private, why don't mark them as protected instead? 
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/184#discussion_r480167750" expanded>

Could this method name be matched closer to what it does? 
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/184#discussion_r480174117" expanded>

why is this not called after the constructor instead of calling it in duke.java? 
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/128#discussion_r481163636" expanded>

Maybe this can be placed inside DoneCommand? 
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/128#discussion_r481164376" expanded>

It's nice you separated out this exception instead of also classifying empty input as a DukeException

</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/128#discussion_r481169786" expanded>

Is this a bit unnecessary because the variable date is self explanatory 
</panel>

<panel  header="**20 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/128#discussion_r481176627" expanded>

Maybe the head comments can be shrunk to one line?
This would make the code look more compact and neater if the header comment is not too long.
I noticed there were some quite short comments which could have been shorten to one line
`` /** The Todo, ... to it. */ ``
</panel>

<panel  header="**21 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/128#discussion_r481179789" expanded>

It is good that you have so many test cases, this shows that you test your codes thoroughly :) 
</panel>

<panel  header="**22 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/128#discussion_r481181535" expanded>

Maybe this code is self-explanatory? There were also many instances which I feel that the variable name is self-explanatory. 
</panel>

<panel  header="**23 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/128#discussion_r481181981" expanded>

Maybe this does not need a comment header? 
</panel>

</panel>

<panel type="info" header="### 34. KENNY SEET WEN KAI `@kswk` (23 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/435#discussion_r480183554" expanded>

Is the "this" keyword necessary?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/435#discussion_r480186930" expanded>

Are the "this" keywords necessary?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/435#discussion_r480187290" expanded>

Is the "this" keyword necessary?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/435#discussion_r480187421" expanded>

Is the "this" keyword necessary?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/435#discussion_r480187572" expanded>

Are the "this" keywords necessary?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/435#discussion_r480187700" expanded>

Are the "this" keywords necessary?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/435#discussion_r480188643" expanded>

Is the "this" keyword necessary?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/435#discussion_r480188904" expanded>

Is the "this" keyword necessary?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/435#discussion_r480190355" expanded>

I like the lexicographic way in which you arrange your import statements in all your classes, perhaps a line break between lines 4 and 5 and lines 5 and 6 would make the import statements look neater? 🤔 
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/435#discussion_r480190699" expanded>

Perhaps a line break between lines 5 and 6 and lines 6 and 7 would make the import statements look neater? 😄 
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/435#discussion_r480191150" expanded>

Perhaps a line break between lines 6 and 7 would make the import statements look neater? 😄
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/65#discussion_r480154663" expanded>

Is the "this" keyword necessary?
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/65#discussion_r480155935" expanded>

Is the "this" keyword necessary?
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/65#discussion_r480156084" expanded>

Is the "this" keyword necessary?
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/65#discussion_r480156766" expanded>

Is the "this" keyword necessary?
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/65#discussion_r480156960" expanded>

Is the "this" keyword necessary?
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/65#discussion_r480157277" expanded>

Is the "this" keyword necessary?
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/65#discussion_r480157881" expanded>

Is the "this" keyword necessary?
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/65#discussion_r480160112" expanded>

Is the "this" keyword necessary?
</panel>

<panel  header="**20 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/65#discussion_r480160335" expanded>

Is the "this" keyword necessary?
</panel>

<panel  header="**21 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/65#discussion_r480160496" expanded>

Is the "this" keyword necessary?
</panel>

<panel  header="**22 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/65#discussion_r480160598" expanded>

Is the "this" keyword necessary?
</panel>

<panel  header="**23 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/65#discussion_r480161973" expanded>

I like the lexicographic way in which you arrange your import statements in all your classes, maybe it will look neater if there is a line break in between the the import statements at line 4 and 5? 
Also a swap in lines 3 and 4 to make it look consistent. 😄 
</panel>

</panel>

<panel type="info" header="### 35. VUONG HOANG LONG `@UncleGrandpa925` (23 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/293#discussion_r480846671" expanded>

non-private variables should be declared before private ones right? 
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/293#discussion_r480847152" expanded>

I think there should be a space after Task
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/293#discussion_r480847591" expanded>

I think there should be a Javadoc comment here!
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/293#discussion_r480847685" expanded>

I think there should be a Javadoc comment here!
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/293#discussion_r480849768" expanded>

Should the indentation of "case" same as "switch"?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/293#discussion_r480850395" expanded>

This import is unused and should be deleted right? 
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/293#discussion_r480850645" expanded>

the trailing "+" sign should be on the line below right? 
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/293#discussion_r480850969" expanded>

the trailing "+" sign should be on the line below right?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/293#discussion_r480853009" expanded>

Should there be a Javadoc comment here? 
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/293#discussion_r480853775" expanded>

Should filePath be private and have an accessor method? 
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/235#discussion_r480999578" expanded>

Should the data file be ignored?
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/235#discussion_r481001380" expanded>

Perhaps this part should use switch case? And also for the todo/deadline/event, I think you can use String format to reduce the number of duplicate code
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/235#discussion_r481002051" expanded>

Maybe change the name here from splits to tokens? 
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/235#discussion_r481003054" expanded>

I think the method name should be a verb, so maybe change exists() to checkExist instead?
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/235#discussion_r481003643" expanded>

If there is an exception here, should the program be ended? 
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/235#discussion_r481004020" expanded>

Maybe if you write return above then no need this else? To keep the "HAPPY" path straight?
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/235#discussion_r481004533" expanded>

Perhaps the two function should be merged into one to reduce duplicate codes? 
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/235#discussion_r481005086" expanded>

I think the name of the taskList should be changed since it can be mistaken with tasks!
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/235#discussion_r481005263" expanded>

I think the 2 if should be merged together!
</panel>

<panel  header="**20 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/235#discussion_r481005665" expanded>

I think function names should be in verb-form
</panel>

<panel  header="**21 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/235#discussion_r481006610" expanded>

A very small thing but I think you may find useful that the size of the array cannot be negative, so I think just check if it's equal to 0 or not is enough! A better way is to check task.isEmpty()==true
</panel>

<panel  header="**22 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/235#discussion_r481007103" expanded>

I think the horizontal line should be a static variable and should only be created once
</panel>

<panel  header="**23 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/235#discussion_r481007406" expanded>

I think the name line can be more descriptive! 
</panel>

</panel>

<panel type="info" header="### 36. AMY LIM ZHI TING `@amylzting` (23 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/429#discussion_r480184358" expanded>

I agree. Maybe Egyptian style bracketing should be used?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/429#discussion_r480187730" expanded>

Should there be a break statement after each case?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/429#discussion_r480189651" expanded>

Should import statements here be stated explicitly?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/429#discussion_r480190520" expanded>

Should complicated statements be avoided? Maybe you can try to have it done in steps?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/429#discussion_r480191029" expanded>

Should the form of the try-catch statement be changed?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/429#discussion_r480195441" expanded>

Should naming be changed to a verb instead?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/429#discussion_r480197067" expanded>

Should naming be more accurate in explanation about the method?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/429#discussion_r480197565" expanded>

Should the naming of boolean variables be in another form such as isSomething or hasSomething?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/220#discussion_r480141761" expanded>

Should imported classes from the command package be listed explicitly? 
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/220#discussion_r480142463" expanded>

Similar to the above, should imported classes from the task package be listed explicitly?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/220#discussion_r480147127" expanded>

Should there be a line break for this long line to improve readability? 
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/220#discussion_r480147384" expanded>

Similar to the above, should there be a line break for this long line?
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/220#discussion_r480147945" expanded>

For the method body, should there be blank line separations between logical units within a block?
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/220#discussion_r480152417" expanded>

Should this variable name be in camelCase instead?
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/220#discussion_r480156593" expanded>

Should the javadoc comment header be more descriptive as the method is pretty long?
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/220#discussion_r480159251" expanded>

Should the method definition have an access modifier?
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/220#discussion_r480160117" expanded>

Should the method definition have an access modifier? This is also seen in a few other instances in the code.
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/220#discussion_r480162618" expanded>

Should there be a javadoc statement for this public method?
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/220#discussion_r480163271" expanded>

Should there be a javadoc statement for this public method?
</panel>

<panel  header="**20 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/220#discussion_r480163649" expanded>

Should there be a javadoc comment for this public method? This is also seen in other instances in the code.
</panel>

<panel  header="**21 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/220#discussion_r480169118" expanded>

Should plural form be use for the name here as it is representing a collection of objects?
</panel>

<panel  header="**22 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/220#discussion_r480170193" expanded>

Should plural form be use for the name here which represents a collection of objects?
</panel>

<panel  header="**23 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/220#discussion_r480171527" expanded>

Should import statements here be listed explicitly?
</panel>

</panel>

<panel type="info" header="### 37. WU ZEYING `@zeying99` (22 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/477#discussion_r483359605" expanded>

Perhaps you can change the name "by" to something that is easier to understand? For instance deadlineDate or ddlDate or just date?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/477#discussion_r483361437" expanded>

Perhaps can change the name "at" to something more comprehensive
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/477#discussion_r483363311" expanded>

Wow. I learn a new way to read files today. Thank you
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/395#discussion_r483382480" expanded>

Perhaps you want to leave a line to separate javadoc description and @param
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/395#discussion_r483382668" expanded>

Perhaps you want to leave a line to separate javadoc description and @param
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/395#discussion_r483383393" expanded>

Perhaps you want to leave a line to separate javadoc description and @param
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/395#discussion_r483383410" expanded>

Perhaps you want to leave a line to separate javadoc description and @param
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/288#discussion_r483379490" expanded>

same i agree :)
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/288#discussion_r483379722" expanded>

great use of enum. Very clear of the possible tasks
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/288#discussion_r483379913" expanded>

perhaps you want to use the name index instead of idx to improve comprehensiveness 
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/288#discussion_r483381375" expanded>

Wow i learn something new today that javadoc can inherit too. Thank you
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/182#discussion_r483376068" expanded>

it will be better to add an empty line between the javadoc description and @param
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/182#discussion_r483376383" expanded>

Perhaps you want to leave a line here as well
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/182#discussion_r483376629" expanded>

Perhaps you want to leave a line here to separate description and param as well
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/182#discussion_r483377236" expanded>

Perhaps you want to leave a line here to separate description and param as well
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/182#discussion_r483377428" expanded>

Start the javadoc with Executes (verb with s)
In method header comments, the first sentence should start in the form Returns ..., Sends ..., Adds ... (not Return or Returnning etc.)
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/182#discussion_r483377582" expanded>

Similar as previous comments. Perhaps you want to refine you javadoc abit.
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/182#discussion_r483377615" expanded>

Similar as previous comments. Perhaps you want to refine you javadoc abit.
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/182#discussion_r483377766" expanded>

Similar as previous comments. Perhaps you want to refine you javadoc abit.
</panel>

<panel  header="**20 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/182#discussion_r483377918" expanded>

Similar as previous comments. Perhaps you want to refine you javadoc abit.
</panel>

<panel  header="**21 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/182#discussion_r483378279" expanded>

perhaps the word input here should be moved up?
</panel>

<panel  header="**22 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/182#discussion_r483378405" expanded>

Perhaps you want to leave a line here between description and @return
</panel>

</panel>

<panel type="info" header="### 38. GAN JING WEN `@gan-jw` (22 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/219#discussion_r482669653" expanded>

Yep, i noticed this in several other JavaDoc comments as well.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/219#discussion_r482669858" expanded>

I like how neat this code is :) 
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/219#discussion_r482670651" expanded>

I am not so sure what this JavaDoc comment is referring to?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/219#discussion_r482671626" expanded>

I think this is redundant in default as '//Fallthrough' is generally only added when there is a _case_ statement without _break_.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/219#discussion_r482672373" expanded>

Maybe it's better to throw a DukeException here instead of returning a String? I've noticed this method implementation differs from other Command classes, is there any reason why?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/219#discussion_r482672877" expanded>

Perhaps return type should be void rather than String? As if I didn't miss anything, the returned string was not used in any of the references.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/219#discussion_r482673402" expanded>

It may be better to specify more clearly what each execute method does for better understanding of the code? I noticed this applies to other Command classes as well.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/219#discussion_r482673526" expanded>

Yes! Good catch. That would also improve the clarity of code :)
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/219#discussion_r482674811" expanded>

I think it is better to standardise the format of DukeException? I've noticed the DukeExceptions thrown in Command classes did not have the sad faces. Perhaps you can abstract '   ☹ OOPS!!!' out into DukeException itself so you don't have to type it repetitively throughout your code?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/219#discussion_r482675042" expanded>

I like how you specified the recommended date time input format to the user! :D 
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/219#discussion_r482675246" expanded>

Good work in separating the import packages for better readability :)
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/219#discussion_r482675643" expanded>

You may want to use String.format for clearer concatenation of strings :) just a suggestion.
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/219#discussion_r482675878" expanded>

I like how you used the appropriate access modifier 👍 
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/219#discussion_r482676177" expanded>

I also liked how you use the appropriate singular and plural nouns in naming your variables :D 
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/219#discussion_r482676975" expanded>

I noticed you've hardcoded a lot of indentations to format the displays in your print messages, perhaps these could be abstracted out into a printMessage method in Ui that auto appends message to the spaces?
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/69#discussion_r482639627" expanded>

I think it complies with the coding standards better if you write 'Returns' (third person singular tense of the word for header) instead of 'Return'? I noticed the same issue in several other places of documentation too.
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/69#discussion_r482640259" expanded>

I like how you added comments to make the code more understandable :D
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/69#discussion_r482642889" expanded>

Perhaps it would be better to standardise the exception message output by DukeException? So that you don't have to type 'OOPS!!!' repetitively in the code. I noticed this was different from the other error messages.
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/69#discussion_r482644234" expanded>

I agree, using constant variables to store "todo", "deadline" and "event" is a good idea! It could also be expanded to other command words like "bye", "help", "find"... in the previous lines.
</panel>

<panel  header="**20 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/69#discussion_r482644585" expanded>

Similarly, I think it would be better to write "Greets the user" for proper javaDoc.
</panel>

<panel  header="**21 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/69#discussion_r482646395" expanded>

This would definitely improve the abstraction! Perhaps the method could be used to print a message within the 2 borders? something like border + message + border.
</panel>

<panel  header="**22 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/69#discussion_r482647635" expanded>

I like how you added JavaDoc comments in every public method :) makes for very comprehensive code.
</panel>

</panel>

<panel type="info" header="### 39. GALVIN LEOW WEN YUAN `@galvinleow` (22 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/433#discussion_r483913327" expanded>

java import before duke import
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/433#discussion_r483913449" expanded>

java import before duke import
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/433#discussion_r483913534" expanded>

java import before duke import 
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/433#discussion_r483913764" expanded>

java imported before duke import
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/433#discussion_r483913824" expanded>

Only collections have plural names 
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/433#discussion_r483913925" expanded>

static import should be at the top
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/433#discussion_r483913948" expanded>

static import -> java import -> duke import
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/386#discussion_r481586028" expanded>

Maybe can put checkCommand instead, like standardizing the verb first or vice versa
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/386#discussion_r481589540" expanded>

 Imported classes should be listed explicitly. Maybe you can change the IntelliJ setting, to only output * if more than 100 from same import, as I know IntelliJ will do this at times even if it is unchecked in the setting.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/386#discussion_r481591526" expanded>

Might be able to standardize with the rest of your method
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/286#discussion_r483915487" expanded>

might create mistake between tasks and task if not careful
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/249#discussion_r481543904" expanded>

I agree with shermz-lim, try to configure your IntelliJ so that it will remove this problem going forward
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/249#discussion_r481576688" expanded>

Maybe can include the expected result in the method name
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/249#discussion_r481622486" expanded>

Missing @Override, your other task subclass have.
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/194#discussion_r483917417" expanded>

maybe can rename it, like initAttributeList() or something
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/194#discussion_r483917548" expanded>

same as above, more suggestion like createAttributeList(), not sure of the functionality of this method.
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/194#discussion_r483917706" expanded>

maybe don't use the default accessor type
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/194#discussion_r483917741" expanded>

same as above, maybe dont use default accessor type
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/194#discussion_r483917797" expanded>

same as above, try not to use default accessor type
</panel>

<panel  header="**20 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/120#discussion_r483914401" expanded>

Remember if you are changing to switch case. There is no indentation for the case word.
![Capture](https://user-images.githubusercontent.com/47635075/92298644-d0211180-ef7d-11ea-8ee1-a284be5ab660.PNG)


</panel>

<panel  header="**21 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/120#discussion_r483914604" expanded>

Different package, so it can remain this way unless u changing task.Task to be in the same package as duke
</panel>

<panel  header="**22 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/120#discussion_r483914725" expanded>

Maybe can remove this white space for standardization
</panel>

</panel>

<panel type="info" header="### 40. KIMBERLY ONG HUI QIN `@kimberlyohq` (22 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/384#discussion_r481666677" expanded>

What do you think about renaming "by" to "deadline" to make it clearer?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/384#discussion_r481668053" expanded>

I think you forgot to add full stops here?😅 I noticed this for other Javadoc comments too
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/384#discussion_r481673483" expanded>

Perhaps it would be better to rename "at" to something more intuitive? 
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/384#discussion_r481675045" expanded>

NIT: Did you forgot to add an "and" before "Updates.."?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/384#discussion_r481678810" expanded>

I noticed that the try-catch block is being duplicated in quite a few cases. Perhaps you can consider moving the moving the try-catch block one level up, putting the switch case in the try block and catch DukeException? 

</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/384#discussion_r481681074" expanded>

Nit: I think JavaDoc comments starts with "Returns" instead of "Return"
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/384#discussion_r481681996" expanded>

Should the method be renamed to `getTaskType` to make it clearer?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/384#discussion_r481685045" expanded>

Perhaps you can consider adding an `@Override` to show that this method overrides getType() in `Task`?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/384#discussion_r481686898" expanded>

I noticed this is duplicated in quite a few methods. Should this be extracted out?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/219#discussion_r481505587" expanded>

Nit: missing fullstop here
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/219#discussion_r481505746" expanded>

Nit: I think the JavaDoc comment should start with "Allows" instead of "Allow" based on the Java coding standard
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/219#discussion_r481505833" expanded>

I think you may have forgotten to add a full stop here😅
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/219#discussion_r481506132" expanded>

Nit: I think the JavaDoc should start with "Boolean" instead of "boolean"
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/219#discussion_r481506495" expanded>

Perhaps you have forgotten to remove the extra spacing before "Invalid"?😅 i noticed this in other uses of `DukeException` as well
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/219#discussion_r481506730" expanded>

Perhaps it would be good to explain when `DukeException` is thrown? E.g. when index >= 0... I noticed this in for other JavaDoc comments as well
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/219#discussion_r481507410" expanded>

Perhaps it would be better to rename `size` to something more intuitive such as `taskIndex` ?
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/219#discussion_r481508301" expanded>

Perhaps you have forgotten to include comment for` DukeException`, `@throws ... `? 
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/219#discussion_r481509006" expanded>

Any reason why this is outside of the switch block instead of handling it in a similar way like `list` on line 45?
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/219#discussion_r481512341" expanded>

I don't think this method is necessary since the method is not exactly overridden then you return `super.getMessage()`? 😅
</panel>

<panel  header="**20 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/219#discussion_r481512707" expanded>

Should "abstract" be removed from the JavaDoc comment since Task is not an abstract class?
</panel>

<panel  header="**21 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/219#discussion_r481513682" expanded>

Perhaps it would be better to change this to a verb instead such as `markComplete` to adhere to coding standard?
</panel>

<panel  header="**22 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/219#discussion_r481517063" expanded>

Perhaps it would be good to follow the naming for test methods in the Java Coding standards, `featureUnderTest_testScenario_expectedBehavior()`? I noticed this for other test methods as well!
</panel>

</panel>

<panel type="info" header="### 41. ZHOU ZIJIAN `@BobbyZhouZijian` (22 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/458#discussion_r479932708" expanded>

Should you add documents for this class?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/458#discussion_r479933149" expanded>

Should you add a period at the end?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/458#discussion_r479933284" expanded>

Should you add a period at the end of this line?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/458#discussion_r479933885" expanded>

Maybe you forget to change this documentation?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/458#discussion_r479934687" expanded>

Should you add punctuations behind each line?

I noticed the same issue in several other places too
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/458#discussion_r479935271" expanded>

Maybe can write a more meaningful description for the param?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/458#discussion_r479935941" expanded>

I think there should be an empty line between description and params
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/458#discussion_r479936895" expanded>

I feel that a more meaningful name can be used instead of "I".
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/458#discussion_r479940402" expanded>

Is this line a bit too long?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/458#discussion_r479940661" expanded>

Is this line a bit too long?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/458#discussion_r479941188" expanded>

Maybe the description can be more meaningful?
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/458#discussion_r479942013" expanded>

Since you have already had a getter method for description, maybe you can make it a private variable here? If you want to also modify it, I think a setter method may be helpful.
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/458#discussion_r479942776" expanded>

Maybe you can add documentation here and for the method below?
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/224#discussion_r480048041" expanded>

Maybe you can use a switch statement to make it cleaner?
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/224#discussion_r480048194" expanded>

Maybe give it a more intuitive name?
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/224#discussion_r480048743" expanded>

Maybe you can separate this into another catch block?
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/224#discussion_r480050174" expanded>

Maybe you do not need the "else if". Just use "if" to make the "happy path" more prominent.
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/224#discussion_r480052243" expanded>

Similarly, maybe you can consider removing the "else" to make the "happy path" more prominent.
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/224#discussion_r480057729" expanded>

I think it might be good to use the same abstraction level. So maybe you can create a new Event variable for this?
</panel>

<panel  header="**20 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/224#discussion_r480058955" expanded>

Maybe you can abstract out the "Bye bye..." string to enforce the same level of abstraction.
</panel>

<panel  header="**21 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/224#discussion_r480059388" expanded>

Maybe the name for the Command can be more meaningful?
</panel>

<panel  header="**22 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/224#discussion_r480060213" expanded>

I think ierateAndPrintTodo might be a name that better captures the purpose of this method.
</panel>

</panel>

<panel type="info" header="### 42. TAN JIA WEI JOE `@tjwjoe` (22 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/313#discussion_r480908697" expanded>

Should these be declared as private?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/313#discussion_r480917630" expanded>

Perhaps declare the conditional statement outside to make it more easily readable? Like boolean input = ui.readInput().equals(BYE)
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/313#discussion_r480918758" expanded>

Should all these functionality be abstracted out into another class so the code here isn't too long, like the Parser class? I like your usage of switch instead of if-else though
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/313#discussion_r480927964" expanded>

Should the printing of these statements be abstracted out to the UI class?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/313#discussion_r480932863" expanded>

Perhaps you could abstract this out into a toString() method for your TaskList class instead?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/313#discussion_r480940400" expanded>

I like your usage of streams here!
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/313#discussion_r480944157" expanded>

Should these be declared as private instead?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/313#discussion_r480947946" expanded>

I'm quite confused about why you have both a TaskList task and a Tasks class
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/313#discussion_r480950610" expanded>

Should these methods be renamed to be more intuitive? Like showDoneTask() or printDoneTask() instead
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/313#discussion_r480960000" expanded>

Maybe declare this as private as well?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/313#discussion_r480961632" expanded>

Should this be declared private as well?
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/26#discussion_r479959696" expanded>

Perhaps shift the "finally" to be on line 297?
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/26#discussion_r480017027" expanded>

I think you misspelled find in the error message
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/26#discussion_r480018839" expanded>

Perhaps you could rename the method to fit the coding standard? Like "printFileError()" or something similar
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/26#discussion_r480020684" expanded>

Perhaps you could initialise i here together with the declaration instead of within the try block?
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/26#discussion_r480026757" expanded>

Perhaps you could declare this to be a private variable?
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/26#discussion_r480028559" expanded>

Perhaps declare this as a private variable?
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/26#discussion_r480029342" expanded>

Same as Event and Deadline
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/26#discussion_r480030122" expanded>

Perhaps declare parser to be private instead?
</panel>

<panel  header="**20 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/26#discussion_r480030632" expanded>

Maybe you could rename this to avoid confusion with the actual variable? Like "getExit()" instead
</panel>

<panel  header="**21 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/26#discussion_r480031328" expanded>

nice logo!
</panel>

<panel  header="**22 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/26#discussion_r480033999" expanded>

Same as others, maybe change these to be private?
</panel>

</panel>

<panel type="info" header="### 43. ROY CHAN CHUAN ZHI `@royleochan` (21 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/316#discussion_r480022810" expanded>

Just a minor code styling issue, no indentations are needed for the different case clauses.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/316#discussion_r480023405" expanded>

Minor coding style issue, think that there should be a line break between the description and @param (according to the code snippet in the java coding standard). Noticed these java doc formatting issue elsewhere as well.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/316#discussion_r480028097" expanded>

Can consider adding the "No such command" string in the exception constructor so that the user knows why his command was not accepted like what you have done in the parseTask method.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/316#discussion_r480037970" expanded>

I think there is a missing java doc for the class itself. Noticed this in some other classes as well.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/316#discussion_r480039346" expanded>

This works perfectly fine but can consider using the enum.valueOf method provided by java. In that way you don't have to declare the constants above and can use switch case instead of multiple if else statements when parsing the command. You also wont have to call the .equals string comparison method in every if clause.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/316#discussion_r480045566" expanded>

I think the line break is not needed here.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/316#discussion_r480048792" expanded>

I think this line break can be removed?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/316#discussion_r480050641" expanded>

Can consider declaring a constant where such as done = "1" means to improve readability when creating new tasks. (This way the reader knows 1 is not just a magic number).
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/316#discussion_r480054862" expanded>

I think that according to the coding standard booleans should be named more obviously so done can be isDone.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/177#discussion_r480004646" expanded>

Agreed, even though the scope is small it might be clearer to use a more descriptive variable name. Looking at your takeInputAndReturn method maybe x can be renamed to commandStatus?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/177#discussion_r480007189" expanded>

Can consider being replacing "if something goes wrong" in the javadoc to some thing more specific. I'm not sure what because I haven't done the java FX portion but if its meant to be generic then its fine!
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/177#discussion_r480008285" expanded>

I feel the comments might help make things clearer especially for readers who are new to javaFX.
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/177#discussion_r480010316" expanded>

Can consider writing java docs for these methods (even though its trivial) because based on the coding standards all public class and methods should have headers. I noticed the same issue with some of the other public classes as well.
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/177#discussion_r480012736" expanded>

Agreed, no indentation needed for case clauses. To add on, I think there isn't supposed to be a line break between cases as well (referring to the code snippet in the coding standards) but i'm not sure if that must be followed strictly.
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/177#discussion_r480015227" expanded>

Can consider removing the line breaks in the catch blocks as the code snippet in the coding standards for try-catch statements don't have the line breaks.
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/177#discussion_r480015997" expanded>

Should the line breaks in the variable declarations here be removed?
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/177#discussion_r480016808" expanded>

I think a brief description for each method is needed at the start of the javadocs (before @param, @return, @throws)
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/177#discussion_r480017234" expanded>

Think you might have missed out javadocs for the class itself.
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/177#discussion_r480018826" expanded>

Think the imports should be specified instead of using *
</panel>

<panel  header="**20 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/177#discussion_r480019189" expanded>

Agreed, unless the character line limit is reached.
</panel>

<panel  header="**21 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/177#discussion_r480019760" expanded>

Maybe these comments can be removed? Unless its still needed for reference.
</panel>

</panel>

<panel type="info" header="### 44. MARCUS DUIGAN XING YU `@Marcon2509` (21 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/405#discussion_r480815617" expanded>

Should there be javaDoc comments for the methods?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/405#discussion_r480815996" expanded>

Should there be javadoc comments?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/405#discussion_r480816762" expanded>

Should import java.io.* be used?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/405#discussion_r480819769" expanded>

Perhaps use a method that helps you indent all System.out.print lines
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/405#discussion_r480820631" expanded>

perhaps use a better name than "fnfe"
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/139#discussion_r480768813" expanded>

Perhaps have a method to help you add indention to all System.out.println() lines
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/139#discussion_r480770805" expanded>

i like the use of the override .toString() to format the time
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/139#discussion_r480779534" expanded>

Perhaps use key switch style 
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/139#discussion_r480783874" expanded>

Why is the code so perfect its really tough to find coding standard violations only
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/139#discussion_r480784854" expanded>

should this line be this long?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/139#discussion_r480797258" expanded>

Perhaps it should be "Edits"
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/139#discussion_r480797786" expanded>

Perhaps use "Deletes" instead?
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/139#discussion_r480798243" expanded>

Perhaps use "Updates" instead
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/139#discussion_r480798559" expanded>

Perhaps use "Returns" instead
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/139#discussion_r480798836" expanded>

Perhaps use "Returns" instead
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/139#discussion_r480799079" expanded>

Perhaps use "Removes" instead
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/139#discussion_r480800919" expanded>

perhaps use "Finds" and remove the
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/139#discussion_r480804222" expanded>

perhaps use "Returns" instead?
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/139#discussion_r480805649" expanded>

Should you update the text to comment what the method does?
</panel>

<panel  header="**20 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/139#discussion_r480806395" expanded>

Should there be a javadoc comment here?
</panel>

<panel  header="**21 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/139#discussion_r480806808" expanded>

Should it be "Returns" instead?
</panel>

</panel>

<panel type="info" header="### 45. ZHANG YUNJIE `@Zhang-Yunjie` (21 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/339#discussion_r481956313" expanded>

Is it necessary to leave a blank line here?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/339#discussion_r481960707" expanded>

Would it be better if you just use an enum class for COMMAND_TYPE?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/339#discussion_r481963431" expanded>

Correct indentation for switch method which is a common mistake, good job 👍
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/339#discussion_r481964524" expanded>

Would it be better to remove these empty lines before the brackets?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/339#discussion_r481965416" expanded>

You may adjust the indentation for switch method as there should not be any indentation between switch and case according to the guideline :)
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/339#discussion_r481966643" expanded>

I suppose this class exists for the conversion between different DateTime format. You may want to check on the existing functions in Java to do this: https://stackoverflow.com/questions/3469507/how-can-i-change-the-date-format-in-java
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/339#discussion_r481966943" expanded>

Is it necessary to leave empty lines here? 
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/339#discussion_r481967308" expanded>

Would it be easier if you just create an enum class for COMMAND_TYPE instead?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/314#discussion_r481718650" expanded>

Should "isExit" be "hasExit" instead? Perhaps it will sound more natural and grammatically correct if you intend for it to represent the state of Duke :)
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/314#discussion_r481721714" expanded>

Should it be named "getExitStatus()" instead of "isExit()" ? The action of retrieving exit status may be more explicit this way :)
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/314#discussion_r481727550" expanded>

Could you think of more specific and descriptive names for your variables? "str", "temp" and "current" may be vague at the first glance :)
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/314#discussion_r481730034" expanded>

Correct indentation for switch method, this is a common mistake. Good job 👍  !
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/314#discussion_r481734960" expanded>

Should you remove this empty line between class header comment and the class itself?
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/154#discussion_r481855350" expanded>

Is there a better way to structure these to extract common code and reduce duplicates?
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/154#discussion_r481903695" expanded>

Would it be better to change "isExit" to "hasExit" to make it more natural?
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/154#discussion_r481925291" expanded>

May I ask why this must be a method instead of a boolean attribute? 
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/154#discussion_r481932824" expanded>

Would it be better to name it more specifically, e.g. "listOutTasks" instead of "execute" ?
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/107#discussion_r481945376" expanded>

May I ask why you leave line breaks for each if/ else if statement? Is the line breaks necessary? 
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/107#discussion_r481946478" expanded>

I like it that you put the details in comments! It makes your codes more readable 👍 
</panel>

<panel  header="**20 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/107#discussion_r481952041" expanded>

Is there a more elegant way to do this? You may want to check on this link for more information :) https://stackoverflow.com/questions/3469507/how-can-i-change-the-date-format-in-java
</panel>

<panel  header="**21 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/107#discussion_r481952872" expanded>

"isDone" and "isCompleted" seems kind of similar... Would it be better if you change "isCompleted" to "getCompletionStatus"?
</panel>

</panel>

<panel type="info" header="### 46. YAP JIE XIANG `@akgrenSoar` (21 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/438#discussion_r482114516" expanded>

I think using 'this' keyword is a plus point.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/438#discussion_r482118266" expanded>

Would it be better to use an explicit access modifier?
'''suggestion
    private LocalDate date;
'''
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/438#discussion_r482121327" expanded>

Would it be better to handle the exceptions instead?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/438#discussion_r482122382" expanded>

Might be better to use a more descriptive variable name
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/438#discussion_r482127214" expanded>

I think we should try to avoid using acronyms when naming variables. It might seem harmless now, but when the program gets big, it comes back to bite you. I too find myself guilty of this mistake
'''suggestion
        try (ObjectInputStream objectInputStream = new ObjectInputStream(new FileInputStream(filepath));
'''
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/438#discussion_r482131787" expanded>

You might want to add a 'todo' comment here. In a big project, it will make it easier to navigate tasks that are put off to a later time
'''suggestion
            e.printStackTrace(); // Todo: handle exception
'''
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/438#discussion_r482132660" expanded>

Watch out for indentation. I am fine with it but some people may find it annoying
'''suggestion
            ObjectOutputStream oos = new ObjectOutputStream(tasks)) {
'''
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/438#discussion_r482134139" expanded>

I think you forgot to initialize tasks
'''suggestion
    TaskList(){
        this.tasks = new ArrayList<>();
    }
'''
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/438#discussion_r482146586" expanded>

When the code gets long, perhaps it would be a good idea to add single line comments.
'''suggestion
                } else if (command.startsWith("delete")) {
                    // Remove the task from list
'''
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/182#discussion_r482165141" expanded>

I think you forgot to remove this
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/182#discussion_r482168618" expanded>

printStackTrace possibly left behind unintentionally
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/182#discussion_r482169899" expanded>

Should we allow acronyms as variable names for short codes?
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/182#discussion_r482171654" expanded>

Maybe we could use getter and setters
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/182#discussion_r482171917" expanded>

Might be a good idea to use public static final
'''suggestion
    public static final DateTimeFormatter FORMATTER =
'''
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/182#discussion_r482172759" expanded>

Personally, i recommend using the same variable name throughout
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/182#discussion_r482174885" expanded>

Would be a good idea to add single line comments when the code gets long. It helps you to understand your code after being away for a long duration
'''suggestion
            // Comment on functionality of code
            BufferedReader br = new BufferedReader(new FileReader(saved));
'''
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/182#discussion_r482176259" expanded>

Would be good to add javadoc to constructors too
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/182#discussion_r482178119" expanded>

Constructor javadocs are especially important when it comes to Exceptions. Personally, i just copy Java11's exception javadocs (and credit the java11 website)
'''suggestion
    /**
     * Description
     * @params message
     **/
    public DukeException(String message) {
'''
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/182#discussion_r482178948" expanded>

just a minor nitpicking. Note the variable names
</panel>

<panel  header="**20 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/182#discussion_r482180991" expanded>

I personally do it this way
'''suggestion
            Command command = Parser.parseCommand("event read book /at 2020-10-10 20:00");
            assertTrue(command instanceof EventCommand);
'''
</panel>

<panel  header="**21 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/182#discussion_r482182742" expanded>

Better to keep the formatter in one place
'''suggestion
    DateTimeFormatter formatter = Storage.FORMATTER;
'''
</panel>

</panel>

<panel type="info" header="### 47. LEE MING DE `@LeeMingDe` (21 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/418#discussion_r483913145" expanded>

Hi, i think it would be nice to add java docs for this!
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/418#discussion_r483913184" expanded>

did you forget to add in an access modifier here?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/418#discussion_r483913210" expanded>

Can add in java docs here too!
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/418#discussion_r483913277" expanded>

Think you can add java docs here too! 
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/418#discussion_r483913319" expanded>

Noticed that java docs are missing for all the classes and methods, might be good to add it in!
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/418#discussion_r483913349" expanded>

Access modifier missing here perhaps?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/418#discussion_r483913505" expanded>

Nice use of streams, never thought about it that way, good job!
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/361#discussion_r480197937" expanded>

If I'm not wrong, i think we are not allowed to use * for imports? 
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/361#discussion_r480198741" expanded>

Should there be java docs for this method? I noticed quite a few methods without java docs. While it is not that necessary yet, it might be good to add them in.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/361#discussion_r480200036" expanded>

I think you forgot to capitalize the first letter and made a typo for 'interface'
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/361#discussion_r480202487" expanded>

Would be good to leave a line after the imports
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/311#discussion_r483912116" expanded>

Think you can add java docs header about what this class does. Eg, Responsible for launching javafx interface
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/311#discussion_r483912287" expanded>

I think you can add in java docs for this method!
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/311#discussion_r483912434" expanded>

Can add in java docs here too!
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/311#discussion_r483912528" expanded>

Same here for java docs!
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/311#discussion_r483912661" expanded>

Can add java docs here too!
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/311#discussion_r483912699" expanded>

i think it would be helpful to leave a line  to separate the static variables with the non-static ones.
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/311#discussion_r483912800" expanded>

i think you can abstract all the methods out because your line of code is slightly long? >30 lines
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/311#discussion_r483912849" expanded>

Again, i think you can abstract all the methods out so that your code is easier to read!
</panel>

<panel  header="**20 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/311#discussion_r483912940" expanded>

there is alot of statements nested inside your code so it somewhat has an arrowhead format, will be good to abstract the methods out!
</panel>

<panel  header="**21 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/68#discussion_r480209309" expanded>

Should there be java docs for this class?
</panel>

</panel>

<panel type="info" header="### 48. JOSHUA LIANG XINGYA `@joshualiangxy` (21 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/240#discussion_r481274712" expanded>

I really like how you use `enum` here to define the different commands!
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/240#discussion_r481277973" expanded>

I really like how you implemented the `Consumer` interface for this class!
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/240#discussion_r481280568" expanded>

Consider naming the boolean something like `shouldPrint` to make it sound more like a boolean?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/240#discussion_r481287869" expanded>

Maybe you can leave out the `this` keyword when it is not needed to reduce unnecessary noise?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/240#discussion_r481288851" expanded>

Perhaps a more descriptive name here would help the reader understand what the string represents?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/216#discussion_r481553463" expanded>

Maybe leave out the `this` keyword when it's not needed to make the code more succinct?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/216#discussion_r481609107" expanded>

This method is quite long. Perhaps you could abstract away parts to make it more readable?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/216#discussion_r481631425" expanded>

Perhaps use camel casing here, since file path is not a constant, but varies between instances of the `Storage` class?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/216#discussion_r481643260" expanded>

Perhaps you could make use of polymorphism here, since all 3 task types extends the `Task` class. This can help make the code a lot more succinct and readable.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/216#discussion_r481667812" expanded>

Maybe naming the method with a verb can help the program be more understandable?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/216#discussion_r481670108" expanded>

Maybe using guard clauses here can ensure that your main program logic is more prominent?

![image](https://user-images.githubusercontent.com/28984700/91932375-913e5200-ed18-11ea-9a1f-292a829be8f7.png)
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/95#discussion_r481215810" expanded>

Perhaps import classes explicitly here?
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/95#discussion_r481220727" expanded>

Maybe break up this line to make it more readable?
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/95#discussion_r481223954" expanded>

Maybe a header comment here can help readers understand what the method does?
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/95#discussion_r481242012" expanded>

Maybe naming the boolean to something like `isDone` can make this sound more like a boolean?
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/95#discussion_r481242664" expanded>

The naming of the parameter boo might not be very understandable. Perhaps also naming it as `isDone` would work?
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/95#discussion_r481243871" expanded>

I like how you placed the line break here to clearly distinguish between the imports from different packages!
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/95#discussion_r481245294" expanded>

Perhaps consider using the `printf` method here to reduce the amount of string concatenations?
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/95#discussion_r481249504" expanded>

Consider breaking the line before the operator (`+` in this case), since it might be confusing for people to see a new line beginning with a string.
</panel>

<panel  header="**20 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/95#discussion_r481250388" expanded>

Love the idea of the enumeration of `TaskSymbol`!
</panel>

<panel  header="**21 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/95#discussion_r481258718" expanded>

Perhaps you could add the final modifier and change the naming style to uppercase snake case, since these strings are not meant to be changed?
</panel>

</panel>

<panel type="info" header="### 49. ZHU YUXUAN `@yuxuanxc` (21 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/467#discussion_r481190302" expanded>

Maybe you can consider specifying the data type of your variables instead of just using 'var' for all of them? I'm not sure about the technical benefits of using int, boolean, String etc but it would definitely improve the readability of your code which will be helpful for your tP! Also, it seems like all of them are boolean values so you could consider naming them isCorrect, isDeleted, isInputDone etc to follow the coding standard.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/467#discussion_r481195604" expanded>

Not sure if you already know but order.substring(0 , 4).equals("done") could be replaced with order.startsWith("done"), just to improve readability but you will get the same result either way.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/467#discussion_r481206821" expanded>

One possible way to make the printing of the tasks out neater could be by overriding the toString method of your Task class so that you can just call System.out.println(i + 1 + ". " + orders.get(i)) instead. It is the same logic as what you are doing here, just that the checking of status and category is done inside the Task class and this will help with abstraction.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/467#discussion_r481221231" expanded>

I'm not sure why you decided to make another if block to check for todo, event, and deadline since you already checked for the booleans at lines 117, 126 and 137. Would combining the bodies of the 2 if blocks of todo change the output in any way?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/467#discussion_r481229336" expanded>

Does the status(0, 1) refer to whether or not the task is done? If that's the case, changing it to a boolean(eg. isDone) will be helpful in terms of readability. It might reduce confusion as your teammates will not have to guess which variable does what when they read your code for tP/ other group projects in the future.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/467#discussion_r481232046" expanded>

The status of the task is always set to 0 when you initialize a new Task object, so the constructor may not have to take in a parameter for status and this.status = 0; could be used instead?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/467#discussion_r481247948" expanded>

I'm sorry but I don't really understand this part. Would it be possible to combine all the try blocks together into one and have multiple catch blocks for different errors instead?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/130#discussion_r481106866" expanded>

There should be a punctuation (full-stop) behind each parameter description.
Remember to put an empty line between description and parameter section.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/130#discussion_r481108543" expanded>

I think we need to include a full-stop at the back of the summary to indicate the end of the sentence, so that Javadoc will automatically place it in the method summary table(of your API)?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/130#discussion_r481117084" expanded>

I think we still need to import every single class specifically instead of using a wildcard(*), even if all of the classes in that package is being used. I went to google about this a little but there are conflicting answers as to whether wildcards should be used or not, so maybe you can clarify it with your TA/the profs?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/130#discussion_r481118687" expanded>

There's a few extra spaces here.
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/130#discussion_r481120808" expanded>

There's one extra space here, not sure if it is a violation but you might want to delete it so that your code will look more consistent throughout? There is one extra space at line 65 too
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/130#discussion_r481124420" expanded>

Interesting way of using a for loop, I'm not very sure how it works but if (String) line is not updated then maybe you can use a while loop instead?
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/130#discussion_r481127428" expanded>

Not a violation but you could follow the format of showTaskDeleted to improve readability! 
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/130#discussion_r481127682" expanded>

Random empty space here
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/130#discussion_r481128925" expanded>

Need to add a space above! 
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/130#discussion_r481129689" expanded>

Need space above this line.
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/130#discussion_r481130064" expanded>

Need space above this line?
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/130#discussion_r481131809" expanded>

Extra spaces in lines 8, 11 and 12
</panel>

<panel  header="**20 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/130#discussion_r481132627" expanded>

Why got so many spaces haha. This is not a violation so I don't want to keep spamming the same comment.

Just in case if you want to fix the extra spaces for the sake of aesthetics, here are some which I found in other files which I didn't comment:
TodoCommand.java - line 12
Event.java - line 3
UiTest.java - line 14
</panel>

<panel  header="**21 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/130#discussion_r482145499" expanded>

I found this online! (source: https://www.jetbrains.com/help/idea/creating-and-optimizing-imports.html#exclude-from-auto-import)
Disable wildcard imports to always import single classes﻿:
1) In the Settings/Preferences dialog Ctrl+Alt+S, select Code Style | Java | Imports.
2) Make sure that the Use single class import option is enabled.
3) In the Class count to use import with ‘*’ and Names count to use static import with ‘*’ fields, specify values that definitely exceed the number of classes in a package and the number of names in a class (for example, 999).
</panel>

</panel>

<panel type="info" header="### 50. DORA HENG ZHI QIN `@Door-oof` (21 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/457#discussion_r479855816" expanded>

This is incorrect because there should not be any indentation for the case clauses.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/457#discussion_r479860541" expanded>

There should be a punctuation behind every parameter description. I have noticed similar issue in other places too.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/457#discussion_r479861774" expanded>

This is incorrect as comments should be indented relative to their position in the code.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/457#discussion_r479863389" expanded>

Perhaps putting the class in a package?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/457#discussion_r479864336" expanded>

The imported classes should be listed explicitly.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/457#discussion_r479875931" expanded>

Perhaps a more intuitive variable name that will sound more like a boolean?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/457#discussion_r479878695" expanded>

This is incorrect as there should be an empty line between the description and parameter. I have noticed similar issues in several other places too.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/457#discussion_r479880284" expanded>

Perhaps adding a short summary of the method? This can also apply to other methods that do not have a description in other places.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/330#discussion_r479911438" expanded>

The indentation is not in line with the rest.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/330#discussion_r479913128" expanded>

Perhaps include JavaDoc and specify what the class does? This can also apply to the other classes that do not have JavaDoc written.
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/330#discussion_r479915332" expanded>

Perhaps the code can be put in 1 try-catch block?
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/330#discussion_r479916807" expanded>

Should the parenthesis after the case clause be taken out for better readability?
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/330#discussion_r479919959" expanded>

Perhaps having a more intuitive variable name to make it sound more like a boolean?
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/245#discussion_r479970960" expanded>

Should there be a punctuation at the end of the description? I have noticed similar issue in other places too.
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/245#discussion_r479973985" expanded>

Should there be a break before the operator?
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/245#discussion_r479980356" expanded>

Perhaps it would be possible to concatenate the variable temp altogether?
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/245#discussion_r479984732" expanded>

Perhaps this part can be done in the Parser class?
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/244#discussion_r479862286" expanded>

There should be a punctuation behind the description
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/244#discussion_r479865036" expanded>

Perhaps rephrasing the sentence so that the action word "Throws" is used instead of "Thrown"?
</panel>

<panel  header="**20 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/244#discussion_r479868670" expanded>

Perhaps a more intuitive variable name to sound more like a boolean?
</panel>

<panel  header="**21 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/244#discussion_r479884325" expanded>

Perhaps a more intuitive variable name to sound more like a boolean?
</panel>

</panel>

<panel type="info" header="### 51. KWEK MIN YIH `@hakujitsu` (21 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/409#discussion_r481966436" expanded>

Should there be a space between while and the parathesis? 
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/409#discussion_r481970664" expanded>

I agree with @raythx98 and @josiahkhoo on this point as well, abstraction would decrease the LOC, making the method more readable.

In addition, could you abstract this method (and potentially other methods such as printTaskList) itself to the TaskList class?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/409#discussion_r481972973" expanded>

Should this method be moved to the Storage class?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/409#discussion_r481974143" expanded>

Following the SLAP principle (Single Level of Abstraction Per method), perhaps this should be abstracted into a method of its own in the Storage class (e.g. populateTaskList)?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/409#discussion_r481977500" expanded>

I noticed multiple try/catch blocks embedded in this method. Would it be possible to catch all the different types of exceptions in the most external try/catch block and handle them respectively, to improve code organisation?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/409#discussion_r482033834" expanded>

Should this file path be saved as a final constant? This would allow you to reference it from a single place, rather than creating multiple of the same variable.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/409#discussion_r482037807" expanded>

Should the final else statement be used to add a task, or should it be in an "else if" block of its own?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/409#discussion_r482040173" expanded>

Should the break be before the '+' operator rather than after?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/409#discussion_r482045448" expanded>

Should there be space before and after the '-' operator?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/409#discussion_r482048335" expanded>

Should you handle this special condition at the beginning of the method?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/409#discussion_r482058574" expanded>

Should the user's input be written verbatim into the file?
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/357#discussion_r482227206" expanded>

Should this JavaDoc comment end with a full stop?
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/357#discussion_r482229233" expanded>

Should these constant names be capitalised? 
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/357#discussion_r482231305" expanded>

Should this boolean be named to sound like a boolean? 
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/357#discussion_r482236845" expanded>

Should there be a space before the colon? 
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/357#discussion_r482238838" expanded>

Should this String have a more descriptive name?
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/357#discussion_r482239732" expanded>

Should this class be named with a singular noun instead of a plural noun?
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/226#discussion_r481935482" expanded>

Should the variable datetimeDue be in camelCase? (e.g. dateTimeDue) I noticed similarly named variables in other places too, usually containing the substring "datetime".
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/226#discussion_r481942580" expanded>

Should these associated constants (final variables) be prefixed by a common type name in uppercase? (e.g. IMAGE_USER and IMAGE_DUKE)
</panel>

<panel  header="**20 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/226#discussion_r481952526" expanded>

Should this bool variable name be more descriptive?
</panel>

<panel  header="**21 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/226#discussion_r481962498" expanded>

I also noticed many constructors had the identical JavaDocs summary as highlighted above. Should they be more descriptive and name the class being instantiated?
</panel>

</panel>

<panel type="info" header="### 52. TIMOTHY ONG JING KAI `@timjkong` (20 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/423#discussion_r480004756" expanded>

Perhaps you could add a space between the curly bracket and catch.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/423#discussion_r480006272" expanded>

Should indentation for case clauses be removed?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/423#discussion_r480007494" expanded>

I think there should be a space between the method and the curly bracket.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/423#discussion_r480007810" expanded>

I think there should be a space between 'for' and the bracket and another space at the end before the curly bracket.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/423#discussion_r480008128" expanded>

I think there should be a space between 'if' and the bracket and another space at the end before the curly bracket.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/423#discussion_r480010273" expanded>

I like how the line break comes before the || operator. The 8 space indentation is also good.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/423#discussion_r480010475" expanded>

Perhaps the line break should come before the + operator.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/423#discussion_r480010941" expanded>

I think there should be a space between 'if' and the bracket and another space at the end before the curly bracket.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/423#discussion_r480011015" expanded>

I think there should be a space between 'if' and the bracket and another space at the end before the curly bracket.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/423#discussion_r480011049" expanded>

I think there should be a space between 'if' and the bracket and another space at the end before the curly bracket.
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/423#discussion_r480011194" expanded>

I think there should be a space between 'if' and the bracket and another space at the end before the curly bracket.
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/423#discussion_r480011470" expanded>

I think there should be a space between 'for' and the bracket and another space at the end before the curly bracket.
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/423#discussion_r480011939" expanded>

I think you might have accidentally declared the Event class twice?
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/423#discussion_r480012284" expanded>

I like how the line break comes before the + operator.
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/423#discussion_r480012993" expanded>

The name of this boolean method sounds like a boolean, which is good.
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/423#discussion_r480014792" expanded>

Perhaps the String should be 'private static final'? Either that, or it should not be capitalised and separated by underscores since it is not a constant.
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/423#discussion_r480030506" expanded>

Perhaps the line breaks should come before the + operators.
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/175#discussion_r480037043" expanded>

Perhaps the method could be named confirmTaskDeletion instead?
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/175#discussion_r480037417" expanded>

Perhaps the method could be named confirmTaskAddition instead?
</panel>

<panel  header="**20 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/175#discussion_r480038180" expanded>

Perhaps the method could be named printDoneMessage instead?
</panel>

</panel>

<panel type="info" header="### 53. LE QUANG TUAN `@youaremysky99` (20 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/331#discussion_r479795705" expanded>

I think usage of stars should be avoided!
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/331#discussion_r479795794" expanded>

As "command" represent a list, should we change it to "commands" ?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/331#discussion_r479795912" expanded>

Format of javadoc is different from guidlines.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/331#discussion_r479796144" expanded>

Shoud FILE_PATH be a better choice here?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/331#discussion_r479796364" expanded>

 Maybe we should have spaces before open curly brackets "{".
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/297#discussion_r479798208" expanded>

This expression maybe a little bit complicated, readers may not understand the logics behind.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/297#discussion_r479798582" expanded>

This can be dangerous! newTask maybe uninitialized 
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/297#discussion_r479798713" expanded>

Should we change this to returnSearchTasks? 
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/297#discussion_r479798815" expanded>

Should we rename it, since it is a void, but having name of a noun?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/297#discussion_r479799054" expanded>

This may be dangerous.
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/272#discussion_r479796886" expanded>

This part is a little bit long, and maybe messy. I think we should avoid long methods by abstracting it (usage of polymorphism).
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/272#discussion_r479797006" expanded>

Is it better that we handle these exceptions so that Duke can keep running?
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/272#discussion_r479797132" expanded>

This method returns something. Based on naming guidlines, should we change the method's name to a noun?
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/272#discussion_r479797334" expanded>

This part may be abstracted to read more easily. 
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/272#discussion_r479797448" expanded>

Maybe we should avoid using "magic numbers" ?
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/57#discussion_r479792908" expanded>

Should we have Javadoc here?
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/57#discussion_r479794889" expanded>

Should we change it to getNumTasks?
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/57#discussion_r479795100" expanded>

I think stars should be avoided
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/57#discussion_r479795325" expanded>

Should we change taskString to taskStrings as it represents a list?
</panel>

<panel  header="**20 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/57#discussion_r479795437" expanded>

As in coding standard guidelines, all objects should be initialized when declared.
</panel>

</panel>

<panel type="info" header="### 54. TOH XUAN NING JEANNE `@jeannetoh99` (20 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/263#discussion_r481801011" expanded>

Perhaps you can use a switch statement here instead of an if-else statement to improve code readability? 
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/263#discussion_r481802527" expanded>

I like the naming of the boolean method. However, should this public method have a header comment? See [here](https://se-education.org/guides/conventions/java/index.html#comments). I noticed the same issue in several other places too.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/263#discussion_r481804132" expanded>

Should this method name be in the form of a verb instead? E.g. `printWelcomeCommand()`. I noticed the same issue in several other places too.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/263#discussion_r481807691" expanded>

Should you use a switch-case statement here instead?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/263#discussion_r481809690" expanded>

Should there be a spacing after "//" for comments? I noticed the same issue elsewhere too.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/263#discussion_r481813763" expanded>

This method seems to be particularly long and quite convoluted. Perhaps you can consider the following methods to make it more readable:
1. Break the code into logic blocks and abstract them into separate methods.
2. Write more comments to explain what each logic block handles. 
3. Use more switch-case statements or else-if statements, instead of many nested if and else statements.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/263#discussion_r481815158" expanded>

Should there be a @return param here?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/263#discussion_r481816910" expanded>

Should you remove the this keyword? The [java coding standard documentation](https://se-education.org/guides/conventions/java/index.html#variables) mentions to use this keyword only when a field is shadowed by a method or constructor parameter. I've noticed this issue in several other places as well.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/197#discussion_r481752334" expanded>

Should there be a punctuation at the end of the dateTime param? I see that you did it in most other params as well, might have missed this out.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/197#discussion_r481760711" expanded>

Perhaps the comments beside each case block can be more descriptive? Otherwise, maybe you can do away with the comments as they are repeating the words in the cases. :)
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/197#discussion_r481766175" expanded>

I'm not too sure if this rule applies to constructors as well, but should the first sentence of the method header comment start in the form of "Constructs ..."? See [Java Coding Standard -> Comments](https://se-education.org/guides/conventions/java/index.html#comments).
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/197#discussion_r481773961" expanded>

Should you remove the this keyword? The [java coding standard documentation](https://se-education.org/guides/conventions/java/index.html#variables) mentions to use this keyword only when a field is shadowed by a method or constructor parameter.
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/197#discussion_r481774716" expanded>

Should there be a punctuation at the end of this comment sentence as well? :)
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/197#discussion_r481777293" expanded>

Should this method be private since it is only used within the class? I noticed the same issue in several other places too.
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/197#discussion_r481782291" expanded>

Should this Boolean variable name be "isDirCreated"? The [java coding standard documentation](https://se-education.org/guides/conventions/java/index.html#naming) states that Boolean variables/method should be named to sound like booleans. I notice similar issues regarding the naming of Boolean variables elsewhere as well, perhaps you can do a quick look through your Boolean variable names! :)
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/197#discussion_r481784073" expanded>

I like the form of your switch statements! 👍 
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/197#discussion_r481786968" expanded>

Should the public methods have header comments? I notice that public methods in some files do not have header comments.
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/197#discussion_r481787526" expanded>

I like your indentation style! 👍 
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/197#discussion_r481788233" expanded>

Should this method name be in the form of a verb instead? E.g. `printFareWellMessage()`. See [Java Coding Standard -> Naming](https://se-education.org/guides/conventions/java/index.html#naming). I notice the same issue a few times in this file as well.
</panel>

<panel  header="**20 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/197#discussion_r481790645" expanded>

Should the '+' operator be in line 44 instead of line 43? See [here](https://se-education.org/guides/conventions/java/index.html#layout).
</panel>

</panel>

<panel type="info" header="### 55. LYE YI XIAN `@lyeyixian` (20 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/212#discussion_r480211828" expanded>

There is a missing space after the equal sign.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/212#discussion_r480212296" expanded>

Same as above.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/212#discussion_r480212376" expanded>

Same as above.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/212#discussion_r480217458" expanded>

I think you can include some descriptions about the method and the parameter.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/212#discussion_r480220956" expanded>

Should the method's name be in verb form?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/212#discussion_r480221193" expanded>

Should the method's name be in verb form?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/212#discussion_r480222058" expanded>

Should the method's name be in verb form?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/212#discussion_r480224107" expanded>

Would it be better to put the comment above the statement?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/212#discussion_r480224632" expanded>

Should it be "Represent(s) ..." ?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/212#discussion_r480224944" expanded>

Should it be "Represent(s) ..." ?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/212#discussion_r480226190" expanded>

Should a description of the method be added here?
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/212#discussion_r480228688" expanded>

Should it be "Loads ..." ?
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/212#discussion_r480228831" expanded>

Should it be "Saves..." ?
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/212#discussion_r480229333" expanded>

Should a description of the method be added here?
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/212#discussion_r480230400" expanded>

Should there be indentations for the case clauses?
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/212#discussion_r480231756" expanded>

Should a description of the method added here?
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/212#discussion_r480232342" expanded>

Should the abundant spaces between the parameter and its description be removed?
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/212#discussion_r480233567" expanded>

Should the abundant spaces between the parameter and its description be removed?
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/212#discussion_r480234364" expanded>

Should the abundant spaces between the parameter and its description be removed? I notice the same issue at other places too.
</panel>

<panel  header="**20 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/212#discussion_r480238831" expanded>

Should unwanted code be deleted instead of commented out?
</panel>

</panel>

<panel type="info" header="### 56. LIM KOON KIAT `@limkoonkiat` (20 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/400#discussion_r481176094" expanded>

I think it will be neater if the variables come before the constructor?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/400#discussion_r481179003" expanded>

I think it should be checkDoneness instead of checkDoness? Remember to check the Javadoc for Event too.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/400#discussion_r481180662" expanded>

Consider including a default branch, even if it only contains break?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/400#discussion_r481182978" expanded>

I believe there should be a space before prints? Also, don't forget to end your sentences in all your Javadocs with a full stop 😊
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/400#discussion_r481188688" expanded>

Consider breaking this line before the last + operator? I noticed the same issue in several other places too.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/400#discussion_r481192507" expanded>

Consider making them static final?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/400#discussion_r481195080" expanded>

Consider including a default branch with break here too?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/400#discussion_r481196455" expanded>

I believe in this case it should be Returns and not Prints?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/400#discussion_r481202326" expanded>

I think taskListing should be task list?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/400#discussion_r481212062" expanded>

Seems like a small typo with the second *?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/400#discussion_r481222205" expanded>

It seems like doneness should be some variation of getDoneness and checkDoneness should be some variation of setDoneness? Please correct me if I am wrong
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/400#discussion_r481783677" expanded>

Yes under the part on layout in the java coding standards. To quote, 
> Break before an operator. This also applies to the following "operator-like" symbols: the dot separator ., the ampersand in type bounds <T extends Foo & Bar>, and the pipe in catch blocks catch (FooException | BarException e)

There are also some examples on that page with the + on a new line. 
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/400#discussion_r481790291" expanded>

I think the convention is to put the constructor currently on line 8 after your instance variables from lines 12 to 16? Correct me if I am wrong

https://www.oracle.com/java/technologies/javase/codeconventions-fileorganization.html
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/400#discussion_r483448711" expanded>

Looks good! 👍
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/129#discussion_r480918650" expanded>

Consider putting the comment above the line? I noticed the same issue in several other places too but I think this is a matter of personal preference so it is not major. 
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/129#discussion_r480927534" expanded>

Do you mean If an empty item description is given?
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/129#discussion_r480931017" expanded>

Seems like a missing full stop?
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/129#discussion_r481030714" expanded>

Consider using slightly more descriptive variable names?
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/129#discussion_r481040617" expanded>

Perhaps update the javadoc for both AddCommand and ListCommand?
</panel>

<panel  header="**20 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/129#discussion_r481043023" expanded>

While it can be seen what this method does from @param and @return, perhaps a little more information on that in the description will be helpful?
</panel>

</panel>

<panel type="info" header="### 57. AMELIA TAN JIN YU `@ameliatjy` (20 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/357#discussion_r482162927" expanded>

Perhaps you could edit this Javadoc comment to describe your completed method?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/357#discussion_r482163683" expanded>

Should this public method come along with a Javadoc comment?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/357#discussion_r482164093" expanded>

Should this public method come along with a Javadoc comment? I noticed similar issues in other classes as well.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/357#discussion_r482164801" expanded>

Is there a missing statement within the Javadoc comment to describe the what the method returns?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/357#discussion_r482168905" expanded>

Perhaps the variable name should be a noun instead?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/147#discussion_r479978008" expanded>

Perhaps you could avoid deep nesting in the body of this method? Since this method is longer than 30 LOC, maybe you could split into several methods or classes?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/147#discussion_r479979388" expanded>

Perhaps you could shorten this method by extracting some LOC into several other methods or classes?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/147#discussion_r479980570" expanded>

Perhaps you could avoid deep nesting in this method body? I noticed the same issue in several other classes as well.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/147#discussion_r479983327" expanded>

Perhaps the String[] toFind could be better named to reflect the variable it contains?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/147#discussion_r479984402" expanded>

Should the class name be a noun instead (i.e. CommandFinder)?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/147#discussion_r479984947" expanded>

Should the class name be a noun instead? I noticed the same issue with the naming of several other classes as well.
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/101#discussion_r479959247" expanded>

Should this method include a Javadoc comment?
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/101#discussion_r479959484" expanded>

Should this class include a Javadoc comment?
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/101#discussion_r479960593" expanded>

Should this method include a Javadoc comment? I noticed the same issue in several other methods and classes too.
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/101#discussion_r479962857" expanded>

Should there be a punctuation behind each parameter description? I noticed the same issue in several other Javadoc comments too.
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/101#discussion_r479963110" expanded>

Perhaps you could standardize if the description of each @param after the parameter name begins with an uppercase or not?
Also, should there be a punctuation behind each parameter description?
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/101#discussion_r479965550" expanded>

Should this be phrased as "Removes ..." rather than "Remove ..."?
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/101#discussion_r479966148" expanded>

Should this be phrased as "Returns a ..."?
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/101#discussion_r479966958" expanded>

Should there be an empty line between the description and parameter section?
</panel>

<panel  header="**20 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/101#discussion_r479969022" expanded>

Perhaps the test method name could be better constructed to follow the format: featureUnderTest_testScenario_expectedBehavior()? I noticed the same issue in most of the other test methods as well.
</panel>

</panel>

<panel type="info" header="### 58. DANIEL ADIPRANOTO `@danadi7` (19 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/364#discussion_r482145524" expanded>

You might want to use a more descriptive name like `taskList` than just `list`.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/364#discussion_r482147610" expanded>

Agree with this comment.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/364#discussion_r482148171" expanded>

Agree with this comment, though as this is just a temporary variable, it is not too big an issue.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/364#discussion_r482153734" expanded>

There's an extra blank line here before the closing brace as well. Should remove to follow coding standards.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/364#discussion_r482154531" expanded>

There is an extra blank line here before the closing brace.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/364#discussion_r482155599" expanded>

Agree with this comment. Perhaps give it a more descriptive name?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/364#discussion_r482160084" expanded>

There are 2 blank lines here, but one blank line between other methods. Try to keep it to one line between methods for consistency.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/364#discussion_r482161243" expanded>

Not explicitly in the coding standard, but as highlighted by GitHub here and based on personal experience, I think it is tradition/standard in many places to end a file with a new (blank) line.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/364#discussion_r482163198" expanded>

You have 3 blank lines between methods here. Perhaps consider keeping to just 1 line for consistency.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/364#discussion_r482163712" expanded>

There is a blank line before the closing brace. Consider removing to reduce the number of lines.
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/358#discussion_r482167900" expanded>

Naming a new line as `error` and then overriding it with an actual error may be confusing. Perhaps consider making separate variables for each.
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/358#discussion_r482168704" expanded>

Not explicitly in the coding standards, but I think it's traditional / standard practice to end a file with a blank new line, as highlighted by GitHub here.
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/358#discussion_r482171253" expanded>

Javadoc not descriptive of function! I think you copy-pasted and forgot to change here. 😝 
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/358#discussion_r482173059" expanded>

I think this is not an issue as this is a scratch variable used only on this line.
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/358#discussion_r482175805" expanded>

Seems like the purpose of this function is to catch an exception and throw a different exception in its place. Not sure if this is good practice as it may mask errors.
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/358#discussion_r482176611" expanded>

Agree with this. Perhaps consider renaming it to something more specific?
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/358#discussion_r482178273" expanded>

Perhaps consider naming it just `lineBreak`? Naming it `lineBreaker` makes it seem like it has a function.
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/358#discussion_r482179371" expanded>

Agree with this. `details` does not identify it as a LocalDate object, though as this is just a temporary variable it is not a big issue.
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/358#discussion_r482180867" expanded>

You named `Scanner` as `scanner` in some classes, and `s` in others. Do consider keeping the names consistent for ease of reading the code.
</panel>

</panel>

<panel type="info" header="### 59. TOH ZHEN YU, NICHOLAS `@nicktohzyu` (19 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/330#discussion_r481927741" expanded>

Can't do gradle-tasks-application-run currently. I believe this line should be changed to
`mainClassName = "duke.Duke"`
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/330#discussion_r481929437" expanded>

I'd suggest adding this to your gitignore
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/253#discussion_r482094002" expanded>

Consider using LocalDateTime instead.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/253#discussion_r482094253" expanded>

Look up ISO 8601.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/253#discussion_r482094990" expanded>

There probably is an existing API method for this
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/253#discussion_r482098063" expanded>

This logic should be in DateAndTime (if you choose to keep that class), especially because this is the only place the constructor is used
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/253#discussion_r482104265" expanded>

The word "line" is ambiguous, as in system.out.println. Maybe call it printDivider instead?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/253#discussion_r482107186" expanded>

Meaning of "des" should be explained.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/253#discussion_r482107617" expanded>

`createDirectory` already checks if the directory exists.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/253#discussion_r482109533" expanded>

Same comment as `createDirectory`.
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/253#discussion_r482110688" expanded>

Perhaps this should be called `loadTasks`, as it can load multiple.
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/253#discussion_r482112120" expanded>

Seems like loadTask can be absorbed into this function.
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/253#discussion_r482115975" expanded>

Consider using serialization instead. Otherwise, good practice would be to write tests for the conversion methods here.
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/253#discussion_r482119120" expanded>

Redundant comment, there's no need to explain what strip does (it has its own javadocs).
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/253#discussion_r482119688" expanded>

Nice! Could be absorbed into `toString` as both methods are short.
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/253#discussion_r482121185" expanded>

Should add a blank line between description and param.
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/253#discussion_r482121604" expanded>

Great use of try-catch!
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/253#discussion_r482123869" expanded>

Shadows line 14.
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/253#discussion_r482123980" expanded>

Can be final.
</panel>

</panel>

<panel type="info" header="### 60. SHI JING LIN `@aqcd` (19 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/102#discussion_r479897111" expanded>

This might have been missed while merging! Should this be here?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/102#discussion_r479898191" expanded>

Would it be clearer to list the imported classes explicitly?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/102#discussion_r479898492" expanded>

Should this variable be named "ui" instead?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/102#discussion_r479898785" expanded>

I like that you made classes for the specific types of exceptions!
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/102#discussion_r479900889" expanded>

Should the call to .substring be formatted in a better way? Noticed this in a few other places as well!
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/102#discussion_r479901969" expanded>

Should there be better spacing with the '+'s?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/102#discussion_r479903141" expanded>

Should there be an explanation on why this method executes nothing? I expected it to be the method that terminates the application.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/102#discussion_r479903623" expanded>

Should this method be returning false? It's currently returning true.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/102#discussion_r479907331" expanded>

Should this JavaDoc be in the next line?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/102#discussion_r479907718" expanded>

Should this line be 1 extra line below the previous? Noticed this in some other places too!
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/102#discussion_r479909294" expanded>

Noticed some extra lines after JavaDocs. Should the JavaDoc style be consistent?
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/102#discussion_r479909438" expanded>

Should this line be better spaced?
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/94#discussion_r479946601" expanded>

Should the indentation for "case" be 1 tab less?
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/94#discussion_r479949103" expanded>

Should there be newline at end of file? Noticed this in some other places too!
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/94#discussion_r479949807" expanded>

Might "splitString" be a better name for this method?
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/94#discussion_r479950219" expanded>

Might "splitStringWithLimit" be a better name for this method?
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/94#discussion_r479952606" expanded>

Might "getTasksContaining" be a better name for this metohd?
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/94#discussion_r479954425" expanded>

Might "saveTasks" be a better name for this method?
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/94#discussion_r479954819" expanded>

Might SAVE_PATH be a better name for this variable?
</panel>

</panel>

<panel type="info" header="### 61. HOGAN TAN SHAO HAN `@hogantan` (19 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/469#discussion_r480127733" expanded>

Could the name "inputs" be a little more precise when it comes to referring a TaskList?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/469#discussion_r480129100" expanded>

Do you think adding a JavaDoc description here would allow other users to better understand what exactly Duke does?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/469#discussion_r480129796" expanded>

Missing full stop for JavaDoc here!
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/469#discussion_r480130241" expanded>

Interesting use of static classes and interfaces here!
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/469#discussion_r480131089" expanded>

You could try naming this boolean more like a boolean, something like isDone.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/469#discussion_r480133574" expanded>

Might be a little typo here, but don't forget to caps the first letter of the sentence!
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/469#discussion_r480134846" expanded>

I realised the use of substring to get specific keywords from the user input. An alternative to this would be to use the split() function of String to split the user input up!
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/469#discussion_r480136412" expanded>

Maybe you can consider making this more succint. In other words, try to avoid nesting conditionals which could get quite messy, though I am guilty of this too!
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/469#discussion_r480137413" expanded>

Are these missing their access modifiers? It would be best to make them private!
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/469#discussion_r480138215" expanded>

You could try making these code more succint by nesting lesser conditionals together!
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/469#discussion_r480140141" expanded>

You could try using the tick symbol instead of a '/'. The four-digit hex code for the tick symbol is \u2713.
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/158#discussion_r480155616" expanded>

Interesting way of parsing user input here!
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/158#discussion_r480158632" expanded>

Should you add an error message for DateTimeParseException to give more informative feedback to user?
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/158#discussion_r480160679" expanded>

Cool idea of placing the runCommand function in the TaskList clear. An alternative could be placing this function in the respective Command classes!
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/158#discussion_r480161354" expanded>

You could possibly do away with the curly braces for the case blocks!
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/158#discussion_r480164539" expanded>

Be careful with using contains here because it might lead to unexpected search results! Take for example, if I did something like this: 
String input = "basement";
input.contains(base) will return true which might not be intended!
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/158#discussion_r480165241" expanded>

Similarly, you could do away with the curly braces here for the case blocks!
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/158#discussion_r480165666" expanded>

Interesting toStore function here!
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/158#discussion_r480167009" expanded>

Maybe this could be worded more precisely. Meaning you could add what the user input is and what the expected outcome is in the test name.
</panel>

</panel>

<panel type="info" header="### 62. KISHEN ASHOK KUMAR `@KishenKumarrrrr` (19 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/383#discussion_r479873127" expanded>

I think the Duke class should have its own package statement.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/383#discussion_r479873399" expanded>

Should the main method have its own documentation since it is a public method?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/383#discussion_r479873467" expanded>

Should this method have JavaDocs documentation ? Likewise for the the other exception class' methods 😃 
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/383#discussion_r479875856" expanded>

Should there be a space between the class declaration and the first bracket ?
I think there are a few more instances.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/383#discussion_r479876138" expanded>

Should we bulk import packages?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/383#discussion_r479876333" expanded>

I think the "Construct..." should be on a new line.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/383#discussion_r479876435" expanded>

Should we explicitly set the visibility of our class variables?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/383#discussion_r479876613" expanded>

I think we should end our JavaDoc sentences with a full stop.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/383#discussion_r479877312" expanded>

Is this the correct form for if-else blocks?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/383#discussion_r479877978" expanded>

Should we have a JavaDocs comment for the class description ?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/383#discussion_r479878480" expanded>

Should there be a space here?
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/383#discussion_r479879104" expanded>

I think you forgot the documentation for this method.
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/383#discussion_r479879410" expanded>

Is your indentation correct ?
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/383#discussion_r479879716" expanded>

Should there be a space between the method description and parameter section?
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/383#discussion_r479879762" expanded>

I think you forgot to add documentation for this method.
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/309#discussion_r479887379" expanded>

Perhaps the variable could have a slightly more descriptive name?
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/309#discussion_r479889094" expanded>

_found_ sounds alright but I don't know if it is required for it to be named as a question. 🤔 
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/309#discussion_r479889708" expanded>

Perhaps we should not abbreviate variable names?
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/309#discussion_r479889810" expanded>

Perhaps try to name the boolean variable as a question?
</panel>

</panel>

<panel type="info" header="### 63. GIDIJALA SAI RAHUL `@Rahul0506` (19 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/278#discussion_r483023788" expanded>

A Javadoc comment would be more appropriate here since the reader might not know what you are referring to


</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/278#discussion_r483030702" expanded>

Comment might be unnecessary here since the method name is quite self-explanatory
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/278#discussion_r483031866" expanded>

Perhaps include more line breaks to make it more readable?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/278#discussion_r483035528" expanded>

Seems like an unnecessary class member. Maybe declare a local variable if you do want to use it since it is not used elsewhere in the class?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/141#discussion_r483047466" expanded>

Consider using an enumeration and declaring these as members of respective sub-classes as a particular class's command would be unnecessary and out-of-scope for all other classes.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/141#discussion_r483049267" expanded>

Comment seems to contain a little unnecessary/misplaced information. Information on the class members can be given using their own javadocs.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/141#discussion_r483051201" expanded>

Javadocs for Command sub-classes could be more concise as comments on `execute` already include some information.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/141#discussion_r483052513" expanded>

Code like this seems like its breaking abstraction. Is there a way `Ui` could be refactored to process the messages internally?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/141#discussion_r483054374" expanded>

Can this be abstracted as it is repeated in both Event and Deadline creation?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/141#discussion_r483056246" expanded>

This could also be abstracted into the Ui class where it can handle all the formatting in one place.
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/141#discussion_r483060752" expanded>

This seems like another possible case of breaking abstraction. Consider including a method for the two types of `Tasks` to make this check themselves.
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/141#discussion_r483061315" expanded>

Same as in `ShowAfterCommand`
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/141#discussion_r483062496" expanded>

Comments could be more concise. By convention usually the "how" is not really included in comments.
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/141#discussion_r483063586" expanded>

Comments on `toString` methods of Exception sub-classes seem unnecessary as method is self-explanatory.
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/141#discussion_r483066401" expanded>

Code seems to be repeated/very similar. Have you considered abstracting it into a method?
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/141#discussion_r483068298" expanded>

In these checks, consider using `startswith` or a more appropriate check as it might find the keyword anywhere within the input.
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/141#discussion_r483071551" expanded>

Repeated/similar code, possibility to abstract into a method?
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/141#discussion_r483075075" expanded>

Naming of these methods seem a bit misleading. Consider naming them as `print...` or `output...`
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/141#discussion_r483075566" expanded>

Could be better names as a verb, e.g. `requestCommand`?
</panel>

</panel>

<panel type="info" header="### 64. TENG JIAN LING `@tengjianling` (19 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/344#discussion_r480200785" expanded>

Should the enum instances be fully capitalized?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/344#discussion_r480202534" expanded>

Maybe list out the imports explicitly instead of using .*?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/344#discussion_r480203493" expanded>

Maybe arrange the imports in lexicology order?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/344#discussion_r480205375" expanded>

Maybe split this line into different lines for better readability?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/344#discussion_r480205692" expanded>

Did you forget to remove this line?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/344#discussion_r480206661" expanded>

Maybe extract the components in this method into different methods? There is a lot of information in just 1 method.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/344#discussion_r480208142" expanded>

Remember to delete this if you're not using it in your code!
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/344#discussion_r480213029" expanded>

Maybe extract out some parts of this method to shorten it? This method may become even longer as more functions of the application is added later on.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/344#discussion_r480213671" expanded>

Maybe explicitly importing each line rather than using .* would be clearer?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/344#discussion_r480214661" expanded>

Maybe changed the naming of this variable to isCompleted?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/18#discussion_r480170406" expanded>

Good work extracting out the different exceptions!
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/18#discussion_r480175240" expanded>

Maybe extract the number 3 into a static variable? That would make what the number 3 stands for clearer.
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/18#discussion_r480176369" expanded>

Maybe extract the number 4 into a static variable?
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/18#discussion_r480180129" expanded>

Would it be clearer if you stored the numbers for length of "todo", "deadline" and "event" as variables?
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/18#discussion_r480183589" expanded>

cute!
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/18#discussion_r480184615" expanded>

Is there a reason you used 4 spaces instead of INDENT like before?
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/18#discussion_r480188684" expanded>

is it necessary to have the "//" comment if the format is already show in javadoc comment?
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/18#discussion_r480189624" expanded>

What are these lines for?
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/18#discussion_r480189868" expanded>

Good work storing the task types as enums!
</panel>

</panel>

<panel type="info" header="### 65. TRAVIS TOH GUAN WEI `@Trav1sT` (19 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/399#discussion_r481034818" expanded>

It is required in the style guide to list out imported classes explicitly instead of using wildcard.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/399#discussion_r481036055" expanded>

I think it is recommended to have the packages in all lower case.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/399#discussion_r481036827" expanded>

Perhaps, the class header should be more of what to expect of the class rather than a description of one of its methods
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/399#discussion_r481037477" expanded>

Please put a white space after keywords such as if and while, and also after the closing parenthesis and before the braces.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/399#discussion_r481038217" expanded>

Similarly, white spaces are missing here. 
P.S. I notice the same issue elsewhere. I will stop commenting on this issue.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/399#discussion_r481039806" expanded>

You may want to consider reducing the length of this function and also it may be a good idea to not nest conditional stmts inside the condition as there are already many conditional stmts. Blocks of code that are commented out can be removed. 
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/399#discussion_r481040431" expanded>

I would write addToList instead
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/399#discussion_r481040993" expanded>

Please leave a line between the description and @param. Perhaps you would want to add more information on the param
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/399#discussion_r481041600" expanded>

Is this needed? Perhaps you could add @override above too.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/399#discussion_r481042111" expanded>

I like how the constants are grouped together and named.
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/399#discussion_r481042703" expanded>

Please leave a line after the description.
P.S. this applies to other javadocs too. I will stop commenting on this issue:)
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/399#discussion_r481043330" expanded>

Perhaps, you could remove this?
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/399#discussion_r481044331" expanded>

Perhaps, the language and punctuation can be improved. Such as period at the end of the sentences.
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/244#discussion_r481048722" expanded>

Perhaps `.strip()` can be used here instead as it is unicode compliant
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/244#discussion_r481050478" expanded>

I like how 'String.format()' is used and StringBuilder is used as it is not a short string.
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/244#discussion_r481051181" expanded>

I like how a list of patterns is used to allow more flexibility in user's input for date and time.
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/244#discussion_r481051898" expanded>

I feel like this can be shortened with a loop or switch case. Did you do it this way because it might be more readable?
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/244#discussion_r481053106" expanded>

To me, one function for each type of command seems a bit excessive. Perhaps, there are other ways you would like to shorten this and make it seem less repetitive? 
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/244#discussion_r481055059" expanded>

Given the multiple formats allow, perhaps you would want to test other valid and invalid inputs as well.
</panel>

</panel>

<panel type="info" header="### 66. LIU YANGMING `@richardcom` (18 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/315#discussion_r480640431" expanded>

Maybe shall we change the method name to be more detailed such as ```parseCommand``` ?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/315#discussion_r480643451" expanded>

As the scope of ```f``` is the ```load()``` method, which is not very small, maybe shall we change the variable name to ```file``` to be longer and more detailed?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/315#discussion_r480648366" expanded>

Shall we change the test method name to ```testRecordString()``` to be more detailed and specific?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/315#discussion_r480654926" expanded>

Maybe shall we change ```protected``` to ```private``` ?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/315#discussion_r480659615" expanded>

I really like this coding practice here as the code makes use of the default branch to detect possible errors and throw out exceptions.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/315#discussion_r480660608" expanded>

Maybe shall we change the naming of ```directoryMade``` to ```isDirectoryMade```?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/315#discussion_r480663172" expanded>

Maybe shall we change the naming of this method to ```getSize()```? As it may sound more like an action.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/315#discussion_r480665410" expanded>

I think the naming of the method is generally okay. But I think that maybe shall we change it to ```displayList(TaskList tasks)``` to make it more detailed and specific? The same applies to the other method namings below.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/315#discussion_r480669329" expanded>

Maybe shall we change the naming to ```initializeDukeUi``` with a lower-case "i"?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/284#discussion_r480580110" expanded>

Shall we add a description of the return value(```@return```) here in Javadoc?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/284#discussion_r480583155" expanded>

The coding style looks good! I really like this as it is nice and clean. 👍 
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/284#discussion_r480584218" expanded>

Shall we add one blank line here between the overall description and ```@return``` in Javadoc? I think this may also apply to other Javadoc as well.
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/284#discussion_r480586636" expanded>

Shall we use _Lists out the saved tasks ..._  here in Javadoc description?
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/284#discussion_r480587735" expanded>

Shall we use _Marks the task..._ here?
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/284#discussion_r480590186" expanded>

Shall we add a //Fallthrough comment here as this is a case statement without a break statement.
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/284#discussion_r480593618" expanded>

Shall we add a blank line between the package statement and the import statement here?
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/284#discussion_r480597419" expanded>

Maybe shall we try to avoid naming variables using number index(e2) here? But indeed as it has a very small scope, thus I think the naming may also be okay.
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/284#discussion_r480599115" expanded>

Shall we add a description of the parameters of this method in the Javadoc as well? This suggestion also applies to the Javadoc of other methods as well. 
</panel>

</panel>

<panel type="info" header="### 67. CAI JIA LIN `@jialin7878` (18 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/342#discussion_r481275480" expanded>

missing header comment for public method
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/342#discussion_r481275877" expanded>

nice constant names!
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/342#discussion_r481277325" expanded>

need line separation between description and @return/@param (for other javadoc also) 
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/342#discussion_r481281639" expanded>

nice test names!
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/260#discussion_r480190107" expanded>

isCompleted
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/260#discussion_r481268436" expanded>

header comments (for other public classes too)
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/260#discussion_r481269165" expanded>

//unknown input on same indentation as line below
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/260#discussion_r481271291" expanded>

me too
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/112#discussion_r481287569" expanded>

 empty line between description and parameter sections
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/112#discussion_r481289098" expanded>

method is a bit long, maybe can separate the first file creation part into another method?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/112#discussion_r481289448" expanded>

nice error catching :-)
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/112#discussion_r481289774" expanded>

header comment for public class (for event/task/tasklist ..)
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/112#discussion_r481291136" expanded>

i like the tutorial!! nice hehe
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/112#discussion_r481291336" expanded>

nice test names :-)
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/112#discussion_r481292404" expanded>

ah nice, very thoughtful for user hehe
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/112#discussion_r481292600" expanded>

empty line
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/112#discussion_r481294709" expanded>

maybe can abstract file creation and reader/writer creation to before the switch statement? 
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/112#discussion_r481295918" expanded>

maybe storage.writeToFile and success statement can be abstracted to outside of the switch statement also? can improve readability :-)
</panel>

</panel>

<panel type="info" header="### 68. MARCUS TAN WEI `@MarcusTw` (18 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/349#discussion_r480897778" expanded>

Should it these enum constants be in all caps?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/349#discussion_r480906663" expanded>

boolean method can be named isDone() instead.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/349#discussion_r480908249" expanded>

Very clean psvm method!
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/349#discussion_r480908531" expanded>

Perhaps a line space between properties and the class constructor.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/349#discussion_r480908835" expanded>

Perhaps a line space between properties and class constructor.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/349#discussion_r480914805" expanded>

Perhaps add a space between Javadoc description and @param (line 6 and 7).
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/349#discussion_r480919345" expanded>

Perhaps boolean can be named "isDone"?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/349#discussion_r480920263" expanded>

Perhaps you can leave a line space between line 43 and line 44
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/349#discussion_r480921800" expanded>

Perhaps change the method name to "printErrorMessage" or "printErrorMsg" as mentioned by Zhi Yuan.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/344#discussion_r480928739" expanded>

Enums are constants so perhaps it is fine to be fully capitalised.
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/344#discussion_r480929529" expanded>

Perhaps you may avoid the usage of * in import statements because it will help you and other developers easily understand the code base when all the classes have been grouped in packages.
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/344#discussion_r480931319" expanded>

Perhaps the variable line can be final, with capitalised variable name as a constant?
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/344#discussion_r480932544" expanded>

Maybe you can leave a line between methods? (between line 30 and line 31)
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/344#discussion_r480933289" expanded>

Perhaps this empty space at line 80 can be removed?
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/344#discussion_r480935833" expanded>

Perhaps bot.chat(sc.nextLine()) can be added under the while loop instead of the conditional cases to make the while loop clearer?
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/344#discussion_r480938189" expanded>

Perhaps as Jian Ling mentioned, you can extract out the methods and break the long chunk of code down into smaller methods to make this method cleaner?
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/344#discussion_r480942607" expanded>

Perhaps you may avoid the usage of * in import statements because it will help you and other developers easily understand the code base when all the classes have been grouped in packages.
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/344#discussion_r480947355" expanded>

Perhaps the description of javadocs can start with "Marks" instead of "Mark"?
</panel>

</panel>

<panel type="info" header="### 69. JONAH TAN JUN ZI `@jonahtanjz` (18 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/416#discussion_r479979531" expanded>

Perhaps you could leave a space between try and the opening curly brace?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/416#discussion_r479979723" expanded>

Same issue as above for the catch statement.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/416#discussion_r479979909" expanded>

Please have some spacing here as well. I noticed this in other places as well perhaps you can look through your code and change them accordingly.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/416#discussion_r479980814" expanded>

I believe you can use \t instead of 4 white spaces to represent a tab.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/416#discussion_r479982008" expanded>

You might want to separate them accordingly?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/416#discussion_r479983461" expanded>

Good job on the good readability of the if-else statement 👍 
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/416#discussion_r479984251" expanded>

Maybe the "?" should be on the next line? 
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/416#discussion_r479984361" expanded>

Same issue as above. I noticed this in other places as well perhaps you can look through your code and change them accordingly.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/416#discussion_r479986087" expanded>

You might want to add some spacing here? I noticed this in other places as well perhaps you can look through your code and change them accordingly.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/186#discussion_r480007355" expanded>

Perhaps you can put this line inside an else block as it is a condition for 'everything else'?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/186#discussion_r480009382" expanded>

You might want to put this in a if-elseif-else statement?
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/186#discussion_r480010446" expanded>

Maybe you want to explicitly import the classes and avoid wildcards?
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/186#discussion_r480010655" expanded>

Same issue listed above. I noticed this in other places as well perhaps you can look through your code and change them accordingly.
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/186#discussion_r480011560" expanded>

Perhaps you can separate java.io imports from java.util?
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/186#discussion_r480014410" expanded>

You might want to add a default condition for the switch statement? I feel this can alert the user in case they accidentally open up the txt file and change the first value to something else.
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/186#discussion_r480023067" expanded>

Wow. This is art 💯
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/186#discussion_r480025087" expanded>

You might want to include a default statement here? I believe this will ensure the 'type' you pass into this function has no spelling errors for easier debugging.
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/186#discussion_r480025211" expanded>

You might want to include a default statement here? I believe this will ensure the 'type' you pass into this function has no spelling errors for easier debugging.
</panel>

</panel>

<panel type="info" header="### 70. KEVIN WILLIAM `@kevnw` (18 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/380#discussion_r480096865" expanded>

Perhaps can consider changing the method name to become more descriptive. (e.g. runChatbot() or runApplication()).
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/380#discussion_r480097857" expanded>

Perhaps can consider changing the variable input to something like userCommand.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/380#discussion_r480098520" expanded>

Perhaps can consider changing the method name into getNumOfTasks().
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/380#discussion_r480102797" expanded>

Perhaps can consider changing the method name into checkSavedFile().
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/380#discussion_r480103302" expanded>

Consider initializing the task variable first.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/380#discussion_r480103598" expanded>

Perhaps consider changing the variable i into index to be more descriptive.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/380#discussion_r480104356" expanded>

Consider changing the variable at into something more descriptive.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/380#discussion_r480104652" expanded>

Good job for using the UTF representation!
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/380#discussion_r480105524" expanded>

Perhaps can explain more clearly what does it mean by having an invalidInput?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/217#discussion_r480109136" expanded>

Perhaps can consider changing the variable de to be more descriptive.
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/217#discussion_r480110099" expanded>

Can consider changing the variable ev to be more descriptive (e.g. eventInput)
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/217#discussion_r480112523" expanded>

Perhaps can consider changing this variable name to be more descriptive. (e.g taskDeadline)
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/217#discussion_r480113270" expanded>

Consider changing the method name to be more explanatory, so to avoid ambiguity between other execute methods from other classes.
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/217#discussion_r480114588" expanded>

I noticed you used the word execute quite frequently. Perhaps can consider changing it to be more class-specific so as to avoid ambiguity.
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/217#discussion_r480115299" expanded>

Perhaps can consider checking the coding convention for switch cases, I recall that case should be aligned with the switch command in terms of spacing. 👍 
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/217#discussion_r480115530" expanded>

Can consider making the method name more descriptive like readFromFile().
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/217#discussion_r480116524" expanded>

Consider following the convention for writing testing methods: featureUnderTest_testScenario_expectedBehavior(). For this case, maybe can consider changing it into parseCommands_validTodoInput_success()
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/217#discussion_r480116737" expanded>

Consider following the convention for writing testing methods: featureUnderTest_testScenario_expectedBehavior(). For this case, maybe can consider changing it into getTask_validTaskInput_success()
</panel>

</panel>

<panel type="info" header="### 71. DHAFIN RAZAQ OKTOYUZAN `@dhafinrazaq` (18 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/467#discussion_r480628684" expanded>

Should there be whitespace after "if"? I noticed the same issue in several other places too. 
Reference: "Java reserved words should be followed by a white space." from CS2103 Java coding standard web page
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/467#discussion_r480629546" expanded>

Should the name of the boolean be "isExist"? I also noticed the same issue in other boolean variables too.
Reference: "Boolean variables/methods should be named to sound like booleans"
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/467#discussion_r480634532" expanded>

Hi, should there be a package statement above this line?
Reference: "Every class should be part of some package."
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/467#discussion_r480640567" expanded>

Should the plus sign at the end of the line be placed below instead (i.e. after the break)?
Reference: "Break before an operator."
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/467#discussion_r480645216" expanded>

Should this be declared as non-public? I also see the same issue on some other variables.
Reference: "Class variables should never be declared public unless the class is a data class with no behavior."
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/467#discussion_r481237944" expanded>

it actually depends on how the directory in your project looks like. one of my package statements is "package command"
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/467#discussion_r481239584" expanded>

I'm not 100% sure, but I think it means methods
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/212#discussion_r481055850" expanded>

Should the userinput become userInput instead (camelCase)?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/212#discussion_r481060599" expanded>

Should the variable name ("by") be a noun?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/212#discussion_r481066119" expanded>

It might be only me, but I personally think eventArr would be some kind of array containing some events. Perhaps a name that could describe that it is a pair of description and time?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/212#discussion_r481071765" expanded>

I'm not 100% sure, but I feel that "writeData" is more of a verb instead of a noun. Perhaps a name that sounds more like a noun? This is also the case for "writeStream" below
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/212#discussion_r481076250" expanded>

This is a similar case from "writeData", but I like this one more! This is because "writeData" sounds like a verb, while "readData" sounds like a noun if we read the "read" as the past form of the verb "read".
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/212#discussion_r481079076" expanded>

Although the scope of "s" is small, should it be more descriptive?
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/212#discussion_r481080912" expanded>

Should "search" be a noun?
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/212#discussion_r481082648" expanded>

Should the "at" be a noun? I also found other similar cases
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/212#discussion_r481083901" expanded>

Should "in" be a noun?
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/212#discussion_r481085672" expanded>

Should this be userImage and dukeImage so that it's consistent with the "MainWindow" file, and to avoid confusion between a Duke instance (of class Duke) and duke image (of class Image)?
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/212#discussion_r481088278" expanded>

Should "temp" be more descriptive?
</panel>

</panel>

<panel type="info" header="### 72. THEODORE LEEBRANT `@theodoreleebrant` (17 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/321#discussion_r482812581" expanded>

Could you remove this line, as per Google Java Styleguide?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/321#discussion_r482812659" expanded>

Could you remove this line, as per Google Java Styleguide?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/321#discussion_r482813081" expanded>

Could you remove this line, as per Google Java Styleguide?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/321#discussion_r482813175" expanded>

Could you remove this line, as per Google Java Styleguide?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/321#discussion_r482813467" expanded>

Could you remove this line, as per Google Java Styleguide?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/321#discussion_r482813520" expanded>

Could you remove this line, as per Google Java Styleguide?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/321#discussion_r482813575" expanded>

Could you remove this line, as per Google Java Styleguide?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/321#discussion_r482813879" expanded>

`VALID_COMMAND` probably should be renamed as `VALID_COMMANDS`
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/321#discussion_r482814548" expanded>

The `case`s have a wrong indentation level, as per SEEDU's java coding standard. Unfortunately this one is one that IntelliJ won't catch :(
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/321#discussion_r482815372" expanded>

Have you tried the edgecase of just space characters? Might want to look into Java's `String.strip()` method.
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/321#discussion_r482815525" expanded>

Could you remove this line, as per Google Java Styleguide?
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/98#discussion_r482803703" expanded>

Could you remove the line break here, as per Google Java Style Guide?
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/98#discussion_r482804077" expanded>

Could you remove the line break here, as per Google Java Style Guide?
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/98#discussion_r482804165" expanded>

Could you remove the line break here, as per Google Java Style Guide?
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/98#discussion_r482804262" expanded>

Could you remove the line break here, as per Google Java Style Guide?
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/98#discussion_r482804765" expanded>

Agreed, it would probably be better if the `java.util.ArrayList` is separated in a new line.
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/98#discussion_r482805052" expanded>

Perhaps a more descriptive variable name would be more apt here.
</panel>

</panel>

<panel type="info" header="### 73. DIANNE LOH WEN HUI `@dianneloh9` (17 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/126#discussion_r480000094" expanded>

Perhaps the parameter should not be named `dateTime` as it might imply that it includes a time?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/126#discussion_r480001262" expanded>

It may be better to have a new line at the end of the file to follow standard conventions.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/126#discussion_r480002721" expanded>

It would be good to add javadocs comments for all the public methods.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/126#discussion_r480003027" expanded>

Perhaps there should be an access modifier here.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/126#discussion_r480004800" expanded>

Why do you choose to use if-else statements over switch-case? 
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/126#discussion_r480007651" expanded>

Would this seem a little repetitive with GuiParser?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/126#discussion_r480008769" expanded>

Why is everything commented out? Perhaps this file should be deleted if it is no longer needed.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/80#discussion_r480015706" expanded>

It may be clearer to have line breaks between different fields or methods.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/80#discussion_r480016742" expanded>

It would help the reader if more information were given about each parameter.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/80#discussion_r480019050" expanded>

Would it be more understandable if the method name describes what this method is doing, for example, `stripAndTokenizeCommand()` as it is unclear what `processedCommand` and `furtherProcessing` does. Method names also should be in verb form.
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/80#discussion_r480019704" expanded>

Why is this called `init()`?
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/80#discussion_r480020393" expanded>

Missing whitespace after `for`.
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/80#discussion_r480022006" expanded>

`case` and `switch` should have the same indentation (according to the CS2103 style guide).
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/80#discussion_r480022398" expanded>

Missing javadoc comment. 
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/80#discussion_r480023802" expanded>

I am confused why the javadoc says that the method returns a data although it returns "success" or "error".
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/80#discussion_r480024542" expanded>

All the above methods are `process` something but it would be clearer if the method name describes what the method is doing more specifically. 
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/80#discussion_r480028667" expanded>

Why do you choose to put some processing methods in this class rather than in the `Parser` class or at least in another class? Do you think it would demonstrate better encapsulation if Duke was not in charge of the processing of user inputs?
</panel>

</panel>

<panel type="info" header="### 74. TAN WEI LIANG `@wltan` (17 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/216#discussion_r481267612" expanded>

Consider ending the summary sentence with a period?
Javadoc requires that the first sentence ends with a period. https://www.oracle.com/technical-resources/articles/java/javadoc-tool.html

![image](https://user-images.githubusercontent.com/53135010/91878512-ff036300-ecb1-11ea-9ac4-2b633bf4219d.png)

</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/216#discussion_r481276197" expanded>

Consider removing the whitespace between the method name and parameters?
![image](https://user-images.githubusercontent.com/53135010/91880342-d3cd4380-ecb2-11ea-86fb-484c05acb266.png)

</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/216#discussion_r481276583" expanded>

Same on line 66.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/216#discussion_r481574235" expanded>

This is slightly over 110 characters. Since it's already being wrapped from Line 54 maybe you could wrap it again to another line?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/216#discussion_r481575078" expanded>

Consider specifying under what conditions the exception is thrown?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/216#discussion_r481578646" expanded>

If an exception is caught and you weren't expecting it, will this cause the test to pass mistakenly? You might want to check that out.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/11#discussion_r481587988" expanded>

Is this file being used for testing, etc.? If it's just to represent the user's individual saved data then would it be better to add this to `.gitignore`?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/11#discussion_r481591850" expanded>

There are two main methods - one here and one in `Launcher.java`. Which one should I be looking at?

Perhaps you could remove one of them if it is no longer needed to avoid confusion. Remember to update `build.gradle` as well.

</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/11#discussion_r481595551" expanded>

I think the opening `/**` should be on a line of its own, with the summary statement on the next line?
![image](https://user-images.githubusercontent.com/53135010/91927962-6bf81680-ed0d-11ea-9730-f1a2ada75d8a.png)

</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/11#discussion_r481598339" expanded>

I think this line may need to be indented one more level?

![image](https://user-images.githubusercontent.com/53135010/91928105-c4c7af00-ed0d-11ea-8623-e5ea9bbf907c.png)

</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/11#discussion_r481599988" expanded>

`taskDeleted` may be slightly misleading as the task is not actually deleted prior to calling `execute`. Perhaps the parameter can just be named `taskIndex`? (same as the attribute name)
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/11#discussion_r481613850" expanded>

Completely optional stuff here but I would love to see streams being used for this purpose. Something along the lines of 
'''java
matchedTasks = taskList.getTasks().stream()
            .filter(this::matchesAllWords)
            .collect(Collectors.toList());
'''
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/11#discussion_r481618042" expanded>

Does this necessarily need to take in an `ArrayList` specifically? Perhaps it could just be a `List` instead?
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/11#discussion_r481618973" expanded>

Similar suggestion for streams here.
'''java
return Arrays.stream(searchWords)
            .allMatch(word -> task.getDescription().contains(word));
'''
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/11#discussion_r481621309" expanded>

A `List` has an `isEmpty()` predicate. Should that be used instead?
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/11#discussion_r481632468" expanded>

An if-else block for every type of task with a date may become unsustainable in the long run if more task types are added. A suggestion (off the top of my head):
> Create an interface `TimeBased` (name is up to you) with a single abstract method `getTime()`. Tasks with dates associated (`Event`, `Deadline`) can implement `TimeBased` based on their own `getAt` or `getBy`.
> 
> Then in cases like this, we can just use `task instanceof TimeBased` and `getTime` here.

Would that improve the code?
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/11#discussion_r481637192" expanded>

Should this be `final` as well since it's a constant?
</panel>

</panel>

<panel type="info" header="### 75. LU LUOYI `@luo-git` (17 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/331#discussion_r479958425" expanded>

Should the imported classes be listed explicitly?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/331#discussion_r479960008" expanded>

Should there be a space after `if` and before `{`?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/331#discussion_r479961199" expanded>

Should you put 'else if' after the preceding '{'?
'''
    if (condition) {
        statements;
    } else if (condition) {
        statements;
    } else {
        statements;
    }
'''
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/331#discussion_r479962393" expanded>

Should there be an empty line between description and parameter section?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/331#discussion_r479963575" expanded>

Should there be a fully stop after comment?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/331#discussion_r479965560" expanded>

Should there be a space before `{`?
I think in general this is also applicable for other structures such as `for`, `while` and `if`.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/331#discussion_r479967010" expanded>

Should there be an empty catch block?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/331#discussion_r479968195" expanded>

I like how you use inheritance here.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/297#discussion_r479973688" expanded>

Could these two variables be static so as to conserve memory?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/297#discussion_r479976036" expanded>

I like these unique and interesting command names.


</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/297#discussion_r479976825" expanded>

Since these two variables are present in more than 1 class, maybe it is possible to consolidate them into one utility class (integrate into Parser perhaps)?
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/297#discussion_r479978902" expanded>

Perhaps it is better to avoid this kind of clever code?
I like it though.

> As the old adage goes, "keep it simple, stupid” (KISS). Do not try to write ‘clever’ code.
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/297#discussion_r479979330" expanded>

Should there be `@param`?
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/297#discussion_r479980273" expanded>

Should there be a line separating description and parameter section for JavaDoc?
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/297#discussion_r479983188" expanded>

Could this have a more descriptive name such as `printDashedLine`?
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/297#discussion_r479984058" expanded>

Maybe consider adopting the 3 part test method naming convention?
`featureUnderTest_testScenario_expectedBehavior()`
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/297#discussion_r479984414" expanded>

I like that you have a method to reset direction after all the tests.
</panel>

</panel>

<panel type="info" header="### 76. LOW MING LIM `@Avalionnet` (17 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/93#discussion_r480818499" expanded>

While non-essential for private class members, perhaps you can still consider adding JavaDoc comments for them as it may be beneficial for you when a need to debug your code arises. 

These comments can be specified on a single line as recommended in our textbook: 
https://se-education.org/guides/conventions/java/intermediate.html#comments 
under the comments segment!
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/93#discussion_r480824062" expanded>

It seems you have yet to add JavaDoc comments for the methods in this class as you are still working on it. Do remember to add them in when fine tuning your code! 😸 
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/93#discussion_r480827655" expanded>

I like how you created different classes to represent different forms of exceptions! Good job for your hard work! 😄 
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/93#discussion_r480834822" expanded>

I like how you have abstracted out all the parse logic into individual methods, thereby making your parse method easily readable!
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/93#discussion_r480835274" expanded>

Excellent application of the enum class!
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/93#discussion_r480843977" expanded>

Yup! I think Yan Cheng brought up a very good point. Allowing users to input their distinct file paths may improve the flexibility of your storage class, especially in the case where you may be required to store different types of data in different data files. Perhaps it may be possible to integrate this change by taking in a string function parameter for your createTaskStorage method where the string represents the file path.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/93#discussion_r480845741" expanded>

It appears JavaDoc comments for the following class has yet to be added. Do remember to add them in when fine-tuning your file! 👍🏻 
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/93#discussion_r480846906" expanded>

It appears JavaDoc comments for your test classes have yet to be added. Do remember to add them in when fine-tuning your file! 👍🏻
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/93#discussion_r480847593" expanded>

Good use of assertEquals! I really like how your tests are comprehensive as well! Great job 😄 
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/25#discussion_r480864310" expanded>

It seems you may have missed out on adding JavaDoc comments for the following method. Do remember to add them in when fine-tuning your file! 👍🏻
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/25#discussion_r480870964" expanded>

Perhaps we can explore adopting a more expressive variable name here such as IndexToDelete to explain the purpose of this variable at a higher level of detail? 
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/25#discussion_r480873550" expanded>

Similar to my previous comment in the DeleteCommand class, perhaps we can explore adopting a more specific variable name here as well! 😺 
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/25#discussion_r480878546" expanded>

While non-essential, maybe you can consider adding this display string as a specific method in your UI class instead?

Adopting this strategy will help to shorten the code in your command classes as a simple call to maybe ui.showDoneMessage(entryDone); can be used instead of having the entire message displayed here. 

It will also be easier to modify your display messages if they all reside in the same UI class. Just a point to consider 😸  

Otherwise, it works fine as it is as well 👍🏻 
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/25#discussion_r480880000" expanded>

It seems you missed out on this constructor when writing the JavaDoc for this class. Do remember to add it in when you're fine-tuning your code!
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/25#discussion_r480880976" expanded>

It seems there may be an extra tab in the description for this JavaDoc line.
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/25#discussion_r480882686" expanded>

Perhaps it may be better to use the /** */ format for writing JavaDoc for this method instead of having it within the method itself?
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/25#discussion_r480883937" expanded>

It seems you may have missed out on writing JavaDoc for this default constructor!
</panel>

</panel>

<panel type="info" header="### 77. WINCENT TJOI `@Wincenttjoi` (17 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/453#discussion_r480821772" expanded>

Can consider adding an empty line here so as to standardize with the rest of the files, just something trivial 👍 
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/453#discussion_r480822703" expanded>

I like how you consolidate the possible task types in enum class for checking 👍 
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/453#discussion_r480823574" expanded>

Should there be a space here? Eg: if[space](command... 
I notice this in some other places as well, feel free to edit! :)
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/453#discussion_r480824789" expanded>

Shall we privatize variables for encapsulation? If I'm not mistaken, its part of the coding standard that this mod enforces
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/453#discussion_r480825986" expanded>

Should there be no indentation after switch case? You can change the IDE formatting in settings for this :)
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/453#discussion_r480826408" expanded>

I notice this is some other places as well. Feel free to edit 
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/453#discussion_r480826840" expanded>

Should there be no space after "!" ?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/453#discussion_r483055521" expanded>

If I remember correctly, the standard convention is that folders will be in small letters, whereas classes to start with capital letter. Maybe you can double confirm this first before the change :)
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/358#discussion_r480788232" expanded>

Does your gradle able to handle building/ running your application? You can change the mainClassName into your application's class name if it does not work.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/358#discussion_r480789552" expanded>

I like how you put the Commands into ENUM class for checking :) Great job!
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/358#discussion_r480791505" expanded>

Is there any reason why there is an empty line here? For this module, I think the separation of line is between description and @params. Perhaps you can consider using <p> to separate the description into different paragraphs :D
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/358#discussion_r480792525" expanded>

I notice that the same issue in other places too. Feel free to edit!
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/358#discussion_r480795812" expanded>

Should there be spacing here: if[space](userInput ?
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/358#discussion_r480798072" expanded>

Is there any reason why you use /** instead of // ? From my understanding, /** is used for JavaDoc and // for specific comments. We can check with prof regarding this!
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/358#discussion_r480805773" expanded>

I like how you organized the different unit tests into its respective classes. However, is there a reason why you use assertEquals rather than assertThrows? Its not a major issue but something to consider as it will make your code neater 
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/358#discussion_r480806958" expanded>

Just a minor spelling issue, can consider changing print's into prints :)
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/358#discussion_r480812536" expanded>

Should this be prints?
</panel>

</panel>

<panel type="info" header="### 78. TAN YU TING, GERMAINE `@g-erm` (17 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/382#discussion_r479899049" expanded>

I think all public classes and methods need header comments?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/382#discussion_r479900776" expanded>

I dont think theres a need for indentation for case clauses?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/382#discussion_r479907421" expanded>

I think you need an empty line between description and parameter section? Similar issue found in the other JavaDoc comments too!
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/382#discussion_r479909449" expanded>

I think you accidentally put a space after description?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/382#discussion_r479917630" expanded>

I like how neat your main class is!! 💯 
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/382#discussion_r479936310" expanded>

I like the name, cute!! :) 
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/382#discussion_r479937705" expanded>

Consider using this naming format for test cases?
![image](https://user-images.githubusercontent.com/66118590/91692332-ca9d8300-eb9b-11ea-88ea-6345de34d7b2.png)

</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/285#discussion_r479949599" expanded>

I think you need an empty line between the description and parameters? Similar for the other JavaDoc comments too!
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/285#discussion_r479951772" expanded>

Perhaps using "printLine()" will be more appropriate? Use nouns for classes/variables and verbs for methods/functions. Similar problem found in other methods too.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/285#discussion_r479952077" expanded>

What does Oder mean?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/285#discussion_r479956090" expanded>

Is this supposed to be 'printFormat()'? Typos might make your code harder to understand.
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/285#discussion_r479956697" expanded>

I like how your method names explain the method well! :)
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/285#discussion_r479959188" expanded>

I think you meant 'execute' here, which caused typos in the children classes as well as the JavaDoc comment.
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/285#discussion_r479959961" expanded>

Consider naming it to 'removedTask'?
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/285#discussion_r479960837" expanded>

Consider specifying this as 'deleteIndex' to make it sound clearer? Similar for Done
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/285#discussion_r479962752" expanded>

I like how the main class is neat!! 💯 
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/285#discussion_r479963462" expanded>

Consider naming the test methods this way?
![image](https://user-images.githubusercontent.com/66118590/91697201-48b15800-eba3-11ea-8c8c-c0067314abfc.png)

</panel>

</panel>

<panel type="info" header="### 79. NEO RUI EN MAYBELLINE `@successs404` (17 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/356#discussion_r481143594" expanded>

Should this method header comment start with Returns... or Gets... instead of the narrative sentence?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/356#discussion_r481144225" expanded>

Should this method header comment start with "Analyses.." instead?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/356#discussion_r481146172" expanded>

I noticed the same issue in several other places too.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/356#discussion_r481147326" expanded>

I like how you added comments to different parts of the method. It improves readability.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/356#discussion_r481150755" expanded>

Should this method header comment start with "Gets..." or "Returns..." instead of this narrative sentence?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/356#discussion_r481151095" expanded>

Should this method header comment start with "Analyses..." instead?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/356#discussion_r481151379" expanded>

I noticed the same issue in several other places too.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/356#discussion_r481152027" expanded>

I like how the individual components of the method body are attached with a comment. It improves readability.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/356#discussion_r481153459" expanded>

The line breaks were added at appropriate locations. Good job!
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/258#discussion_r481158878" expanded>

Should the name FILEPATH be expressed as FILE_PATH instead?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/258#discussion_r481159553" expanded>

Perhaps the naming could be even clearer by naming them as such: userImage, dukeImage
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/258#discussion_r481160044" expanded>

Perhaps lines of code that weren't eventually used can be removed.
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/258#discussion_r481160799" expanded>

Likewise, this part of code could be removed as it was not used.
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/258#discussion_r481161102" expanded>

Perhaps the naming of the method can be modified to a verb, e.g. showWelcome()
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/258#discussion_r481161509" expanded>

Should the method header comment start with a verb instead? e.g. "Gets the response"
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/258#discussion_r481162561" expanded>

This method goes beyond 30 LOC (lines of code). Maybe parts of the method could be abstracted out?
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/258#discussion_r481162897" expanded>

Perhaps a clearer name such as "file" could be used instead?
</panel>

</panel>

<panel type="info" header="### 80. NGOH WEI YUE `@nweiyue` (17 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/387#discussion_r481080975" expanded>

Perhaps u can name testing methods starting with "test..." to make it sound more intuitive? 
Examples: testUnderstandText(), testAddTask()
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/387#discussion_r481085754" expanded>

Should there be an empty like between the method description and parameters section?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/387#discussion_r481089176" expanded>

Perhaps this method can be simply named as printMessage() since it is quite obvious that the message is for the users? This will also be more consistent with the other print..() methods below.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/387#discussion_r481090748" expanded>

Since hard disk are two separate words, should this method be names as saveIntoHardDisk() instead?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/387#discussion_r481091077" expanded>

Perhaps savedFile might sound more intuitive?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/387#discussion_r481094955" expanded>

Instead of using "further", perhaps this can method can be named as understandTaskDescription()?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/387#discussion_r481095410" expanded>

Instead of using "further", perhaps this can method can be simply named as understandTaskNumber()?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/181#discussion_r480981351" expanded>

Should this attribute be made private?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/181#discussion_r481014514" expanded>

Any reason why you did it this way instead of "\t"?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/181#discussion_r481024938" expanded>

Should the first sentence of JavaDoc starts with something like "Adds..." or "Executes..."? 
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/181#discussion_r481046055" expanded>

Should this attribute be made private? I noticed the same issue in several other places too.
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/181#discussion_r481047022" expanded>

Should the first sentence of JavaDoc starts with something like "Adds..." or "Executes..."? I noticed the same issue in several other places too.
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/181#discussion_r481056594" expanded>

Perhaps this block of code can be removed if it is not used?
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/181#discussion_r481062060" expanded>

Should there be an empty line between the description and parameter section?
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/181#discussion_r481062672" expanded>

Perhaps this attribute can be named as "isDone" instead?
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/181#discussion_r481063605" expanded>

Perhaps this empty line can be removed to make to code look neater?
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/181#discussion_r481064797" expanded>

Could this attribute be made private static final so that it is a constant variable? The naming can then be done in full uppercase with underscores.
</panel>

</panel>

<panel type="info" header="### 81. TEH XUE YONG `@fall9x` (17 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/339#discussion_r482190808" expanded>

Perhaps the this would not be necessary here.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/339#discussion_r482191699" expanded>

enum members are all constants and should all be in upper case
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/339#discussion_r482193788" expanded>

Perhaps you might want to set them as class-level constants
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/339#discussion_r482195839" expanded>

Perhaps you might consider abstracting out repeated code
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/339#discussion_r482203500" expanded>

you might want to final this
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/339#discussion_r482207017" expanded>

Variable names must be in camelCase
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/339#discussion_r482207613" expanded>

Perhaps you might want to add access modifiers?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/154#discussion_r482170242" expanded>

Perhaps you might want add a condition to check if the user wants to exit, before using Platform.exit() to terminate the javaFx window.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/154#discussion_r482170579" expanded>

Nice job on the switch indentation!
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/107#discussion_r482182117" expanded>

Perhaps you might want to put the comment for a block of code directly above it without any spacing
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/107#discussion_r482184867" expanded>

 Perhaps you might want consider creating a template to abstract this.
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/107#discussion_r482185452" expanded>

Perhaps changing it to get would be a good idea as "isXxx" sounds like a boolean variable
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/73#discussion_r482214375" expanded>

perhaps you might want to consider adding access modifiers to instance variables
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/73#discussion_r482214576" expanded>

perhaps you might want to consider removing the this. from the taskBy
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/73#discussion_r482215370" expanded>

Perhaps you might want to consider moving your reply method to the Ui class.
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/73#discussion_r482216380" expanded>

There is no indentation for case clauses.
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/73#discussion_r482216957" expanded>

Perhaps you might consider using an enum class for this :)
</panel>

</panel>

<panel type="info" header="### 82. RISHI RAVIKUMAR `@Rishi5154` (17 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/444#discussion_r483124800" expanded>

Are you missing any parameter declarations in your JavaDocs?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/444#discussion_r483125309" expanded>

Perhaps u could convert the 'splitted' collection to a plural form?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/444#discussion_r483126358" expanded>

Since the ensuing logic in the deadline, todo & event blocks are similar, perhaps u could consider abstracting that away with a common method definition?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/444#discussion_r483128085" expanded>

Maybe u can remove the unnecessary line here?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/444#discussion_r483131622" expanded>

Perhaps instead of using **instanceof** to discover the object type of the task objects, maybe u can just define a separate enum class that carries all main types of tasks and then create a variable in Task abstract class for defining the type of the task?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/308#discussion_r483096136" expanded>

Minor thing, Is the **this.** here really necessary?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/308#discussion_r483096158" expanded>

Perhaps for code readability u can just rename it to welcomeMessages instead
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/308#discussion_r483096207" expanded>

Nice use of Optional!
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/308#discussion_r483096262" expanded>

JavaDocs can be updated to account for the return type of String[] this time
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/308#discussion_r483096357" expanded>

Really neat exemplification of abstraction with interfaces for Storage implemented by main class LocalStorage!
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/308#discussion_r483096430" expanded>

**this.** can be removed for better readability
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/308#discussion_r483096469" expanded>

Awesome use of streams & FP to filter out the tasks with dates!
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/72#discussion_r483117963" expanded>

Is the **this.** really necessary? Can be removed for better code readability
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/72#discussion_r483118002" expanded>

Really nice use of comments in your code so far! Makes it really easy to catch your flow of thought!
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/72#discussion_r483118056" expanded>

I understand why u named it as params, but for the purposes of the style guide could u rename to a singular form? Since plural form namings are reserved for collections.
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/72#discussion_r483118230" expanded>

Similar to previous comment, could perhaps rename it to plural form for better code readability.
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/72#discussion_r483118285" expanded>

Neat use of streams for filtering!
</panel>

</panel>

<panel type="info" header="### 83. HEINRICH `@HynRidge` (17 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/28#discussion_r482715818" expanded>

The comments is all good and it would be better if you can spare a new line after the description and the parameter description to make it look neater and also follow the Coding Standard
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/28#discussion_r482716271" expanded>

I think it would be nice if you could add some description to your constructor.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/28#discussion_r482716540" expanded>

It would  be nice if the comment could end with a full stop.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/28#discussion_r482716768" expanded>

The comments seems good and it would be better if you could add space between the description and the param description.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/28#discussion_r482716838" expanded>

The comments seems good and it would be better if you could add space between the description and the param description.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/28#discussion_r482716872" expanded>

The comments seems good and it would be better if you could add space between the description and the param description.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/28#discussion_r482716914" expanded>

The comments seems good and it would be better if you could add space between the description and the param description.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/28#discussion_r482716965" expanded>

The comments seems good and it would be better if you could add space between the description and the param description.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/28#discussion_r482716995" expanded>

The comments seems good and it would be better if you could add space between the description and the param description.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/28#discussion_r482717358" expanded>

The comments seems good and it would be better if you could add space between the description and the param description.
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/28#discussion_r482717581" expanded>

The comments seems good and it would be better if you could add space between the description and the param description.
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/24#discussion_r482719440" expanded>

Hi, I think the naming of your paramaters could be made more clearer, such that com --> command. Sometimes it is just confusing to read a contracted or shortened word.
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/24#discussion_r482720020" expanded>

The comments seems good and it would  be better if it could start with verbs instead following the Coding Standard
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/24#discussion_r482720359" expanded>

The naming would be better to set as isDone instead of done, as it is a boolean data type. It is just so that the variable is more descriptive
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/24#discussion_r482720850" expanded>

The naming for task description would be better to be named taskDescription rather than just task.
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/24#discussion_r482721285" expanded>

The naming would be better set as lists rather than list. It is just so that it is more descriptive
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/24#discussion_r482721417" expanded>

Yes, I totally agree with kerkpy's input
</panel>

</panel>

<panel type="info" header="### 84. CHEW CHENG YAP `@CodyChew` (16 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/275#discussion_r481238735" expanded>

Perhaps can include header comments for all public classes and methods, however I understand that this may not be included yet for the project.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/275#discussion_r481243037" expanded>

Any reason why do you choose to use if-else statements over switch-case over here?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/275#discussion_r481245101" expanded>

Perhaps can consider calculating intermediate values in steps to improve readability for complicated expressions.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/275#discussion_r481271213" expanded>

Yes, perhaps a more descriptive method name such as loadFile, etc, might be better.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/275#discussion_r481275986" expanded>

Perhaps giving more details to the method name would be better, such as writeToFile, etc...
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/275#discussion_r481278150" expanded>

name should accurately reflect the method as per coding standard. Do you think it is better to rephrase to "showAddMessage"?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/275#discussion_r481278924" expanded>

naming here might not be intuitive at first glance to the reader, it may be better to add more context or description to the method name.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/121#discussion_r481171598" expanded>

Minor grammatical error,  perhaps can rephrase to 'Class to represent ...'
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/121#discussion_r481174141" expanded>

Minor grammatical error, perhaps can change 'initialized' to 'initialize'
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/121#discussion_r481177212" expanded>

It would be good to have header comments for all your public classes and methods. However, I understand that this may not be included yet for your project.
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/121#discussion_r481185153" expanded>

Perhaps start with "Runs" instead of "Run" as specified in the coding standard. There should also be a empty line between description and parameter section. Punctuation behind each parameter description can also be added to follow the JavaDoc comments coding standard form.
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/121#discussion_r481190699" expanded>

There can be an empty space between the description and parameter section, I noticed this in the other sections too.
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/121#discussion_r481195903" expanded>

Method header comments should start in the form "Deletes..."  Perhaps can make it consistent throughout.
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/121#discussion_r481198828" expanded>

I noticed many of your methods are private and i like that there is a conscious effort to make them private, that is great coding practice 👍
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/121#discussion_r481200675" expanded>

I like how you included line breaks for long String value,  improves readability. 👍
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/121#discussion_r481227432" expanded>

It may be better to add a newline at the end of your files to follow standard conventions.
</panel>

</panel>

<panel type="info" header="### 85. NG SHUO QI, CONSTANCE `@constancensq` (16 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/222#discussion_r481928856" expanded>

Perhaps you could use another naming that could show better that it is a multivalued variables e.g. commandWords ?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/222#discussion_r481930113" expanded>

Perhaps the description for the JavaDoc comment could end with a period, to follow the coding conventions. I think I noticed this for other methods as well.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/222#discussion_r481931436" expanded>

Perhaps could remove this if it is not necessary, since there is a default constructor?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/222#discussion_r481932671" expanded>

Perhaps you can use verbs to name the methods? 
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/222#discussion_r481935713" expanded>

Perhaps this could be named as isDone instead?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/222#discussion_r481937784" expanded>

Perhaps the description for the @param should also end with a period, similarly for other JavaDoc comments
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/43#discussion_r481877472" expanded>

Perhaps you can use a verb for the method name instead? 
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/43#discussion_r481892139" expanded>

Perhaps you could use a verb to name the methods? I noticed the same issue for other methods as well.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/43#discussion_r481895044" expanded>

For the JavaDoc, should there be a spacing between the description and the @return section?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/43#discussion_r481896193" expanded>

Maybe there can be just one line of spacing between the two methods for a neater code?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/43#discussion_r481898217" expanded>

Should there be a line spacing between the description and the @param section? And the second description could end with a period as well.
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/43#discussion_r481901286" expanded>

Perhaps there could be more information to when DukeException is thrown, although I'm not sure if it is a necessary thing to add
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/43#discussion_r481902392" expanded>

Should line 29 be removed so there is no spacing between the documentation block and the method?
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/43#discussion_r481903807" expanded>

Should line 52 be removed so that there is no empty space between the documentation block and the method?
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/43#discussion_r481906347" expanded>

For line 24, should there only be one spacing after tasks? 
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/43#discussion_r481913529" expanded>

Should this be named in camelCase instead of all uppercase? 
</panel>

</panel>

<panel type="info" header="### 86. LIM HAI SHAN `@underthehai` (16 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/378#discussion_r481928072" expanded>

I think can add javadoc to explain what the class does and perhaps change the name to more specific like "AddTask", I noticed the same issue in several other places too.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/378#discussion_r481929281" expanded>

Perhaps can start with a verb like "Adds a task" that explains what the method does? 
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/378#discussion_r481932013" expanded>

I think the javadoc comments can be placed right before the class declaration instead of at the start.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/378#discussion_r481934426" expanded>

Perhaps can change the name to formatDate to be more specific
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/378#discussion_r481935282" expanded>

Perhaps this method can be more descriptive and rename to getTask
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/206#discussion_r482049071" expanded>

I think this part explained the purpose of the code really well
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/206#discussion_r482049944" expanded>

I think there should be a line of space between the comment and the @param
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/206#discussion_r482050246" expanded>

I think the javadoc is missing a description
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/175#discussion_r481919211" expanded>

Perhaps this part can be removed?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/175#discussion_r481920832" expanded>

I think can further add that it is a list of tasks with matching keywords
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/175#discussion_r481922766" expanded>

I think that it can be renamed to exitProgram for a more intuitive understanding
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/175#discussion_r481924231" expanded>

I like that there is test involving the file location
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/19#discussion_r482039413" expanded>

I think the method can rename with more specific description such as loadsData for clarity. I noticed the same issues in several other places too.
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/19#discussion_r482042003" expanded>

I think this is good naming
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/19#discussion_r482043365" expanded>

I think can rename to hasExited
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/19#discussion_r482045074" expanded>

I think can include a javadocs explaining what causes the exception to be thrown.
</panel>

</panel>

<panel type="info" header="### 87. KENNETH NG JIAN HAO `@afroneth` (16 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/450#discussion_r480057682" expanded>

I like the clean code here. Is it perhaps better to rename the variable "by" to something clearer?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/450#discussion_r480058038" expanded>

Good usage of OOP principles!
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/450#discussion_r480058621" expanded>

Shouldn't there be no indentation for case clauses?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/450#discussion_r480059324" expanded>

Is there too much usage of if-else loops here?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/450#discussion_r480059787" expanded>

Should there be a white space character after 'for'?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/450#discussion_r480060012" expanded>

Should there be a white space character after 'for'?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/450#discussion_r480060836" expanded>

Shouldn't there be no indentation for case clauses?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/450#discussion_r480061430" expanded>

Is line 35 (blank statement) removable?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/234#discussion_r480086150" expanded>

Perhaps you can consider using the following naming format "whatIsBeingTested_descriptionOfTestInputs_expectedOutcome" for your test cases?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/234#discussion_r480087742" expanded>

Perhaps you could include more comprehensive test cases? 
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/234#discussion_r480088377" expanded>

Great idea to abstract the Ui class.
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/234#discussion_r480089028" expanded>

Clear implementation.
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/234#discussion_r480090183" expanded>

Is it better to simply name the variable 'index' instead of 'idx'?
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/234#discussion_r480091790" expanded>

Impressive implementation! Although there are many lines of code, it is still very readable.
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/234#discussion_r480092805" expanded>

Perhaps you should resolve this issue before you finalize your product?
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/234#discussion_r480093414" expanded>

Perhaps naming the variable as 'index' is clearer?
</panel>

</panel>

<panel type="info" header="### 88. SIEW KHENG HUN `@khenghun` (16 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/440#discussion_r481140754" expanded>

Should there be a whitespace before the braces? Similar instances in other classes.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/440#discussion_r481141822" expanded>

Perhaps the variable hasEnded can be private?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/440#discussion_r481142821" expanded>

Perhaps remove indentation for switch case, as according to the module formatting guide?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/440#discussion_r481144280" expanded>

Possibly remove the class if it is not used, unless it will be used in the future developments?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/440#discussion_r481144932" expanded>

Could arrange imports by lexicographical order?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/440#discussion_r481145625" expanded>

Operators could be on the new line. (Other instance below as well)
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/440#discussion_r481146660" expanded>

Splitting up the line here could help with readability, since it is over the char limit.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/440#discussion_r481147399" expanded>

Perhaps more whitespaces would help readability here?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/440#discussion_r481147874" expanded>

I liked the clean abstraction of all the methods and classes, keeping the main class concise and neat.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/440#discussion_r481149606" expanded>

Could consider using a clearer name like "TaskList" instead?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/440#discussion_r481150232" expanded>

Could either use final variables, or remove the all caps from the string names?
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/440#discussion_r481151396" expanded>

Rearrange the fields in order of access modifiers?
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/424#discussion_r482047772" expanded>

What happens when the user tries to create a dateline without date/time? Perhaps could show a custom error for that?

</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/424#discussion_r482048032" expanded>

Maybe placing this case breakdown in the Parser Class could be more suitable, and just return the output message (with any possible errors)?

</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/424#discussion_r482049981" expanded>

Perhaps saveTasks (similar to loadTasks above) or saveTaskList would be clearer in reflecting the methods usage? 
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/424#discussion_r482055342" expanded>

Maybe just using input.equals() will be clearer since it is only important to check equality and sorting is not required?
</panel>

</panel>

<panel type="info" header="### 89. FOO GORDON `@gordonfgz` (16 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/328#discussion_r480146584" expanded>

Perhaps a more boolean-ish name like "isCompleted" here?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/328#discussion_r480147642" expanded>

May I know why you chose to put "time" into the Task class instead of just the Deadline and Event since Todo does not require "time"?

</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/328#discussion_r480152518" expanded>

I like how these tests covered a wide range of inputs!
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/328#discussion_r480154964" expanded>

I like this design as it is very readable 
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/328#discussion_r480156123" expanded>

I like how you designed this part of the code. I feel that it is very unique for the method to return a boolean to tell the application to continue running and at the same time give the required outputs to the user.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/328#discussion_r480156545" expanded>

I like how you test for end cases
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/172#discussion_r480163019" expanded>

I agree
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/172#discussion_r480163071" expanded>

I agree
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/172#discussion_r480166844" expanded>

I agree
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/172#discussion_r480167142" expanded>

I agree
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/172#discussion_r480167773" expanded>

I think that the current way is fine and I actually like it more
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/172#discussion_r480170028" expanded>

Perhaps there is a way of changing your code design so that you can initialise with just one line of code instead of calling the constructor twice? 
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/172#discussion_r480171786" expanded>

Perhaps you can put your comment on top of the line of code instead of beside it?
Not really sure if this violates Java coding standard.
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/172#discussion_r480173369" expanded>

Should this be extracted out? Any reasons why you chose to have the input processing method in Duke.java instead of a separate class?
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/172#discussion_r480174549" expanded>

I like how you named this member. It is very clear that its going to be a boolean!
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/172#discussion_r480211381" expanded>

I agree
</panel>

</panel>

<panel type="info" header="### 90. ROGER LIM YONG SIANG `@Rogerlys` (16 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/371#discussion_r481095457" expanded>

Yes public classes should have java docs if possible
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/371#discussion_r481097974" expanded>

May want to handle cases for when the user mistypes.
For example Tood would also be treated as a todo

</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/371#discussion_r481099114" expanded>

Yes single letter variables should only be used in loops.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/371#discussion_r481101181" expanded>

try to avoid using single letter variables outside of loops
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/371#discussion_r481101641" expanded>

try to avoid using single letter names for variables
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/371#discussion_r481102443" expanded>

For example, this chunk can be split into a different method just for returning if the cases is deadline
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/298#discussion_r481086569" expanded>

Should expand import statements to allow for easier debugging
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/298#discussion_r481087033" expanded>

static variables should be in all caps
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/298#discussion_r481087734" expanded>

Looks fine but maybe using String.format maybe better here?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/298#discussion_r481088459" expanded>

IsExit maybe a better name?
exit sounds like trying to make the progamm exit
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/298#discussion_r481089063" expanded>

Method is a bit long, it maybe a good idea to split the method up to make it easier to read and debug
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/298#discussion_r481091714" expanded>

n isnt a good name as it is not obvious what it represents, try using a name like numTask
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/298#discussion_r481092310" expanded>

static names should be capitialised
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/298#discussion_r481092323" expanded>

static names should be caps
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/298#discussion_r481092561" expanded>

Expand import statements
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/298#discussion_r481092716" expanded>

Expand import statement
</panel>

</panel>

<panel type="info" header="### 91. CHUA CHEN LER `@lerxcl` (16 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/451#discussion_r481882273" expanded>

The "+" should be in the next line instead.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/451#discussion_r481883285" expanded>

There should not be a spacing between "i" and "++".
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/451#discussion_r481890230" expanded>

I have noticed that your Duke class may have too many methods (a little cluttered), and seeing that you have not merged "branch-A-OOP" into master, I am not sure whether you have create new classes to adhere to OOP principles?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/451#discussion_r481892207" expanded>

A better practice might be to split the instantiation of "lst".

After your import statements, it could be List<Task> lst;
Then in your Duke constructor: this.lst = new ArrayList<>();
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/451#discussion_r481893137" expanded>

It might not be too good of practice to use "while (true)", as it is hard to tell what is your terminating condition (and there is a chance of an infinite loop)?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/451#discussion_r481893803" expanded>

A spacing after "Exception" will look nicer!
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/451#discussion_r481895140" expanded>

Same as mentioned in DukeException class.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/451#discussion_r481895895" expanded>

It might be better to use Enum to represent 1 and 0, as it might look like "magic numbers".
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/127#discussion_r481839746" expanded>

Maybe it would be nicer if you leave a line after package for your static import.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/127#discussion_r481848096" expanded>

I think you forgot to fill in "@return ..."?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/127#discussion_r481853097" expanded>

The public class and its methods are missing the JavaDoc.
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/127#discussion_r481855074" expanded>

The custom DukeException should have JavaDoc too, to describe briefly what it does?
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/127#discussion_r481859703" expanded>

The param "s" could perhaps have a more meaningful name, like "description"?
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/127#discussion_r481860358" expanded>

Same as mentioned in Deadline class.
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/127#discussion_r481863896" expanded>

I think this is still a work-in-progress right?
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/127#discussion_r481865779" expanded>

You might need a JavaDoc here as it is a public class.
</panel>

</panel>

<panel type="info" header="### 92. GOH EE LIANG `@Elgoh` (16 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/221#discussion_r482881226" expanded>

Instead of calling the same method twice, maybe you could assign the result of description.split() to an inputArray and get the task and by calling inputArray[0]/inputArray[1]?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/221#discussion_r482882072" expanded>

Could you have just indented the return string by one line instead of four?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/221#discussion_r482883318" expanded>

Why not just throw the specific number format and index out of bounds exceptions? Just curious!
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/221#discussion_r482884788" expanded>

Very clean use of switch case! Nicely done, Something I can learn from! 
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/221#discussion_r482886657" expanded>

The naming of the method can be more descriptive! For example, loadTasksFromFile().
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/221#discussion_r482888943" expanded>

Any reason why you indent short lines of codes? I noticed this in several other places too. 
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/221#discussion_r482890542" expanded>

I have noticed you use "output +=" in many of your codes above. Could this be done within "tasks.get(...)" itself?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/221#discussion_r482891078" expanded>

Perhaps you can write javadocs for this class?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/162#discussion_r482846499" expanded>

Should these methods have javadoc comments? ... I noticed the same issue in several other places too.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/162#discussion_r482849774" expanded>

Is there a need to create a method for opening and greeting text? Can they be static attributes? 
I'm not saying it is wrong I'm just curious :)
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/162#discussion_r482856009" expanded>

You did your exceptions EXCEPTIONALLY well. Very impressed! Something I can learn from. Thank you.
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/162#discussion_r482856360" expanded>

Do you need to leave a space after you JavaDoc comments?
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/162#discussion_r482857418" expanded>

Very interesting! I threw an exception here but I think your idea is good too.
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/162#discussion_r482860135" expanded>

You can try using switch case to compare keywords here! It will help to reduce your code and make it look neater too. Also with switch case, you can omit the methods such as isDelete, isFind... etc. 
Is it also possible to bring out some of the if statements too? Because I see many recurring if statements in the method.
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/162#discussion_r482861098" expanded>

Should you remove comments that are not descriptions? These comments are from your old iteration of codes.
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/162#discussion_r482870604" expanded>

Perhaps you could remove this comment?
</panel>

</panel>

<panel type="info" header="### 93. CHOO JIA XIN `@ChooJiaXin` (16 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/441#discussion_r481947256" expanded>

Coding standards suggest that verbs should be used to name methods. Perhaps changing textToTask() to getTextToTask() instead?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/441#discussion_r481948450" expanded>

Similar to textToTask() method, may want to consider changing newToDoT() to getNewToDo() or createNewToDo().
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/441#discussion_r481950094" expanded>

At first glance, I'm not very sure what this method is deleting. Perhaps renaming the method to deleteTask() would make it clearer as to what you are deleting?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/441#discussion_r481952785" expanded>

Naming standards suggest that we should use names to explain and distinguish between methods and variables. I'm not very sure as to what you are trying to test just by looking at the names of the test methods. It may be better to explain what each test does in its name.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/227#discussion_r481895515" expanded>

JDocs guidelines recommend starting header comments in the form of Returns (instead of Return or Returning). Perhaps rephrasing the header comment to 'Handles commands that adds deadline'?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/227#discussion_r481904212" expanded>

Coding standards suggest that all public constructors and methods should have Java Documentation. I noticed in some classes you have added the JDocs for the constructors and methods while for other classes you did not, did you perhaps forget to add JDocs when refactoring or you ran out of time?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/227#discussion_r481913064" expanded>

Same comment about Java Documentation for AddDeadlineCommand.java. JDocs guidelines suggest header comments be in the form Returns (instead of Return or Returning). I noticed this issue in a few of your other classes as well, could it be due to a lapse in memory when refactoring your code?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/227#discussion_r481923695" expanded>

This is just personal preference but it may be better to import all the relevant Command classes at the top to make things a little easier to read. 
Eg: Instead of 'src.main.java.duke.commands.AddTodoCommand.MESSAGE_USAGE', import the AddTodoCommand class above and store 'AddTodoCommand.MESSAGE_USAGE'.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/227#discussion_r481928935" expanded>

I like how you stored all the static constants in a single class. Good job :)
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/227#discussion_r481930939" expanded>

JDocs guidelines suggest a space to be an empty line between the description and parameter section.
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/227#discussion_r481933172" expanded>

Similar to the above comment, JDocs guidelines suggest there be an empty line between the description and parameter section. There are similar issues that occur in other parts of your code too.
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/227#discussion_r481934722" expanded>

The method throws an exception but in the method body, no exception is thrown. Is it possible for a method that throws an exception to not throw an exception in the body?
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/227#discussion_r481937379" expanded>

Boolean variables/methods should be named to sound like booleans. Perhaps changing contains(Task toCheck) method to doesContain(Task toCheck) instead?
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/227#discussion_r481938047" expanded>

I like how you have organized your import statements. Very neat and easy to read :)
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/227#discussion_r481940744" expanded>

I like how you have constant static variables to indicate the format for each task. You could perhaps consider changing the constant static variables to private instead as it appears that these constants are only used in Parser.java. Otherwise, nice job.
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/227#discussion_r481942285" expanded>

Missing @return tag in JDocs
</panel>

</panel>

<panel type="info" header="### 94. WANG MO `@WM71811` (16 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/381#discussion_r480112963" expanded>

Maybe you can avoid complicated expressions like this if statement by adding calculating intermediate values first? For example, add a method that checks if the task is created with no description.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/381#discussion_r480113703" expanded>

Similarly, maybe methods can be added to calculate the intermediate values first for this statement? For example, methods to check if the input contains "done" or "list".
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/381#discussion_r480119010" expanded>

Maybe the expressions can be less complicated by using methods that will get intermediate results? For example, a method that return 1 if the task is done, 0 otherwise.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/381#discussion_r480121649" expanded>

Maybe you can consider removing the "else if" and using "if" instead, to make the happy path more prominent?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/381#discussion_r480134231" expanded>

Maybe a named constant for this string can be added to avoid such magic string? For example, you may add a constant called LINE_DIVIDER.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/381#discussion_r480138912" expanded>

Maybe the magic string "Nice!.." could be avoided by adding a named constant for it?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/381#discussion_r480139750" expanded>

Maybe the magic string "| 0 | " and "| 1 | " can be avoided by adding named constants for these strings?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/381#discussion_r480143245" expanded>

I think maybe the string "T" can be abstracted by adding a constant to represent it, which may make the code easier to understand? 
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/381#discussion_r480154277" expanded>

Maybe the Ui.print(...) part can be further abstracted by adding a method for example, Ui.printAddition(task) to enforce a same level of abstraction in the method?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/55#discussion_r480082273" expanded>

Should Javadocs be added to this class? 
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/55#discussion_r480083954" expanded>

Maybe the boolean variable can be renamed to sound more like a boolean, for example, name it to "isCommandFound"?
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/55#discussion_r480084608" expanded>

Should Javadoc comments be added to this public method? 
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/55#discussion_r480086229" expanded>

Should the empty line between the two sentences be deleted according to the coding standard?
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/55#discussion_r480091335" expanded>

Should the boolean method be renamed to sound more like a boolean method, For example, "isTaskCompleted" or "hasCompletionFlag"?
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/55#discussion_r480094419" expanded>

Should the boolean method be renamed so as to follow the coding standard for boolean methods, for example, "hasSearchTerm", as the method is to check whether searchTerm is contained in a description?
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/55#discussion_r480096461" expanded>

Should javadoc comments be added to this method?
</panel>

</panel>

<panel type="info" header="### 95. JEFFREY TAN JIAN SHENG `@jeffreytjs` (15 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/254#discussion_r483430050" expanded>

There should be no indentation for case clauses for CS2103 convention.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/254#discussion_r483430282" expanded>

Minor issue, unused variable.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/254#discussion_r483431507" expanded>

I like how the import statements are organised based on their association 👍 
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/254#discussion_r483433124" expanded>

I notice other files have the line to separate package and import statements except for this. Would be good for readability to standardize according to src/main/java/duke/logic/Storage.java
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/254#discussion_r483434128" expanded>

It could be the files that were written earlier that result in the inconsistent ordering of import statements. 
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/191#discussion_r483709846" expanded>

Variable name should be in camel case and underscore should only be used for separation for constants.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/191#discussion_r483711225" expanded>

I notice that this appears quite regularly in other files too, do clarify on this if necessary!
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/191#discussion_r483712352" expanded>

Can consider unformattedDateTime instead of unFormattedDateTime as "un" is not really a standalone word
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/191#discussion_r483713336" expanded>

Might be a typo here for unknowncommand, should be unknownCommand instead
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/145#discussion_r483701703" expanded>

I really like the way you write your code, this is just a minor point that I would consider as nitpicking because your naming is really too neat. 

Could consider renaming listOfItemsInString as listOfItems**As**String or instead because it's the items within the list as a string instead of being within the string.
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/145#discussion_r483704726" expanded>

endGreeting can be misleading as part of the greeting message, can consider using farewell or closingMessage to be more explicit.
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/106#discussion_r483448136" expanded>

Missing package. Every class should be part of some package according to convention.
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/106#discussion_r483526976" expanded>

I like that some of your @param and @return contain the type, could try to include some simple description like  @param commandType Command from user input.

Not sure if it's meaningful to include params if it's self explanatory.
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/106#discussion_r483530262" expanded>

I agree, actually it is possible to keep the names concise like EXITDUKE could be understood the same way as EXIT, the ADD and TASK within the names could be removed and still be interpreted in a similar manner. There is nothing wrong with keeping your names explicit but it would have to follow the naming convention as mentioned by Siddarth above.
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/106#discussion_r483534491" expanded>

Is this meant to be hard coded for formatting purpose?
</panel>

</panel>

<panel type="info" header="### 96. WU JIALUN ANDY `@sudogene` (15 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/237#discussion_r481085128" expanded>

Perhaps you can import individually and avoid wildcards, to be more explicit about what will be used.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/237#discussion_r481086667" expanded>

This line exceeds 120 characters, I would suggest wrapping the line to improve readability!
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/237#discussion_r481086882" expanded>

Similar line length issue as above, and in a few other files too. Just need some line wrapping 
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/237#discussion_r481105973" expanded>

It would help readability to have at least a javadoc header for each class! So the reader roughly knows what the class is for
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/237#discussion_r481109411" expanded>

Good to see a comment explaining the method. I think it would be better if they are written in javadoc format like

'''
/**
 * Prints introduction of klaun. This method is mainly called when the bot starts up.
 */
'''
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/237#discussion_r481110748" expanded>

Similar comment as above regarding javadocs. Here's a suggestion for methods with arguments

'''
/**
 * Adds the task to the task list and prints a confirmation message upon success.
 * @param task The task object to be added to the task list.
 */
'''
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/237#discussion_r481114535" expanded>

sick logo!
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/50#discussion_r481123278" expanded>

This is an interesting approach to initializing Duke. Is there a reason why you decided to use a static method, `Duke.startDuke()` to start the program instead of `new Duke()`? Just curious!
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/50#discussion_r481124148" expanded>

Yeap I agree, the methods are really well named. They are self-descriptive
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/50#discussion_r481125194" expanded>

Nice line wrapping
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/50#discussion_r481126733" expanded>

I think the `this` keyword is not necessary since there is no argument using the same name. There is a chance it might add complexity to the readability if there are many of such `this` planted throughout blocks of code in my opinion
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/50#discussion_r481131838" expanded>

Perhaps `"YYYY-MM-DDTHH:MM"` can be another `readableFormat` for `parseIso` just like how `"DD MMM YYYY HHMM"` is one for `parseString`. Just for consistency! 
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/50#discussion_r481132747" expanded>

I like the splitting of import chunks, very readable. Shall do that for mine too
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/50#discussion_r481133961" expanded>

I think `split` as a method name might be confusing since there is a `splitTime` method too. Perhaps adding some javadocs description might help, or making this method name more explicit
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/50#discussion_r481136435" expanded>

I think it might help readability to split this into a few lines, even if it's slightly extra overhead.
</panel>

</panel>

<panel type="info" header="### 97. WANG ZHENLIN `@Criss-Wang` (15 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/303#discussion_r480727687" expanded>

Should a blank line be present here between the 2 import statement?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/303#discussion_r480735611" expanded>

Perhaps the @throw exception is missing or the method does not actually throw the exception?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/303#discussion_r480740064" expanded>

Maybe a JavaDoc can be added here to explain why we need an overloaded constructor?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/303#discussion_r480742439" expanded>

How about making this variable private? 
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/303#discussion_r480748161" expanded>

I like the error handling for the delete command. Maybe the JavaDoc or Exception message can mention the case "task being deleted does not exists" refers to the case where the user types in a number larger than the size of the list.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/61#discussion_r481166073" expanded>

Should this method be an overriding method?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/61#discussion_r481167632" expanded>

Perhaps I would prefer a more informative naming for this variable such as "deadlineTime".
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/61#discussion_r481168868" expanded>

The utility of by and date seems to be overlapping here, maybe you the usage of String by can be completely avoided.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/61#discussion_r481171885" expanded>

Perhaps this is also an overriding method? I noticed the same issue in several other places too.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/61#discussion_r481173196" expanded>

May I know why the variable accessibility is protected? Is it possible to make it private instead?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/61#discussion_r481174147" expanded>

Also, the naming of this variable may be changed to something like "taskToFind" to make it more informative.
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/61#discussion_r481176664" expanded>

Perhaps the conditioning can be changed into switch case for a clearer picture? 
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/61#discussion_r481177784" expanded>

I like the use of lineSeparator method. Very convenient!
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/61#discussion_r481178185" expanded>

Anything to put in the else clause here?
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/61#discussion_r481179485" expanded>

Maybe you can make the method naming longer? I feel that generateList and itemsList are much clearer even though they are longer.
</panel>

</panel>

<panel type="info" header="### 98. SEOW ALEX `@seowalex` (15 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/299#discussion_r479856979" expanded>

The indentation here should be 4 spaces.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/299#discussion_r479857285" expanded>

What is the purpose of having 2 functions that mark a Task as done?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/299#discussion_r479858744" expanded>

Constant names should be all uppercase using underscore to separate words.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/299#discussion_r479859191" expanded>

You should break before an operator, not after.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/299#discussion_r479859387" expanded>

Your boolean should have a more descriptive name.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/299#discussion_r479860046" expanded>

You shouldn't use wildcard imports.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/265#discussion_r479861490" expanded>

Try using more descriptive names for your variables.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/265#discussion_r479861772" expanded>

This variable name seems hard to read, perhaps you should choose another name?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/265#discussion_r479862173" expanded>

Is there a reason why you're catching exceptions in your test? Are you expecting your input to throw an exception?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/265#discussion_r479862575" expanded>

You seem to repeat this cycle of showing a line, printing stuff, and showing another line a few times. Perhaps it should be extracted to a function?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/265#discussion_r479863935" expanded>

Instead of creating the Todo and then marking it as done, perhaps you could just create an additional constructor so that you can define the `isDone` boolean on creation.
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/265#discussion_r479864108" expanded>

Should the parsing of tasks be handled by the `Storage` or `TaskList` class?
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/265#discussion_r479864733" expanded>

This function seems to be parsing the command, should that be the responsibility of the `Parser` class?
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/265#discussion_r479865364" expanded>

Instead of manually processing the date/time, you can use built-in Java libraries to do so.
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/265#discussion_r479865649" expanded>

This logic seems to depend on the done command only having 4 letters. What if the done command changes to another word?
</panel>

</panel>

<panel type="info" header="### 99. CAI QIFAN DAVID `@davidcaiqifan` (15 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/331#discussion_r481388802" expanded>

Perhaps these classes could be imported explicitly? It will make your code easier to comprehend and maintain
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/331#discussion_r481390366" expanded>

I agree with using an underscore to separate the words here. Gives better readability
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/331#discussion_r481390633" expanded>

Perhaps you could add whitespace immediately after the brackets here.I noticed this issue in other areas as well but I believe this was just an oversight on your part.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/331#discussion_r481391939" expanded>

Agree with luo yi here. Could have placed else if directly after the preceding bracket on the same line to adhere to the style guide. I've noticed the issue in other areas as well, but this should be an easy fix.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/331#discussion_r481393351" expanded>

Same sentiments here, perhaps you could have run your code through the style checker again. It will help identify small mistakes like this.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/331#discussion_r481394747" expanded>

Since this is a String array representing "commands", perhaps the plural form of command could be used instead.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/331#discussion_r482708695" expanded>

Perhaps you could try to short this run method? It seems to be longer than 30 LOC which could make it difficult to debug. Just a suggestion.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/331#discussion_r482709415" expanded>

Perhaps you could try to avoid further deep nesting here? There are already 3 levels of indentation. If you could cut down the levels of indentation further, I believe your code will be much clearner.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/331#discussion_r482711241" expanded>

Perhaps you could rename the encode() method in order to explain it's purpose? For example, maybe encodeDateFormat() would be a more descriptive way? Just a suggestion.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/331#discussion_r482712161" expanded>

I like the use of a verb for this method. It helps to make the purpose of the method clearer. I also see good use of nouns and verbs for classes and methods respectively in other areas, so keep up the good work!
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/31#discussion_r481381591" expanded>

Perhaps you could add javadoc header description for overriding execute methods? After all they are still public methods. I noticed this lack of description in other areas as well.
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/31#discussion_r482702153" expanded>

Perhaps Duke could have some descriptive header comments? If I am not mistaken, we are required to have header comments for all public classes
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/31#discussion_r482703175" expanded>

Perhaps you could add Javadoc header comments for the main method? Again if I'm not wrong, we are required to have header comments for all public methods and classes.
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/31#discussion_r482703674" expanded>

Perhaps you could add Javadoc header comments for this overriden method? I've noticed this minor issue in other areas as well.
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/31#discussion_r482704504" expanded>

I like your adherence to the naming convention here for the boolean isParse! Usually these small naming conventions would be an oversight for most people.
</panel>

</panel>

<panel type="info" header="### 100. LIM YU YANG `@IronBiscuit` (15 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/378#discussion_r482765162" expanded>

Just a slight nit pick! I feel that while the factory method names are mostly self explanatory to those familiar with the Ip, it might be better if you included javadoc comments explaining when such exceptions will be thrown.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/378#discussion_r482774060" expanded>

Perhaps this javadoc comment is better off written above the interface declared at line 12?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/378#discussion_r482802558" expanded>

Maybe "constant" would be more appropriate as there is only one constant!
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/378#discussion_r482816352" expanded>

Nitpicking again, but is res a good variable name for your list of tasks? Perhaps a more intuitive name such as taskList would be better!
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/378#discussion_r482834195" expanded>

I think you missed out a space between these methods
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/378#discussion_r482837709" expanded>

Should it be "method" instead of "methods"?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/378#discussion_r482840260" expanded>

Another nitpick! There were certain groups of methods that were separated by an empty row and some there were not, such as these constructors, even though the methods were part of a certain category. Perhaps this could be standardized?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/378#discussion_r482843068" expanded>

Missing javadocs for public methods.
 This issue also appeared in multiple other areas as well.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/378#discussion_r482845067" expanded>

The method name is not very clear! Perhaps you can consider "outputTaskList" ?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/206#discussion_r482874870" expanded>

Small nitpick, but I feel that getBy() is a rather confusing method name. Perhaps you can consider dueBy() or getDueBy()?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/206#discussion_r482875754" expanded>

Another nitpick, perhaps a clearer name could be given to the StringBuilder object, such as "stringBuilder".
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/206#discussion_r482876695" expanded>

Another nitpick, while listTaskSize isn't a bad method name given its function, perhaps a more appropriate name could be numberOfTasks() or getNumberOfTasks()?
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/206#discussion_r482877189" expanded>

Nitpicking again! "newTask" could be a little confusing considering we have 3 unique types of tasks. Perhaps consider "event" instead?
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/206#discussion_r482881365" expanded>

Same nitpick as before. Perhaps consider "deadline" or "newDeadline" instead of newTask!
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/206#discussion_r482892323" expanded>

Perhaps you could rename 'expected' to 'expectedOutput'?
</panel>

</panel>

<panel type="info" header="### 101. WEE YEE HONG `@w-yeehong` (15 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/461#discussion_r480634512" expanded>

I think the ASCII cat is really cute 👍 Maybe consider changing the variable name to all uppercase because it can be treated as a constant?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/461#discussion_r480675458" expanded>

I like the use of an enum to keep track of valid & invalid formats. Much better than using integer status codes. Perhaps these should be in uppercase as it is an enum? I noticed a few other variables in a similar position.


</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/461#discussion_r480682582" expanded>

I think enum names should be written in PascalCase based on the coding standard? 🤔
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/461#discussion_r480684631" expanded>

Would it be possible to avoid wildcard imports?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/461#discussion_r480704927" expanded>

Maybe add a space character after `while`?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/461#discussion_r480716321" expanded>

Should this be in camelCase instead?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/461#discussion_r480721571" expanded>

Do you think the nesting may be a bit deep here? I tend to find nested if-else hard to read when it goes down to 3-4 layers. One possible way of avoiding this:

'''
if (taskList.isEmpty()) {
    ui.display("UR LIST HAZ NUTHIN LOLOL");
    return; // Stop the rest of the method from executing
}

if (by.isEmpty()) {
/* continue from here */
'''
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/461#discussion_r480724343" expanded>

Maybe the `this` keyword can be removed? 
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/89#discussion_r480855329" expanded>

Perhaps the boolean name could be more descriptive here? Also not sure if it is intended but could you check if `b` is needed? Seems like it is passed in as a parameter but is not used in the method itself.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/89#discussion_r480866495" expanded>

I think there was a small typo here: `Return` instead of `Returns`.
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/89#discussion_r480870757" expanded>

I think there is a minor typo here: `tasl` instead of `task`.
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/89#discussion_r480890100" expanded>

Do you think using a verb for the method name is better? For instance, `openFile()` or `createOrLoadFile()` (longer but more descriptive) to indicate that a file will be created if it doesn't exist, or loaded if it exists.

I think `fileCheck()` doesn't sound like the method is loading the state from the save file.
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/89#discussion_r480894507" expanded>

Perhaps the name `index` can be used instead of `i` to show clearly that this is not an iterator variable?
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/89#discussion_r480897780" expanded>

What do you think of using the variable name `count` here to differentiate between the index of the task list and index of the matching tasks?
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/89#discussion_r480918700" expanded>

Since there are so many similar methods, do consider extracting them into a separate `CommandChecker` class. I think that would help keep track of the commands. The current setup might not scale as well if there are more valid inputs that you need to check against.

An alternative might be to use a single `checkCommand(String s)` method that returns an enum. This solution would allow you to switch on an enum instead of a boolean, which might enhance the readability of the `parse(TaskList taskList, Storage storage, String text)` method.

</panel>

</panel>

<panel type="info" header="### 102. SIDDARTH NANDANAHOSUR SURESH `@siddarth2824` (15 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/287#discussion_r480143371" expanded>

I think according to the Java coding standard guide on the CS2103/T website, under the layout section, it says that there is no indentation for the `case` clauses. Hence I think to avoid any coding standard violation, it would be advisable to fix the indentation for all of the `case` clauses to follow the guide.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/287#discussion_r480155592" expanded>

According to the Java coding standard guide, under the Naming section, it says that boolean variables/method should sound like booleans. Should this be `boolean isStop` or `boolean shouldStop`  instead of `boolean stop`?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/287#discussion_r480157964" expanded>

According to the Java coding standard guide, under the Naming section, they mentioned that naming of constant variables must be all uppercase using underscore to separate words. Hence should this be ` private static ArratList<Task> TASK_LIST` instead of `private static ArrayList<Task> taskList`?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/287#discussion_r480168514" expanded>

According to the Java coding standard guide, under the Layout section, I think it shows a sample formatting of a switch statement and in it, there is no blank newline after the `break`. Should there be a blank newline after the `break` in the following code?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/287#discussion_r480173284" expanded>

Should there be whitespace in-between `Duke` and `{`?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/287#discussion_r480174034" expanded>

Should there be whitespace in-between`DukeException` and `{`?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/287#discussion_r480176243" expanded>

I think according to the Java coding standard guide, under the Layout section, it says that line length should be no longer than 120 characters. Should the String in the `System.out.println` maybe be wrapped to avoid such a coding standard violation?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/287#discussion_r480177515" expanded>

According to the Java coding standard guide, under the Naming section, it says that boolean variables/method should sound like booleans. Should the variable name be maybe renamed to `boolean doesDirExists` or `boolean isDirExists` instead of `boolean dirExists`?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/106#discussion_r481123732" expanded>

I do not think this is a coding violation but I think a way you could try to implement to shorten this code would be to `return commandType.equals(CommandType.EXITDUKE)`. This would just be a suggestion to shorten the code and make it simpler for others to read as well. 
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/106#discussion_r481125958" expanded>

There is no coding violation here but would it better if you change the multiple else-if statements to a switch statement and handle each different case within the switch statement? This might help to improve code readability and make the code even cleaner.
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/106#discussion_r481128561" expanded>

According to the Java coding standard guide, under the Naming section, it says that constants should be all uppercase using underscore to separate words. Should there be an underscore between variables with multiple words in it? For example, `EXITDUKE` could instead be `EXIT_DUKE`?
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/106#discussion_r481136258" expanded>

According to the CS2103/T textbook, under the "Guideline: Name well" section in the Code Quality chapter, it says that nouns should be used for classes/variables. Maybe you could consider using a noun to describe your variable. You could maybe use `deadlineDate` or `dateTime` instead of `by`. 
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/106#discussion_r481137367" expanded>

According to the CS2103/T textbook, under the "Guideline: Name well" section in the Code Quality chapter, it says that nouns should be used for classes/variables. Maybe you could consider using a noun to describe your variable. You could maybe use `eventTime` or `dateTime` instead of  `at`.
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/106#discussion_r481144740" expanded>

There is no coding violation here but would it better if you change the multiple else-if statements to a switch statement and handle each different case within the switch statement? This might help to improve code readability and make the code even cleaner.
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/106#discussion_r481146855" expanded>

I do not think this is a coding violation but I think a way you could try to implement to shorten this code would be to `return symbol.equals(icon)`. This would just be a suggestion to shorten the code and make it simpler for others to read as well.
</panel>

</panel>

<panel type="info" header="### 103. LEE JOON JIE `@BreadPeanutButter` (15 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/209#discussion_r481946270" expanded>

Should there be a line between package and import statements?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/209#discussion_r481948864" expanded>

Perhaps use the featureUnderTest_testScenario_expectedBehavior() naming format for test methods for greater readability.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/209#discussion_r481951350" expanded>

I like how comprehensive your testing was.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/209#discussion_r481954340" expanded>

I agree, there should be a javadoc here since it is a public method
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/209#discussion_r481960378" expanded>

Is the 'this' keyword necessary here? The userTasklist variable is not shadowed by any constructor parameters here so I think it may be better to leave it out as per the coding standard guide. I noticed this is some other parts as well.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/209#discussion_r481962251" expanded>

Maybe use a longer/more descriptive name for err parameter eg. error.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/113#discussion_r481968345" expanded>

Should there be a javadoc description for the class? I noticed this in the other classes also.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/113#discussion_r481968721" expanded>

Should there be a javadoc description for this public method? I noticed this in the other methods also.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/113#discussion_r481969838" expanded>

Perhaps the 'done' parameter should be renamed to 'isDone'  to make it sound like a boolean. I saw this is some other methods as well.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/113#discussion_r481970952" expanded>

Is the 'this' keyword necessary here? The date and time variables are not shadowed by the constructor parameters so maybe it would be better to leave them out as per the java coding standard. I saw this is some other methods as well.
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/113#discussion_r481972256" expanded>

Would it be better to make "[✓]" and "[✗]" named constants to avoid using 'magic' values?
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/113#discussion_r481974606" expanded>

Maybe 'e' should be renamed to something more descriptive, eg. 'error'
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/113#discussion_r481975300" expanded>

Should there be a line between the package and import statements?
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/113#discussion_r481976189" expanded>

I like how comprehensive your testing here is!
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/113#discussion_r481976474" expanded>

I like the clear naming of the testing methods!
</panel>

</panel>

<panel type="info" header="### 104. GABRIEL TEO YU XIANG `@GabrielTeo` (15 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/242#discussion_r481261962" expanded>

Perhaps it would be better to use a more meaningful name instead of s for the String?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/242#discussion_r481953265" expanded>

Maybe it would have been better to leave a line between your import statements and your javadocs?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/242#discussion_r481954519" expanded>

Would it have been better to use a clearer name for a boolean such as isParseDone?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/242#discussion_r481954980" expanded>

Is it better to use another way to name your boolean such as isParseEvent?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/242#discussion_r481958280" expanded>

Perhaps it would be better to break before the "+" operator to improve readability?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/38#discussion_r481966217" expanded>

Perhaps it might be better to separate the import statements into their categories to make it neater?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/38#discussion_r482015527" expanded>

Maybe it would be better to leave a line between your imports and javadocs? Might be better to standardize throughout your code.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/38#discussion_r482017113" expanded>

Maybe it is better to call this method getTaskList() instead of getList() since it could be confusing as some may interpret it as getting a List object instead of the TaskList object.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/38#discussion_r482017664" expanded>

Perhaps it is better to name your TaskList object as taskList instead of list to avoid confusion and make it clearer?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/38#discussion_r482018517" expanded>

It could be better to name this boolean as isEqualTo instead of equals.
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/38#discussion_r482022670" expanded>

Method seems to be pretty long, more than 30 LOC, perhaps could try to simplify it?
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/38#discussion_r482025915" expanded>

I like how you break the line to avoid a line that would have been too long. 😄 
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/38#discussion_r482026983" expanded>

I like this block of code, very neat layout of if/else! 👍 
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/38#discussion_r482027919" expanded>

Perhaps you could name the method clearer, like printList, to indicate that it is printing a list.
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/38#discussion_r482028424" expanded>

similar to the comment above, you could rename this method to indicate that it is printing a list.
</panel>

</panel>

<panel type="info" header="### 105. SEO YERYEON `@wireseo` (15 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/291#discussion_r480549381" expanded>

Good practice of keeping the same level of abstraction! 👍 
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/291#discussion_r480551790" expanded>

datetime should be in camelCase?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/291#discussion_r480558045" expanded>

Final int should be in all caps?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/291#discussion_r480567054" expanded>

Extremely long if else command with nested commands hinders the overall awesome readability of the rest of your code 🤔 Would there be a method to reorganize this?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/291#discussion_r480568109" expanded>

I've read somewhere that instanceof is not ideal for checking class identity -- perhaps there is a better way to approach this?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/258#discussion_r480518301" expanded>

It might be better to list out the specific libraries that you are importing instead of importing them all with *!
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/258#discussion_r480520359" expanded>

This boolean might benefit from a clearer name e.g. isSuccessful
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/258#discussion_r480522020" expanded>

Again, listing out your imports individually will reduce loading time!
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/258#discussion_r480523300" expanded>

It is an array of multiple items, so maybe a name indicating its plurality might be better? e.g. stringParts
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/258#discussion_r480524451" expanded>

I believe Class name should be singular, so you might want to rename Todos to Todo!
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/258#discussion_r480525244" expanded>

Same thing here with Class name being in the plural form!
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/258#discussion_r480525750" expanded>

Name might benefit from more description e.g. deadlineBy or deadline
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/258#discussion_r480531496" expanded>

Hmm I feel like this package could have a clearer name, since tasklist doesn't fully represent a comprehensive view of your application 🤔 
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/258#discussion_r480533528" expanded>

Again class names should be singular!
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/258#discussion_r480542919" expanded>

Unnecessary?
</panel>

</panel>

<panel type="info" header="### 106. GUO BOHAO `@plosslaw` (14 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/160#discussion_r482684743" expanded>

Missing return tags for javadoc comments

Found the following in a javadoc article

"Omit @return for methods that return void and for constructors; include it for all other methods, even if its content is entirely redundant with the method description. Having an explicit @return tag makes it easier for someone to find the return value quickly. Whenever possible, supply return values for special cases (such as specifying the value returned when an out-of-bounds argument is supplied)."

https://www.oracle.com/technical-resources/articles/java/javadoc-tool.html#@return
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/160#discussion_r482684905" expanded>

line 21: Please try to keep the line character length to 120 characters (currently 130 chars)
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/160#discussion_r482686030" expanded>

line 33: line character length of 120 chars, consider wrapping the line for better readability
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/160#discussion_r482686502" expanded>

Missing javadoc comments for the following public methods: getDone() and getTaskName()
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/160#discussion_r482687409" expanded>

Consider line wrapping for better readability, there might be cases where a developer has to review/debug this file 
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/160#discussion_r482687509" expanded>

Consider line wrapping for better readability, there might be cases where a developer has to review/debug this file
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/160#discussion_r482687764" expanded>

Minor nit: Missing whitespace between DukeException and {
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/160#discussion_r482688002" expanded>

Minor nit: Missing whitespace between DukeException and {
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/160#discussion_r482688746" expanded>

Missing javadoc comments for the following public methods: getUserDialog(String text, Image img) and getDukeDialog(String text, Image img)
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/160#discussion_r482690212" expanded>

Missing javadoc comments for the following public methods: getType(), getIndex(), getName() and getDate()
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/56#discussion_r482693233" expanded>

Variable names are nouns and boolean variables are boolean sounding, good job!
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/56#discussion_r482693842" expanded>

Methods are named with verbs and provides sufficient insight into what they do
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/56#discussion_r482695253" expanded>

Perhaps showAddTaskMessage, showDeleteTaskMessage and showDoneTaskMessage would be more descriptive and less ambiguous
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/56#discussion_r482696337" expanded>

Missing return tag in javadocs

"Omit @return for methods that return void and for constructors; include it for all other methods, even if its content is entirely redundant with the method description. Having an explicit @return tag makes it easier for someone to find the return value quickly. Whenever possible, supply return values for special cases (such as specifying the value returned when an out-of-bounds argument is supplied)."

https://www.oracle.com/technical-resources/articles/java/javadoc-tool.html#@return
</panel>

</panel>

<panel type="info" header="### 107. GOH SIAU CHIAK `@sc-arecrow` (14 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/351#discussion_r480183272" expanded>

I think `Parser` is a suitable name for this class because its function is to decode user input and convert it into `Command`s!
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/351#discussion_r480185908" expanded>

I like your storage formatting! 👍 
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/351#discussion_r480186812" expanded>

Would it be clearer if this variable was named something like `dateTimeString`? Same for Line 126 :)
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/351#discussion_r480187834" expanded>

I think naming constants as @sigmund-c suggested is compliant with coding standards!
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/351#discussion_r480189318" expanded>

I like that you check for many possible date formats! 👍 
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/351#discussion_r480189860" expanded>

Perhaps a better name for this variable could be `dueDate`?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/351#discussion_r480190125" expanded>

Perhaps a better name for this variable could be `eventDate`?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/351#discussion_r480190503" expanded>

I think according to the coding standard, enum names should be written in PascalCase!
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/30#discussion_r480167772" expanded>

Should there be a space after DukeException? I've noticed this issue in several other places too.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/30#discussion_r480169687" expanded>

Should this method be named as a verb? I've noticed this issue in several other places too.
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/30#discussion_r480172220" expanded>

Should non-constant fields be written in camelCase instead?
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/30#discussion_r480173103" expanded>

Should enum names be written in PascalCase instead?
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/30#discussion_r480174744" expanded>

Should try-catch statements be formatted in the following manner instead>
'''
try {
    statements;
} catch (Exception exception) {
    statements;
}
'''
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/30#discussion_r480179269" expanded>

I like how clean this bit of code is! 👍 
</panel>

</panel>

<panel type="info" header="### 108. XU CAIYI `@Caiyi34777` (14 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/411#discussion_r483010894" expanded>

extra blank lines?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/411#discussion_r483011540" expanded>

Maybe you can start with "Represents..."
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/411#discussion_r483011795" expanded>

is there supposed to be anything?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/411#discussion_r483012248" expanded>

can add javadoc comment for class
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/411#discussion_r483012699" expanded>

The indentation seems wrong...
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/411#discussion_r483012877" expanded>

Same here
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/411#discussion_r483014022" expanded>

The indentation here should be 8 spaces to the right of the previous line I suppose...?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/411#discussion_r483014364" expanded>

There is extra space
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/40#discussion_r483020142" expanded>

Maybe you can consider changing "keyword" to sth like "commandType"?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/40#discussion_r483020584" expanded>

I feel that this line is rather long...
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/40#discussion_r483021155" expanded>

I think the blank lines may be unnecessary?
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/40#discussion_r483022023" expanded>

Maybe can considering wrapping these three lines into one, 'cause it does not seem complicated to me :)
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/40#discussion_r483024639" expanded>

I am not sure about this but I want to point out that the variable names generated from abbreviation may be confusing in some ways. For example, "fos" makes me think of faculty of science...  I think it is acceptable to write in  this way, but I believe use complete words can reduce confusion (such as fileOutputStream)
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/40#discussion_r483025172" expanded>

More indentations than should be? :)
</panel>

</panel>

<panel type="info" header="### 109. TERENCE HO WEI YANG `@Vielheim` (14 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/315#discussion_r481895536" expanded>

Perhaps it will be good to include a Javadoc comment for this method?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/315#discussion_r481912607" expanded>

Perhaps we can combine the comment into one line to make the comment more succinct?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/315#discussion_r481912707" expanded>

I noticed this is a repeat of the earlier issue. Perhaps we can combine the comment into one line to make the comment more succinct?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/315#discussion_r481919230" expanded>

Perhaps we can add a comment for this method about what it should do even though it returns an empty string? (ie what is it supposed to be used for in its children classes)
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/315#discussion_r481920746" expanded>

Perhaps it will be good to add the `@Override` tag here? (So that compiler can check if overriding is done properly!)
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/278#discussion_r481931164" expanded>

Perhaps we can change `by` to `dateBy` to make it more intuitive?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/278#discussion_r481932751" expanded>

I think `constructor` should be capitalised (`Constructor`). I have noticed this in other classes' constructors as well.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/278#discussion_r481934127" expanded>

I think it'll be great if javadocs can be added to summarise the interface's functionalities?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/278#discussion_r481937803" expanded>

I think it will be better if we standardise this to `showErrorMessage` as per the other methods?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/278#discussion_r481938400" expanded>

Perhaps this should be a verb, such as `printUnknownCommandMessage`?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/278#discussion_r481938889" expanded>

I think for some of the methods used by Ui should be changed to verbs form, such as `printGreetingMessage`.
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/278#discussion_r481939372" expanded>

I think this method name can be changed to `markAsDone`? (Present tense verbs)
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/278#discussion_r481939762" expanded>

I think it'll be better if a default case can be added to handle exceptions?
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/278#discussion_r481940693" expanded>

I think for line breaks, the operator (such as `+`) should be in the next line!
</panel>

</panel>

<panel type="info" header="### 110. TEO JIA WEI `@jiaweiteo` (14 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/438#discussion_r480827823" expanded>

Perhaps you can write Javadoc comments for public classes? It is stated in the [style guide](https://se-education.org/guides/conventions/java/intermediate.html#comments).
I noticed this in several other places too.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/438#discussion_r480828067" expanded>

Perhaps you can write Javadoc comments for public methods? It is stated in the [style guide](https://se-education.org/guides/conventions/java/intermediate.html#comments).
I noticed this in several other places too.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/438#discussion_r480828481" expanded>

Perhaps 'this' is unnecessary? The basic coding standard doesn't require this, but is suggested by the advanced style guide.
'''suggestion
            date = LocalDate.parse(by);
'''
I noticed this in several other places too.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/438#discussion_r480830567" expanded>

Perhaps you can name your variable to a noun instead of using a scratch variable as stated in the style guide.
'''suggestion
    String userInput;
'''
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/438#discussion_r480831170" expanded>

 Plural form should be used on names representing a collection of objects.
'''suggestion
        ArrayList<Task> listOfTasks = list.getTasks();
'''
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/438#discussion_r480833090" expanded>

The description of parameters should be included. Similar problems are found in other places.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/438#discussion_r480833988" expanded>

Maybe the name can be changed to 'strings' instead?
'''suggestion
                    String[] strings = command.split("/at ");
'''
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/438#discussion_r480834313" expanded>

Perhaps you can add an access modifier?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/137#discussion_r480810899" expanded>

Perhaps this line break can be omitted? I noticed double line breaks in several other places too.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/137#discussion_r480813126" expanded>

Perhaps 'this' is unnecessary? The basic coding standard doesn't require this, but is suggested by the advanced style guide.
'''suggestion
        filepath = Paths.get(System.getProperty("user.dir") + filepath);
'''

I noticed this issue in several other places too.
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/137#discussion_r480813871" expanded>

Should there be a line break before describing the parameters? Noticed that some methods have a line break while others do not have.
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/137#discussion_r480814161" expanded>

I like the use of the scratch variable `s` since the variable is used for temporary storage only. 👍 
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/137#discussion_r480814440" expanded>

Perhaps the brackets can be omitted?
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/137#discussion_r480814655" expanded>

Maybe this can be deleted?
</panel>

</panel>

<panel type="info" header="### 111. AARON SEAH TER CHUEN `@AaronnSeah` (14 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/88#discussion_r481942854" expanded>

Perhaps it can be started with an action word e.g. returns?
What do you think about "Loads tasks in tasklist.txt file into the TaskList if the file exists"?
I have noticed the same issue in several places too.


</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/88#discussion_r481943576" expanded>

Perhaps it could be ended with a full stop to be consistent with the coding standards?
I have noticed the same issue in several places too.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/88#discussion_r481947331" expanded>

Perhaps the naming of the method could be improved? 
The method name suggests to me that a "bye" response is printed and that it is a void return method instead of a String return method.
I have noticed the same issue in several places too.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/88#discussion_r481949060" expanded>

Perhaps the + sign can be moved to the current second line of String to be consistent with the coding standards?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/85#discussion_r481962184" expanded>

Perhaps it may be good to set the Map object as an attribute of the Bot class?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/85#discussion_r481962813" expanded>

Perhaps this code could be simplified for readability?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/85#discussion_r481963685" expanded>

Perhaps the comment is not necessary as the code and comment indicates the same meaning?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/85#discussion_r481965104" expanded>

Perhaps the naming for the method could be better, such as handleDeleteCommand?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/85#discussion_r481967161" expanded>

Perhaps you could use Loads instead of Load to be consistent with the coding standard?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/85#discussion_r481968299" expanded>

Perhaps the method can be <= 30 lines of code to be consistent with the code quality standard "avoid long methods"?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/85#discussion_r481969197" expanded>

Perhaps there could be less deep nesting to be consistent with the code quality standard of "Avoid Deep Nesting"
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/85#discussion_r481969653" expanded>

Perhaps the ; could be in line 25?
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/85#discussion_r481970075" expanded>

Perhaps this comment is not needed?
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/85#discussion_r482205226" expanded>

One suggestion I can think of is to make the map an attribute, and abstract out the lambda as a method with a meaningful method name. That way the code would be much shorter and can be understood more easily and more quickly.
</panel>

</panel>

<panel type="info" header="### 112. LOW SIANG ERN `@siangernlow` (14 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/374#discussion_r481537889" expanded>

As this class is public, should there be a JavaDoc comment for this class?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/374#discussion_r481541146" expanded>

Perhaps a more descriptive failure message could be employed here. For example, the message of the exception could be printed out. Otherwise, you could also consider using `org.junit.jupiter.api.Assertions.fail` instead of printing "Fail" to the console.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/374#discussion_r481542899" expanded>

Similar to public classes, should there be JavaDoc comments for public methods as well?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/374#discussion_r481546084" expanded>

Should this class belong in a package?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/374#discussion_r481549035" expanded>

As this class isn't extended by any other class, would a private modifier be more suitable here?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/374#discussion_r481549314" expanded>

Perhaps a more descriptive name for the test could be used here?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/374#discussion_r481551037" expanded>

You could consider naming collections of objects by the plural of the objects they contain. In this case, would it be more suitable to name this variable, `tasks` instead?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/374#discussion_r481552896" expanded>

I like the functionality of letting the user choose whether to input a duration 👍 
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/195#discussion_r481584624" expanded>

As this `taskNumber` isn't accessed from other classes, perhaps you could consider using a private modifier?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/195#discussion_r481586122" expanded>

Just a small nit, there should be whitespace after `Task`
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/195#discussion_r481588249" expanded>

Perhaps variables could be named more explicitly for readability? For example, `File file` instead of `File f`.
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/195#discussion_r481593282" expanded>

Perhaps it would be better to make this check clearer, like what does `sc.nextInt() == 1` represent. Adding a comment above would also help readability.
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/195#discussion_r481595651" expanded>

Perhaps consider grouping classes into their individual packages?
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/195#discussion_r481604999" expanded>

Perhaps you could call `saveTasks` after every time the task list is modified instead of just when the user exits the program. This would ensure that the tasks are saved even when the program is closed incorrectly, e.g. by pressing the close button instead of typing "bye". However, this is only a suggestion for your consideration.
</panel>

</panel>

<panel type="info" header="### 113. NG CHOON SIONG `@csiongn` (14 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/383#discussion_r481168792" expanded>

Should the starting word be `creates` instead of `create`? Same for the other Exception classes
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/383#discussion_r481171013" expanded>

Can consider including javadoc to better explain code.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/383#discussion_r481173905" expanded>

Can consider reorganising the code so that it is easier to follow. Perhaps consider using switch statements also?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/383#discussion_r481174719" expanded>

Minor detail but perhaps add a space before the curly brace? Same for other parts of the code.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/383#discussion_r481178961" expanded>

It was a bit hard for me to understand this method initially. Perhaps consider adding some comments.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/383#discussion_r481182592" expanded>

Is there any reason why you chose to have your `Duke` and `Ui` the way it is?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/383#discussion_r481184063" expanded>

Currently my understanding is that all important functionality (reading from standard input, parsing the command  and handling the logic) is in this `Parser` class. Perhaps consider whether this is optimal and more abstraction can be used?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/246#discussion_r481039527" expanded>

Forgot to capitalise `executes`
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/246#discussion_r481039980" expanded>

Can reconsider naming of method so that method name starts with a verb instead of being phrased as the thing that is being returned.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/246#discussion_r481040168" expanded>

Perhaps the description of the method could have been clearer? Can also summarise what the code does in the first sentence instead of saying what the code returns. Same for deleteMessage and taskLeftMessage.
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/246#discussion_r481040894" expanded>

Can reconsider phrasing to a description of what code does even though it would be general in this case
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/246#discussion_r481047443" expanded>

Perhaps reconsider naming of method
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/246#discussion_r481048408" expanded>

Can consider adopting a consistent grammatical style. So instead of saying `Creates an instance of Duke, instance of ui created too. TaskList initialised.` consider phrasing it as something along the lines of `Creates an instance of Duke and ui. Initialises TaskList`
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/246#discussion_r481048839" expanded>

Forgot to capitalise `constructor`.
</panel>

</panel>

<panel type="info" header="### 114. ANG SONG YI `@SONGYI98` (14 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/217#discussion_r481260177" expanded>

Perhaps consider rephrasing the comment as it may sound Singlish.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/217#discussion_r481264442" expanded>

I like how there are line breaks to improve the readability of the error message.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/217#discussion_r481267267" expanded>

Perhaps a better comment is "Deletes a task."?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/217#discussion_r481270443" expanded>

Should there be an empty line between the description and return section? I have noticed this at other  places too.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/217#discussion_r481272463" expanded>

Perhaps remove the indentation of the switch clauses? I noticed the same issue at other places too. Changing your IDE settings will allow for easier detection and reformatting :)
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/217#discussion_r481274827" expanded>

Perhaps consider adding a toString method instead and pass the Strings as arguments? An example can be found with the Planet enum class at https://docs.oracle.com/javase/tutorial/java/javaOO/enum.html
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/217#discussion_r481276115" expanded>

Adding a Javadoc comment is suggested since this is a public method.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/217#discussion_r481276526" expanded>

Consider leaving a space between the package and import statement.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/202#discussion_r481284542" expanded>

Perhaps consider explaining what will happen if parsing fails.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/202#discussion_r481284801" expanded>

Consider changing "Parse" to "Parses".
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/202#discussion_r481285155" expanded>

I think there is an extra space in the return description?
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/202#discussion_r481289148" expanded>

Perhaps consider renaming to SYMBOL_TICK and SYMBOL_CROSS?
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/202#discussion_r481289539" expanded>

Perhaps considering renaming it to storage as store can be interpreted as a verb.
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/202#discussion_r481290764" expanded>

I'm not so sure but should there be an empty line in between since both are from different dependencies?
</panel>

</panel>

<panel type="info" header="### 115. LEE YAN CHENG `@yanchenglee98` (14 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/185#discussion_r480565795" expanded>

I think you forgot to add an access modifier and JavaDoc comment for this method. 🤔 
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/185#discussion_r480572136" expanded>

Do be careful when using valueOf as it throws a NumberFormatException if the string is not a number. Might be good if you add a try catch block to catch the exception and notify the user that the index input is not a number. 😄 
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/185#discussion_r480576119" expanded>

using details[0], details[1] might be abit confusing. It would be better to give them detailed names such as taskType = details[0], taskName = details[1] and taskDate = details[2] to help improve readability. 👍 
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/185#discussion_r480578869" expanded>

Missing a JavaDoc comment.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/185#discussion_r480584609" expanded>

A nitpick but the JavaDoc should start with "Reads" instead of "Read".
Quoted from the Java Coding Standards:
"In method header comments, the first sentence should start in the form Returns ..., Sends ..., Adds ... (not Return or Returning etc.)"
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/185#discussion_r480588315" expanded>

This class is missing a JavaDoc header. Its constructor is also missing JavaDoc comment.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/185#discussion_r480589886" expanded>

JavaDocs for private attributes and methods are optional. But it is still good to include them. 👍 
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/93#discussion_r480605320" expanded>

I think you forgot a JavaDoc for the main method 😅 
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/93#discussion_r480606633" expanded>

It seems a number of your exceptions are missing JavaDoc comments. Do remember to add them to help users understand the code.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/93#discussion_r480641391" expanded>

I like how you ensure that parseInt will not result in a NumberFormatException by explicitly checking for a number in the string beforehand
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/93#discussion_r480656800" expanded>

I think you can just use the exception thrown from parseDateTimeString so that the user knows how to recover from the error. The user might not know how to deal with the error if it only says that it is "corrupted" but on the other hand if the error is "Ensure the datetime passed in is of the form" the user can manually edit the duke.txt file if required.
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/93#discussion_r480661955" expanded>

It will be better to just standardize the save location. So if the directory does not exist, create it and just save the file to the same directory. This can help reduce confusion on the save location for both user and programmer. 
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/93#discussion_r480674344" expanded>

Would be good to define what qualifies as equal in the JavaDoc comment. i.e both name, time and date must be equal.
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/93#discussion_r480679599" expanded>

Good use of StringBuilder instead of string concatenation in order to prevent constant duplication and minimize overhead 👍 
</panel>

</panel>

<panel type="info" header="### 116. LIM CHUN YONG `@chunyongg` (14 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/303#discussion_r482023718" expanded>

Cool personality!
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/303#discussion_r482024665" expanded>

Perhaps this line can be explained?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/303#discussion_r482027859" expanded>

Personally, this level of indentation feels too nested.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/303#discussion_r482028097" expanded>

A comment explaining what is "\u2713" would be great!
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/169#discussion_r482711318" expanded>

Consider writing a comment on what this String array is supposed to look like 
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/169#discussion_r482711850" expanded>

Consider commenting what these unicode characters are too :)
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/169#discussion_r482712560" expanded>

Consider setting this constructor as private - I suppose this is called when setting a task as done? The method can be protected but the constructor itself can be private.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/169#discussion_r482713239" expanded>

showWelcomeTaskList can make use of showTaskList() for ease of change in future, or it might be better to collapse it into a single method since they are somewhat similar.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/61#discussion_r483083650" expanded>

Agreed
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/61#discussion_r483084340" expanded>

Remember to remove methods that are no longer needed
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/61#discussion_r483085225" expanded>

Yes, consider shifting the method to Task class instead
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/14#discussion_r482011061" expanded>

Perhaps it would be great if there are some comments on how the parsing is done 
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/14#discussion_r482011668" expanded>

For this segment, consider using the return String from greet() and printing it in showWelcome() 
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/14#discussion_r482019154" expanded>

Perhaps giving a comment on the expected format of the input (so that contentParts[0] and contentParts[1] is understandable to reviewers)
</panel>

</panel>

<panel type="info" header="### 117. MA YUERAN `@Ma-Yueran` (14 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/460#discussion_r481155570" expanded>

Hi, I'm not sure if your way of writing try and catch is correct, I checked the Java coding standard, and I think perhaps the style should be:

try {
     do something;
} catch (some exception) {
     do something;
}
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/460#discussion_r481158289" expanded>

Maybe the try and catch should have the same indention as the line "String command = sc.nextLine()"? Currently I think there might be four more spaces in front of the lines.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/460#discussion_r481160646" expanded>

Maybe can put the conditions into a separate function? I think it might be a bit easier to read.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/460#discussion_r481163107" expanded>

 Maybe can try to save the line string as a constant named something such as "LINE"? Then it can be called whenever you want to draw a line
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/460#discussion_r481166978" expanded>

The method might be a bit too long and complicated, and it might get more complicated in the future development. So, maybe can try to separate out some smaller methods from this long method, or separate some functions from this method to other classes?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/460#discussion_r481171357" expanded>

The function seems be a function reporting new tasks being added, so maybe it is a bit better to make the name of this function more specific? PrintTask might be a bit general. How about naming it as reportNewTask or reportAddTask?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/460#discussion_r481174821" expanded>

Maybe it is a bit better to make the constructor of Task protected? Since as the super class of Event, Todo and Deadline, it should not be allowed to be instantiated directly.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/460#discussion_r481176450" expanded>

Maybe it is better to name the function as getTaskCompletion according to coding standard?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/202#discussion_r481539950" expanded>

The processInput function seems to be a bit too long, and if there are more commands added in the future, it might get even longer. Is it better to have a new class to share some work of this function? Maybe a CommandSet class.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/202#discussion_r481541681" expanded>

I like the way you parse String to LocalDateTime.
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/202#discussion_r481543994" expanded>

I like this exception message.
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/202#discussion_r481548207" expanded>

Is it better to have an exception class called something such as "InvalidIndexException" which extends ChatterboxException?
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/202#discussion_r481548816" expanded>

Is it better to put this message into Ui?
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/202#discussion_r481552068" expanded>

Is it better to use assertThrows function here?
</panel>

</panel>

<panel type="info" header="### 118. CLARA ADORA `@claraadora` (14 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/408#discussion_r481825757" expanded>

Perhaps a break-down of just the classes that you need, instead of importing all? 
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/408#discussion_r481833408" expanded>

This is very minor, but I think you can add a full stop at the end of the line. 
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/408#discussion_r481837868" expanded>

For 2103, I think it is recommended to not use indentation for case clauses. 
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/408#discussion_r481839568" expanded>

Just a personal preference; I think creating a new Main class to run Duke can be an option to consider.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/408#discussion_r481840250" expanded>

Same as above, I think it would be better to import the specific classes that you need. 
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/408#discussion_r481840722" expanded>

Same as above regarding adding a full stop. 
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/408#discussion_r481842224" expanded>

Same as above regarding the usage of indentation for cases in a switch statement. 
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/408#discussion_r481843609" expanded>

Very minor again, but maybe can delete the empty line. 
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/408#discussion_r481845156" expanded>

Although the method's function is obvious, it might still be good to add a JavaDoc comment as the method is public. 
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/318#discussion_r481860568" expanded>

This is a minor suggestion based on personal preference. Maybe use 'print' instead of 'show'? 
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/318#discussion_r481873212" expanded>

Perhaps add 'get' to the method name, i.e. getTotalNumberofTasks()? 
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/318#discussion_r481874214" expanded>

This is just a personal preference too; maybe can add 'AtIndex' to the method name i.e. getTaskAtIndex. 
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/318#discussion_r481874535" expanded>

Same as above regarding the addition of 'AtIndex' 
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/318#discussion_r481875393" expanded>

Same as above regarding the addition of 'get' word to the method name i.e. getHasDoneStatus() or rather getIsDone() 
</panel>

</panel>

<panel type="info" header="### 119. FRANCIS HODIANTO `@FH-30` (14 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/452#discussion_r482032085" expanded>

Perhaps an empty line between description and parameter section of javadoc?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/452#discussion_r482038397" expanded>

Perhaps an empty line between description and parameter section of javadoc? I noticed the same issue in several other places too.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/452#discussion_r482040572" expanded>

Should there be spacing after "Exception" and before the curly brace?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/452#discussion_r482041874" expanded>

Perhaps it might be good to separate logical units in a block of code with blank lines?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/452#discussion_r482042498" expanded>

I think it might be good to separate logical units in a block of code with blank lines. I noticed the same issue in several other places too.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/452#discussion_r482045635" expanded>

I like how you break before an operator and after a comma, I have also noticed this in other sections of your code!  👍
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/396#discussion_r482064699" expanded>

I think you might have misspelled something here?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/396#discussion_r482065365" expanded>

Is a @param tag here necessary?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/396#discussion_r482067215" expanded>

Perhaps a more descriptive name such as deadlineDate might make its use clearer?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/396#discussion_r482068127" expanded>

 Perhaps it might be good to include a blank line between description and params of javadoc?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/396#discussion_r482068866" expanded>

Perhaps a more descriptive name like eventTime might make things less ambiguous?
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/396#discussion_r482069586" expanded>

I like how you name the booleans so that they sound like booleans!  👍
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/396#discussion_r482071979" expanded>

Is invalidInput a verb?
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/396#discussion_r482073290" expanded>

Perhaps it might be better to abstract out the different types of command methods into different command classes inheriting from a main Command class?
</panel>

</panel>

<panel type="info" header="### 120. LER YONG YAO, JAZER `@jazerler` (14 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/391#discussion_r481057338" expanded>

`toDisk` gives the impression that this method is writing the task to the disk. Maybe `toDiskFormat` would be a better way to put it?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/391#discussion_r481057810" expanded>

Not sure what these comments are doing here. 
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/391#discussion_r481059186" expanded>

This line of code is reused many times within this class. Maybe you might want to put it into it's own function to reuse, like `sendLine()` or something similar? 
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/293#discussion_r481739966" expanded>

I see this "No newline at end of file" in many of the files here. I don't believe this was specified in the coding style guide, but maybe GitHub is complaining about it?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/293#discussion_r481742143" expanded>

Sections like these are quite deeply nested, maybe you might want to refactor this? The other methods in this class also have this issue. See [the textbook page](https://nus-cs2103-ay2021s1.github.io/website/se-book-adapted/chapters/codeQuality.html#avoid-deep-nesting) for the section on deep nesting. 
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/293#discussion_r481747125" expanded>

The name of this method isn't unclear about what it's doing, but it doesn't quite fit the format of being a verb. Maybe `markAsDone` would be better? `list` could also be renamed to `showList`, and `add` could be more specific with what's being added to where. 
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/174#discussion_r480031935" expanded>

Perhaps this method could be named better? Maybe `getGreeting()` might be better, or simply save this as a constant String `GREETING` instead of putting it in a method. Interesting logo though. 
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/174#discussion_r480033737" expanded>

Adding a line break between the package and import statements would help to improve readability. 
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/174#discussion_r480034638" expanded>

A line break could help to make this more readable. See "Place line break to improve readability" in the style guide. Some of the other `else if` statements in this method could also do with a line break.
On another note, this entire method is quite lengthy with many different cases, and it may be a good idea to try and break it up in future iterations. 
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/174#discussion_r480036925" expanded>

Seconded. `addTaskToStorageFromString` might also be a possible option.
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/174#discussion_r480037416" expanded>

Minor nit with the method name here, but perhaps `saveToFile` would be more specific as to what this method actually does?
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/174#discussion_r480041686" expanded>

Both Deadline.java and this file have missing Javadoc comments for only this method within the class. The method name can be a bit vague about what it's actually converting the date/time to, so a quick `return` clarification in the documentation would help a lot. 
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/174#discussion_r480046001" expanded>

The naming for the test methods can be clearer. For example, `doneCommand_exceptionThrown` tests for an input that does not give a proper numerical input, so `doneCommand_noNumberGiven_exceptionThrown` could be a better name under the `featureUnderTest_testScenario_expectedBehavior()` format outlined in the coding standard. Although the standard does allow for the omission of the 2nd and 3rd parts, these tests may not be exhaustive enough to justify dropping the test case section of the name, especially if other exceptions may arise from entering the command in different ways. The other test classes also have a similar problem with method naming. 
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/174#discussion_r480047266" expanded>

The `featureUnderTest_testScenario_expectedBehavior()` format should, at least, include the 1st section of the feature under test. Perhaps `dateCommandExecution_dateDoesNotExist_exceptionThrown` might be a better way to name this?
</panel>

</panel>

<panel type="info" header="### 121. WU QIRUI `@hhdqirui` (14 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/453#discussion_r482062257" expanded>

It is better for "duke" to be PascalCase.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/453#discussion_r482064606" expanded>

Documentation format is a bit off.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/453#discussion_r482065008" expanded>

Can add javadoc for this method.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/453#discussion_r482067991" expanded>

Can add javadoc to this class
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/453#discussion_r482069153" expanded>

Can be more specific instead of using "*".
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/453#discussion_r482069618" expanded>

Can be more specific instead of using "*".
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/228#discussion_r482072549" expanded>

It might be better and cleaner to put "tasks.txt" in a "data" directory
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/228#discussion_r482077033" expanded>

Can seperate the TaskList from Storage class. Storage class might not need to know the TaskList class.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/228#discussion_r482077206" expanded>

Same as above. Can seperate the TaskList from Storage class. Storage class might not need to know the TaskList class.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/228#discussion_r482079062" expanded>

This method can be in Parser class instead.
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/228#discussion_r482080268" expanded>

Can this field be private?
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/228#discussion_r482080672" expanded>

Can this field be private?
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/228#discussion_r482081608" expanded>

Can this field be private?
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/228#discussion_r482082278" expanded>

Can this field be private?
</panel>

</panel>

<panel type="info" header="### 122. LE HUE MAN `@lettuceman4` (14 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/368#discussion_r480881956" expanded>

Perhaps a missing full stop here?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/368#discussion_r480884563" expanded>

I think there is an empty line between description and parameters :"( for other javadoc comments also!
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/368#discussion_r480891676" expanded>

I think its a bit strange to have a load method inside a Task class? Maybe you can consider having a SaveAndLoadManager to handle all the saving and loading of tasks? Just a suggestion hehe
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/97#discussion_r480786132" expanded>

I'm a bit confused here... maybe can change the variable "input" to "detail" like in the parse method because for some reason i assumed the input is the whole string ><
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/97#discussion_r480789702" expanded>

I think maybe can factor our the arr[0].trim() a bit earlier here? 
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/97#discussion_r480790670" expanded>

I like this part!!!! So neat! Can I learn from you? :")
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/97#discussion_r480796578" expanded>

Maybe this part can be abstracted into another method? like 1 method to read the file and another to convert the read data to actual objects.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/97#discussion_r480798655" expanded>

This is so clever! I used for loop guess now I have to change 👍 
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/97#discussion_r480800589" expanded>

This part maybe can consider abstracting it into another method (convertListToString or something) because it can be reused (in list() for example) I think?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/97#discussion_r480804043" expanded>

Command pattern! Nice!
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/97#discussion_r480851881" expanded>

Should there be an empty line between 98 and 99?
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/97#discussion_r480852270" expanded>

and other javadoc with description and params too 👍 
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/97#discussion_r480876147" expanded>

perhaps this space here can let go?
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/97#discussion_r480877137" expanded>

also maybe the description should start with Returns instead of Return?
</panel>

</panel>

<panel type="info" header="### 123. TOH YU TING `@tohyuting` (13 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/191#discussion_r480920193" expanded>

I notice that you missed out the return parameter. Will it be better if the Javadoc comment for this method specify exactly what will the method return?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/191#discussion_r480926135" expanded>

I like how you used System.exit(0) to properly exit the bot. 👍 
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/191#discussion_r480929215" expanded>

In this Javadocs comment, it seems to not be followed by Command class immediately. Perhaps you wish to shift it below the import line? 🤔 
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/191#discussion_r480937065" expanded>

There seems to be a missing space between Command and { here. I notice this issue in a few other places too, you may want to relook at it again?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/191#discussion_r480938599" expanded>

I like how you allow users to find tasks using date as a keyword as well, instead of just task name. 👍 
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/191#discussion_r480958599" expanded>

I like how the handling of exceptions are handled by various duke exception classes 👍 
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/191#discussion_r480962422" expanded>

Will it be clearer to user what the method does if the method name is changed to "hasSpecificKeyword"? 🤔 
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/86#discussion_r480978650" expanded>

Will it be clearer if the file is stated, e.g. toStringDataFile, instead of just file since it may not be clear to user? 🤔 
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/86#discussion_r480986611" expanded>

I like the clear naming of boolean variable here. 👍 
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/86#discussion_r480987766" expanded>

I like the use of enum here, resulting in neat code when parsing user's input.
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/86#discussion_r480989047" expanded>

Appropriate use of streams in this class, resulting in neat code. 👍 
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/86#discussion_r480989793" expanded>

Will it be better if the javadocs comment here include the return parameter to specify what is the String that is returned? 🤔 
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/86#discussion_r480993089" expanded>

Will it be clearer if the javadocs include when this second constructor could potentially be used to create tasks?
</panel>

</panel>

<panel type="info" header="### 124. JIANG SIYUAN `@Stefan-Jiang` (13 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/422#discussion_r481056664" expanded>

Perhaps by is not the best option to name this variable?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/422#discussion_r481057687" expanded>

the naming of the variable "msg" is probably questionable
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/422#discussion_r481058918" expanded>

A lot of duplicate code because the "isExit" method is overridden for quite a number of that. I suggest to adopt another approach towards handling the exit of the program:)
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/422#discussion_r481060529" expanded>

As for me, I find the multiple "if"s not as readable as "if-else if" blocks, but even if the logic permits, it is still totally up to you whether to change it or not.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/422#discussion_r481063246" expanded>

perhaps you could consider changing the naming (a couple of other similar issues as well).
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/316#discussion_r481039712" expanded>

yah I agree with the former reviewer that the error could contain an error message
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/316#discussion_r481041427" expanded>

yup this should be an extra line break
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/316#discussion_r481043252" expanded>

I think according to the coding standard, the description should start with "parses" instead of "parse", this should apply to all your Javadocs.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/316#discussion_r481045070" expanded>

I'm not sure whether the layout here is correct... consider adding a blank between "]" and "{", consider changing the indentation to 4 characters instead of 8.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/316#discussion_r481045959" expanded>

yup the line break could be removed
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/316#discussion_r481046290" expanded>

Javadoc for this method (optional)
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/316#discussion_r481046661" expanded>

extra blank line, a couple of other similar careless mistakes as well, will stop mentioning from here onwards. 
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/316#discussion_r481048016" expanded>

Agree with the previous reviewer
</panel>

</panel>

<panel type="info" header="### 125. TAN WEI XIN `@duckmoon99` (13 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/304#discussion_r481167839" expanded>

"this." keyword not needed, since there is no conflict in name.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/304#discussion_r481168519" expanded>

A bit long. Might want to break it.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/304#discussion_r481173836" expanded>

Consider breaking the strings so that it represents more closely to the string that will be outputted. Might want to consider as well using String.format() for this.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/304#discussion_r481175028" expanded>

Might want to rename to hasExited instead. 
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/304#discussion_r481177552" expanded>

Might want to use something "rarer" for separator, to avoid error parsing tasks with "|" inside.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/304#discussion_r481179092" expanded>

Test looks very detailed. Nicely done!
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/224#discussion_r481130157" expanded>

Should leave empty line between descriptions and parameters. Same for the rest of JavaDoc comments.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/224#discussion_r481131953" expanded>

A bit dangerous to use the symbols directly in source code. Consider using their Unicode equivalent instead. Same comment for the rest of the usage of symbols.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/224#discussion_r481133325" expanded>

Not too sure what this comment is about.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/224#discussion_r481134103" expanded>

No need for "this.", since the scope is clear.
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/224#discussion_r481140936" expanded>

Method name and description not obvious on what this method does(String is returned as side effect)
Might want to make Command class abstract if you have abstract method.
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/224#discussion_r481143821" expanded>

Might want to indent properly to give a rough idea of what the string looks like. Or even use String.format to avoid repeated usage of + operator.
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/224#discussion_r481146708" expanded>

Might want to reconsider the naming of testing methods (refer to [coding standard](https://se-education.org/guides/conventions/java/intermediate.html)).
</panel>

</panel>

<panel type="info" header="### 126. AMBROSE LIEW CHENG YUAN `@MorningLit` (13 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/360#discussion_r480817663" expanded>

Maybe set private and final for variables? Since you're not modifying it anymore
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/360#discussion_r480821595" expanded>

Try to avoid while (true) ? I think its generally bad practice? Can replace with boolean flags
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/360#discussion_r480822929" expanded>

remove readability, do you mean improve readability, kendrew chan?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/360#discussion_r480825952" expanded>

+1! Beautiful code!!
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/360#discussion_r480827148" expanded>

Amazing use of enums
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/360#discussion_r480828625" expanded>

+1, overall very clean and well-designed code
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/134#discussion_r480768659" expanded>

I like how you edited the README to showcase the current state of Duke chatbot
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/134#discussion_r480782331" expanded>

Wow! I really like how you're taking the step further to add different dialogboxes
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/134#discussion_r480791521" expanded>

Maybe the type can be of the enum that you created, instead of string?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/134#discussion_r480793612" expanded>

Maybe create a separate class to handle returning String UI? Like a UI class they suggested might help your code look cleaner
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/134#discussion_r480795144" expanded>

Maybe can extend ArrayList<Task> instead of just holding an arraylist<Task>?
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/134#discussion_r480798986" expanded>

Its better to make the constructor private just in case you create a random enum not found in your list of actiontypes
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/134#discussion_r480809080" expanded>

Very organised, nice
</panel>

</panel>

<panel type="info" header="### 127. SHERMAN LIM JUN HONG `@shermz-lim` (13 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/249#discussion_r481099077" expanded>

I like how you have defined the error messages in a single place: it makes it much easier to change!
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/249#discussion_r481101255" expanded>

I think you can consider shortening this method (as it seems quite long) by creating other private methods as helper functions! 👍 
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/249#discussion_r481102054" expanded>

Perhaps you can use a more descriptive variable name :) I notice this in other places too in this method
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/249#discussion_r481102851" expanded>

You can consider listing explicitly the classes that you are importing!
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/249#discussion_r481104818" expanded>

Maybe you can name this as "printBye"? I think it will be more consistent with the rest of the method names, and it also sounds slightly more like an action :) 
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/249#discussion_r481111164" expanded>

I think you can consider explicitly listing all the classes you are importing! :)
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/29#discussion_r481084280" expanded>

Perhaps getMenu would be a better method name as methods should be named using verbs.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/29#discussion_r481086691" expanded>

Maybe the header comments for a method could start with a verb instead of a noun? In the coding standard, they have some suggestions like "Returns", "Sends" etc
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/29#discussion_r481087459" expanded>

I like how you have structured your application! I think the classes are really well organized in their packages!
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/29#discussion_r481088792" expanded>

I am just being nit-picky here but you can consider changing it to "Prints" instead of "Print" as described in the coding standard. I noticed this in several other places too
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/29#discussion_r481089322" expanded>

I like how you are using abstraction here!
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/29#discussion_r481090406" expanded>

Maybe this method can be called "convertDateToLocalDate" to sound more like an action! :) Noticed this in other places too!
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/29#discussion_r481091828" expanded>

You can consider removing the indentation for the case clauses. I did the same thing too in my codebase previously but it seems like the coding standard is saying that there is no indentation haha :) 
</panel>

</panel>

<panel type="info" header="### 128. JOEY CHEN DEEN `@joeychensmart` (13 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/327#discussion_r481825740" expanded>

This method feels very long. Maybe you can consider refactoring this.

A suggestion would be to create a `Parser` class to process the input, and a `Commands` class to contain the logic for each individual command.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/327#discussion_r481827662" expanded>

Your try-catch blocks all look very similar. Perhaps you can factor this out into a function (and put it in the `Command` class mentioned above).
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/327#discussion_r481828707" expanded>

The `Main` class seems to be doing too many things. I would suggest putting all these `createXXXX` functions in another class.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/327#discussion_r481832426" expanded>

Since you are using many different exception classes, I would suggest putting a default `msg` string instead of always taking it from the constructor.

So instead of doing
``` throw new DeleteIndexOutofboundsException("\n\tYou have typed in an invalid number.\n\tPlease check your list again.");```
in your code you can simply do this:
``` throw new DeleteIndexOutofboundsException();```
Also makes those sections easier to read.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/327#discussion_r481833843" expanded>

Not too sure but IIRC it's safer to inherit from `Exception` rather than `RuntimeException`?

In case you forget to catch a LukeException the compiler can warn you then.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/327#discussion_r481835715" expanded>

Do remember to add proper tests before the iP deadline!
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/327#discussion_r481838361" expanded>

Maybe you committed this accidentally, but if this is intentional you may want to add a comment as to why this class is blank.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/122#discussion_r481799551" expanded>

I noticed that you commented out several lines of code (also on lines 15, 50, 51, 57 and 58), perhaps you could write another preceding comment to explain why you commented them out?

If these changes are 'experimental' or 'exploratory', you can try using the `git stash` command to store them locally instead.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/122#discussion_r481805834" expanded>

There's only 1 list in this function so maybe you should name it just `list` or `taskList` since there's no ambiguity. (A confused reader may try to look for a `list2` otherwise).

I've also noticed that in your code you named your `TaskList` instances as `list`. I think this is fine for now, but you could consider using a clearer name like `taskList` so there's no confusion with instances of java's `util.List`.

Same for line 55.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/122#discussion_r481816219" expanded>

The `logo` and `line` variable names should be in UPPER_SNAKE_CASE to conform with the style guide, since they are being used as constants. (I think you may also want to make them static, since they are shared among all instances of this object).
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/122#discussion_r481817048" expanded>

You should add JavaDocs here, since this is a public class.
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/122#discussion_r481817390" expanded>

Same as `DeadlineStub.java`, you may want to add JavaDocs.
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/122#discussion_r481820064" expanded>

Instead of putting several tests in one function, maybe you should split them up into several functions so it's easier to see which individual test breaks the code (now if this `addTaskTest` fails you will have to comb through all the mini tests here to see what went wrong).

Also I think it will be clearer if you added a short comment to describe what you are testing for in each test.
</panel>

</panel>

<panel type="info" header="### 129. CHIA CHU YOU `@chuyouchia` (13 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/467#discussion_r482070847" expanded>

There are some recurring inconsistencies with usage of white space. It might be good to review to keep it consistent with the rest of the code base.

for example: if (exist) would better adhere to coding styles than if(exist)
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/467#discussion_r482073175" expanded>

 Names representing methods must be verbs and written in camelCase. For example, getName(), computeTotalWidth()

So, if the intention is for you to get the value of first slash tracker, the method name could be getFirstSlashTracker instead
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/467#discussion_r482079156" expanded>

It seems like you are making a line break in order to follow the rule of line length not exceeding 120 and that is great!

However, line breaks should be done before an operator. One possible way could be to change this line to the following format :
System.out.println(" Yup, this is now added! " + " [E][x] " 
+  order.substring(5, number) + "(at: " 
+  order.substring(number + 3) + ")");

the operator should be a part of the new line when wrapping lines. Hope this example clarifies 👍 
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/114#discussion_r482095056" expanded>

I quite like the clarity in your comments, some quick tips for readability and adherence to javadocs standards - JavaDocs general comment section should have one line break from the remainder.

For instance, it should look like this:

* Return the symbol of the status of this task.
*
* @return ✓ if task is done, ✘ if task is not done
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/114#discussion_r482097456" expanded>

I like how you are adhering to encapsulation principle by making your attributes private. I had some trouble deciphering what does the at variable represent without reading the rest of the code base though. Would it be better to refactor it into "atDateTime"? 

*this could apply similarly to the code for the class deadline as well :)
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/114#discussion_r482099572" expanded>

Would it be better to turn this into "loadFile"? (Just to aid in readability!)
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/114#discussion_r482101257" expanded>

Would be a good idea to consider refactoring this into a separate class to handle the UI of JavaFx instead of having it all in the Duke class. If we try adhere to the SRP, it would probably be best for Duke to handle the underlying implementation logic of interacting with commands? Then the separate class could handle the UI?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/114#discussion_r482102537" expanded>

It seems like you are doing these generic checks rather often. In order to promote reusability of code, would it be better to refactor the checking into a separate method, and call that method in one line as needed? (Inside of the execute method probably)
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/60#discussion_r482043528" expanded>

 Names representing methods must be verbs and written in camelCase. e.g. getName(), computeTotalWidth()

Suggestion here would be to change it to getSimplifiedTaskString()

This minor infraction is similar across all objects extending from Task, so they could be refactored similarly

</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/60#discussion_r482046918" expanded>

Not a requirement for test code, but it is recommended to write in tests in the following format -> whatIsBeingTested_descriptionOfTestInputs_expectedOutcome

Rationale is that when you see errors occurring due to your unit tests, it would be good to be able to trace exact test case scenarios and narrow down the scope of why errors are occurring. It would be particularly important in the case of regression testing. Once code bases grow larger, it would be easier for other developers who are working on the code together to realise what problems are being created when they refactor the code without prior knowledge in an effort to introduce new features.

</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/60#discussion_r482107569" expanded>

This is really more of a personal preference than actual error. I would think that the commands being added are rather literal in their meaning, given that they are actual words and not magic numbers or characters.

Would it not be sufficient to use the strings themselves in the switch case statements? 
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/60#discussion_r482108350" expanded>

I liked the use of static final here to give these strings a named constant for readability!
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/60#discussion_r482112080" expanded>

I realised that you chose to save the file to storage after execution of each command. I was wondering if that was indeed necessary, given that file I/O operations are in general more expensive and might slow down the functionalities. Instead, you could try using storage to write out the file after multiple commands are executed only at the end of duke's life cycle when the bye command is issued?

This is understandably more of a design decision though.
</panel>

</panel>

<panel type="info" header="### 130. ALEX CHUA QUN YAO `@AlexCQY` (13 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/389#discussion_r480297997" expanded>

Good use of comments! 👍 
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/389#discussion_r480299886" expanded>

Would it be a better practice to make these fields private? Could it be placed before the methods?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/389#discussion_r480300472" expanded>

Would adding extra line breaks improve readability?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/80#discussion_r480278130" expanded>

I really like that there are description on specific lines of the gradle to explain the use of that particular line
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/80#discussion_r480283284" expanded>

I feel that the readability of the fields are alright in this class. However, I do agree with @dianneloh9 that line breaks can inserted between different methods.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/80#discussion_r480285811" expanded>

Could inserting line breaks between these arguments improve readability?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/80#discussion_r480286154" expanded>

Will it be better to store this string message as a constant?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/80#discussion_r480287065" expanded>

Would leaving a description for this method allow others to better understand what this method does?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/80#discussion_r480287556" expanded>

This is a good description that explains the use of the class 👍 
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/80#discussion_r480288078" expanded>

Nice explanation of the method here!
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/80#discussion_r480288636" expanded>

Great use of enums
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/80#discussion_r480289042" expanded>

May consider adding some description to the parameters
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/80#discussion_r480289254" expanded>

Good use of line breaks 
</panel>

</panel>

<panel type="info" header="### 131. LIM JUN JIE `@Asuraxsoul` (13 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/450#discussion_r480843233" expanded>

Maybe you can change "by" variable name to be more descriptive? Can consider "timeDescription"?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/450#discussion_r480844763" expanded>

Similar to Deadline class, could the "at" variable name be changed to something more descriptive?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/450#discussion_r480847445" expanded>

Should underscore be used for naming here? According to the coding standards, underscores may be used in test method names and for constant names that are all caps (eg, MAX_ITERATIONS).
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/450#discussion_r480849721" expanded>

Consider storing "O" and "X" as constants and then referring to them?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/450#discussion_r480850530" expanded>

I feel that it would be better to add 1 empty line at the end of this file so that git knows that the file terminates here.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/450#discussion_r480851831" expanded>

Can consider changing "greetings" method name to a verb form such as "greet".
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/143#discussion_r480821065" expanded>

Just a personal opinion, I feel that modEcho name can be more descriptive?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/143#discussion_r480824057" expanded>

I feel that the processTime name can be better? Maybe it can be called as processTimePrefix? 
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/143#discussion_r480827498" expanded>

Could modNext be named better?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/143#discussion_r480828724" expanded>

Saves* the data from the updated task list...
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/143#discussion_r480832825" expanded>

Maybe you can consider making "Y" and "N" as private final variables and then refer to them?
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/143#discussion_r480834169" expanded>

Should add in @return too?
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/143#discussion_r480837003" expanded>

Maybe you could change sayBye name to showEndMessage? To be more in line with showStartMessage.
</panel>

</panel>

<panel type="info" header="### 132. LEE YORK TAT `@leeyorktat` (13 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/400#discussion_r481138580" expanded>

I think you're missing a header comment for this class and some other classes?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/400#discussion_r481141230" expanded>

I don't think there's a need for indentation for case clauses? likewise for your other case clauses in other classes
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/400#discussion_r481150367" expanded>

I think you're supposed to package your classes?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/400#discussion_r481152687" expanded>

I like how neat your main class is! 👍 
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/400#discussion_r481160790" expanded>

I think you're missing the return type of the method in the docs and in some of your other methods too?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/400#discussion_r481161660" expanded>

I think you're missing the parameters of the constructor in your docs?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/400#discussion_r481162592" expanded>

I think your @param has to be on different lines like your other methods?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/400#discussion_r481164892" expanded>

I think you have to specify the return type of the method in your docs?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/400#discussion_r481166220" expanded>

I think you have to leave a line between the description and the @params section?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/400#discussion_r481664624" expanded>

Ah I see. Thank you for the clarification!
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/259#discussion_r481183131" expanded>

Do you need to document this method?
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/259#discussion_r481185730" expanded>

Do you need to document this method?
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/259#discussion_r481190355" expanded>

I like how the names of your methods are very clear and readers know exactly what each method does! 👍 
</panel>

</panel>

<panel type="info" header="### 133. GOH TIAN YONG `@TianYong-Goh` (13 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/294#discussion_r480038561" expanded>

Perhaps you might want to consider combining the if-else statement with the try and catch and catch the NullPointerEception.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/294#discussion_r480047936" expanded>

As per se in java coding standard (there is no indentation for case clauses) hence you might want to consider removing the indentation.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/294#discussion_r480140715" expanded>

You might want to consider adding JavaDoc to Constructor.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/294#discussion_r480141160" expanded>

You might want to consider adding JavaDoc to Class.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/294#discussion_r480142262" expanded>

wildcard import is not encouraged according to Java coding standard. It would be better to list them out explicitly.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/294#discussion_r480144903" expanded>

You could consider changing parse to parseInput instead. So it is clearer that this method is used to parse the user input.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/294#discussion_r480204702" expanded>

Perhaps you could consider changing this method into a shorter method by extracting out some of the operations and make a new method. This could help to improve the readability of the code. 
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/111#discussion_r480026576" expanded>

Perhaps you could consider putting a space between line 3 and 4 which follow the other classes' import's grouping?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/111#discussion_r480033960" expanded>

Consider changing Mark to Marks to follow Java coding Standard.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/111#discussion_r480210557" expanded>

It looks like you miss out a full stop behind the tasks.
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/111#discussion_r480211945" expanded>

Perhaps you might want to consider putting Cap for the first letter of the description. For example: The user input
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/111#discussion_r480213354" expanded>

It looks like you accidentally miss out the description for context.
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/111#discussion_r481931700" expanded>

Oooo ok. thanks for the explanation:)
</panel>

</panel>

<panel type="info" header="### 134. AUDREY FELICIO ANWAR `@AudreyFelicio` (13 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/468#discussion_r481105919" expanded>

According to the module's coding standard, should the `+` after `"(by: "` be on the second line instead of the first line?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/468#discussion_r481109857" expanded>

According to the module's coding standard, should the `+` after `"(at: "` be on the second line instead of the first line?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/468#discussion_r481113436" expanded>

According to the module's coding standards, should the javadoc header comment start in the form of `Handles ...`?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/468#discussion_r481115634" expanded>

According to the module's coding standards, should the method name `showIOException` be `showIoException`?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/468#discussion_r481117759" expanded>

According to the module's coding standards, should the method name `showIOException` be `showIoException`?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/468#discussion_r481119159" expanded>

According to the module's coding standards, should `import static org.junit.jupiter.api.Assertions.assertEquals;` be put above `import org.junit.jupiter.api.Test;`? The same comment for all other classes that have those two imports.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/468#discussion_r481120096" expanded>

According to the module's coding standards, should a javadoc comment exist above the method? The same comment for all other public methods.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/53#discussion_r481132236" expanded>

According to the module's coding standard, should there be an empty line between the header comment and the first `@param`? The same suggestion for all other javadocs comments.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/53#discussion_r481137388" expanded>

According to the module's coding standards, should a Javadoc comment exist above the `public class Command`? The same command for all other classes.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/53#discussion_r481138503" expanded>

Should the name `filepath` be `filePath`?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/53#discussion_r481139719" expanded>

Should `initialiseWriter` be named `initializeWriter`?
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/53#discussion_r481141401" expanded>

Should the method name `newStorage` start with a verb? I think I prefer `initializeNewStorage`.
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/53#discussion_r481143020" expanded>

Should `import static org.junit.jupiter.api.Assertions.assertEquals;` be above `import org.junit.jupiter.api.Test;`?
</panel>

</panel>

<panel type="info" header="### 135. NGUYEN HOANG HAI MINH `@minhhhnguyen2000` (13 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/268#discussion_r482411485" expanded>

Perhaps you could change the variable's name to isBye instead of bye since it is a boolean? 
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/268#discussion_r482415489" expanded>

Perhaps you could include a "break;" after this line? I think this you missed this as you include break for every other cases.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/268#discussion_r482419283" expanded>

Maybe you could add a space after "name," so that it follow the java coding standards?
E.g: super(name, isCompleted)
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/268#discussion_r482421572" expanded>

Maybe you could add space after try to follow coding standards?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/268#discussion_r482422251" expanded>

Same as try, maybe you could add space here after catch?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/268#discussion_r482424135" expanded>

Perhaps you could add space like this (DukeException e)(spacehere){  ?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/268#discussion_r482425724" expanded>

Perhaps you could add a default case?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/268#discussion_r482426368" expanded>

Perhaps you could add a default case here?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/268#discussion_r482428305" expanded>

Sometimes you have "space" before the "{", sometimes you don't. Maybe you could have a fixed standard? I recommend having "space" before "{".
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/31#discussion_r482440576" expanded>

Perhaps you can use the contains function of java String?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/31#discussion_r482445446" expanded>

Maybe you could reduce the length of this method, as it exceeds 30 LOC? Maybe consider adding method registerTasks. registerCommands, etc.
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/31#discussion_r482468077" expanded>

I think this line is a bit too long as it exceeds 80 characters. Perhaps you could make it into 2 lines?
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/31#discussion_r482478680" expanded>

Maybe you could try avoid "magic" number/string like "Send", 600.0, 400.0? Maybe can consider adding named constants for them?
</panel>

</panel>

<panel type="info" header="### 136. TAN WEI JIE `@tanweijie123` (13 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/407#discussion_r481871878" expanded>

Consider putting an empty line between the description and parameter section
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/407#discussion_r481879383" expanded>

Missing space after Command
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/407#discussion_r481881812" expanded>

Maybe it would sound better if it starts with "Displays"  
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/407#discussion_r481882951" expanded>

Try to avoid using .* import
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/59#discussion_r480643354" expanded>

Extra space after parse
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/59#discussion_r480658203" expanded>

Missing Javadoc for getStatusIcon() and changeIsDone()
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/59#discussion_r480672923" expanded>

Do add an Assertions.fail() for cases testing on faulty inputs. 
Reason being test cases will be marked as pass even if there is no exception caught. 
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/59#discussion_r480679731" expanded>

Change the test method name into three part format. 
testExecute_wrongFormat_ExceptionThrown()

//for subsequent test method name as well. 
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/59#discussion_r480684393" expanded>

I like how you have separated the DukeException into smaller exceptions. Made reading easier! 
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/59#discussion_r480692540" expanded>

Consider adding an empty line between description and parameters section
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/59#discussion_r480696616" expanded>

Can consider using {@inheritDoc} tag to indicate Javadocs inherited from parent class. 
Reason => May not know if unintentionally left out, or supposed to be inherited. 

Prevent alerts from checkstyle also 👍  
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/59#discussion_r480698623" expanded>

Might want to add a single line Javadoc comment for class members / attributes. 
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/59#discussion_r480699721" expanded>

Perhaps can consider using a switch block here? 
</panel>

</panel>

<panel type="info" header="### 137. CHOO XING YU `@xnoobftw` (13 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/339#discussion_r479885998" expanded>

Perhaps OOP could better represent this block of logic? Like having a Command parent class and extending it with multiple logic classes such as AddCommand which extracts the logic out
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/339#discussion_r479886386" expanded>

Maybe a more concise way to do this is for DukeException to extends Exception so you could simply pass the ErrorMessage to the constructor (and super's constructor)
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/339#discussion_r479886640" expanded>

Perhaps making this an ENUM would be more appropriate?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/339#discussion_r479886894" expanded>

I like how you've extracted the logic behind reading and writing to a Storage class! Great job! :D
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/339#discussion_r479887088" expanded>

Perhaps this could become an abstract class since we're not dealing with Task directly (and we wouldn't want the user to accidentally make a Task object either)
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/339#discussion_r479887554" expanded>

Classes that extends Tasks could be packaged into a subpackage eg: main.java.task for a cleaner look :D
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/339#discussion_r479887798" expanded>

Perhaps a more apt return type would be boolean? isDone ? true : false
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/339#discussion_r479888124" expanded>

Maybe it's better to park file_dir and file_name under Storage since it's responsible for reading/writing? :D
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/339#discussion_r479888361" expanded>

Perhaps returning an enum instead of a "T" would be easier for co-dev to understand this function!
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/339#discussion_r479888872" expanded>

Perhaps split the logic in ui.processRequests() into it's subclasses so it'll adhere more to SOLID principles? Especially Single Responsibility Principle!
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/277#discussion_r479893356" expanded>

Perhaps calling it something else other than echo would be more apt? Echo suggests that Duke only echos! Whilst in the method you're doing alot more than just echoing :-)
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/277#discussion_r479893908" expanded>

Perhaps using the UTF representation of a tick is better than a "O"? Since the variable name is TICK
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/277#discussion_r479894317" expanded>

Perhaps the HORIZONTAL_LINE under duke.java can be removed since this is here? :D
</panel>

</panel>

<panel type="info" header="### 138. YAO YUMING `@yuming7144` (13 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/337#discussion_r481081806" expanded>

Don't forget to put punctuation behind each parameter description!
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/337#discussion_r481084209" expanded>

Should we put punctuation behind each parameter description? It might also be nice to start the parameter description with Capital letter:)
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/337#discussion_r481085466" expanded>

How about using a name that has plural form? Would that be better since this is representing a collection of objects?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/255#discussion_r481101198" expanded>

Perhaps the first sentence should start in the form Returns ..., Sends ..., Adds ... (not Return or Returnning etc.)
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/255#discussion_r481102375" expanded>

Remember to add a javadoc comment here!
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/255#discussion_r481104293" expanded>

Remember to put empty line between description and parameter section! Also, perhaps some periods should be added.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/82#discussion_r481096135" expanded>

Nice that yout variable is named to sound like a boolean!
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/82#discussion_r481096415" expanded>

Nice to have the correct indentation for swtich cases!
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/18#discussion_r481109121" expanded>

Don't forget to always put a new line at end of file. Git likes to complain about that.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/18#discussion_r481112721" expanded>

It took me a while to figure out what des is. Perhaps it will be nice to change the name des to a more meaningful name. 👍 
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/18#discussion_r481118693" expanded>

I really like how you keep this shouldExit() as a method and override it in child class!
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/18#discussion_r481119786" expanded>

Nice to have not just DukeException but the specific exceptions!
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/18#discussion_r481121068" expanded>

Nice to follow the coding standard and put javadoc comments in this week's files as well!
</panel>

</panel>

<panel type="info" header="### 139. NG ZHIA YANG `@zhiayang` (13 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/370#discussion_r480133286" expanded>

According to the coding style, case labels inside switch statements should not be indented further.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/370#discussion_r480137121" expanded>

Small issue, missing a space after the `,` here.

(there's other instances of this from the same code in the other classes)
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/370#discussion_r480141904" expanded>

I'm not too sure about this, but should the statement on line 20 be indented 8 extra spaces here?

(really not sure, the style guide is super vague)
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/108#discussion_r480145524" expanded>

minor nitpick, but the `/**` should be on its own line here right?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/108#discussion_r480148136" expanded>

The javadoc description should be on its own line here right?

(ps: i'm not gonna make any more style comments! just not sure how many comments to make >< )
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/108#discussion_r480148867" expanded>

Would this be better phrased as `getTaskDeadline()`?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/108#discussion_r480150392" expanded>

The base class `java::lang::Exception` already has a constructor taking a message, so i think it would be less repetitive to use that, so you can do `super(message)` instead?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/108#discussion_r480154199" expanded>

This method is a little sketchy IMO, so here's some friendly suggestions!

it should make the code cleaner if you used `string.split()` or a `Scanner` to iterate through the tokens, instead of manually checking the length of the input string and doing a manual match

also, i don't think i've reached the part where you call this function yet (i'm just scrolling from the top), but it's kinda weird (imo ofc) for a method to return an exception instead of just throwing it? for this kind of paradigm i think it might be better to use `Optional` in conjunction with an error message, or just make the method throw?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/108#discussion_r480155985" expanded>

it might make sense here to factor out `replyArr[0].trim()` to a separate variable, so it's less repetitive?

also, you might want to use `string.strip()` instead of `trim()`, since the former is unicode compliant (:
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/108#discussion_r480156426" expanded>

also, regex might be a good idea here as well?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/108#discussion_r480159048" expanded>

this is a pretty big code smell! in conjunction with line 116 in NewIoHandler, there's definitely a better way to handle this; as mentioned for the other method in this file, you could look at optionals, or just making the method throw the exception.
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/108#discussion_r480159637" expanded>

this might be a problem since you initialise it statically; if the user deletes the folder for whatever reason in between saves, it might exist at first but disappear later
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/108#discussion_r480165988" expanded>

could these be made `final`?
</panel>

</panel>

<panel type="info" header="### 140. TEO JUN HONG, KENNETH `@angrybunny123` (13 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/420#discussion_r481093131" expanded>

Maybe listing all the imported classes explicitly would be better!
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/420#discussion_r481094026" expanded>

I really like the extensive use of final variables here as it is easier to amend code in the future. There is also less likelihood of typing errors.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/420#discussion_r481096056" expanded>

Maybe we should change the method name to addDdlTask instead to adhere to the Coding Standard
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/420#discussion_r481098539" expanded>

Perhaps it would be clearer if we changed the class name to something like TaskWithTiming so that it is more easily understandable
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/420#discussion_r481099749" expanded>

I like how you did the enumerations, similar to declaring static final variables, it makes it easier to amend code in the future and there is a smaller chance of careless errors this way
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/66#discussion_r481108540" expanded>

Any reasons why you decided to use an empty catch block instead of handling a possible IOException?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/66#discussion_r481111466" expanded>

I like this way of distinguishing an exit command. Perhaps the Javadoc comment could elaborate more, by saying that all commands return true except the exit command.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/66#discussion_r481111810" expanded>

I like that you did the enumerations as it reduces the likelihood of careless mistakes in code!
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/66#discussion_r481112332" expanded>

Maybe this line can be removed
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/66#discussion_r481113827" expanded>

I like that you give descriptive errors that improves user experience!
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/66#discussion_r481114072" expanded>

Maybe inserting a space after the "if" would help adhere to the module coding standard
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/66#discussion_r481115021" expanded>

Maybe it would be clearer if you renamed this method to evaluateDoneOrDelete, as the user input is "done" and not "complete"
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/66#discussion_r481116465" expanded>

I like that you used OOP concepts when writing your exception classes, instead of lumping them all into one DukeException class [which is what I did D:]
</panel>

</panel>

<panel type="info" header="### 141. TAN YING HUI `@ureshiiYing` (13 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/209#discussion_r481882080" expanded>

Perhaps a more intuitive variable name could be used instead of COMMANDS? I was confused as I thought COMMANDS also included add, bye, list etc.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/209#discussion_r481885477" expanded>

Perhaps a clearer name could be used? It could be confusing as the method name does not refer to any object noun that exists. Eg. doesSaveFileExists
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/209#discussion_r481886382" expanded>

Are you missing a javadoc description for this method?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/209#discussion_r481892051" expanded>

I think it will be better if you could split the unit tests into individual test classes for each class you have.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/41#discussion_r481754387" expanded>

I like that how you abstracted out the commands into a Command class, and made it an abstract class.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/41#discussion_r481761723" expanded>

Perhaps this String variable is not necessary as you already have a boolean to represent whether the task is completed.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/41#discussion_r481762421" expanded>

Perhaps a more intuitive variable name could be used, eg. taskDescription? It will match your javadoc comment too.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/41#discussion_r481764576" expanded>

I got confused here, why do you return an empty string if this method is convert the task to a string form that is to be saved?
Update: I see you that you've overridden this method in the child classes. I suggests turning the Task class into an abstract class since a Task is not instantiated, while its child classes are.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/41#discussion_r481768794" expanded>

Wow! I think this is a really nifty customization that you have added to the iP.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/41#discussion_r481783270" expanded>

Perhaps you could've renamed the Duke class to Focus class since you're bot is named Focus Pocus? It is a cute name, by the way.
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/41#discussion_r481798139" expanded>

I realised that you only have one DukeException class that covers all types of Exception that could be thrown. I feel that these Exceptions could be abstracted out, eg. InappropriateDescriptionException, InappropriateCommandException etc, to be more OOP.
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/41#discussion_r481825080" expanded>

Perhaps this should be an Exception as the Command class should represent the commands that the user can input?
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/41#discussion_r481826109" expanded>

I think you had a typo here. It should be is an ExitCommand.
</panel>

</panel>

<panel type="info" header="### 142. ANDREA TAN KER YUE `@andreatanky` (13 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/434#discussion_r481259431" expanded>

Should there be a separation for this import statement from the rest?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/434#discussion_r481261034" expanded>

If i am not wrong, there should be a separation here as well
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/434#discussion_r481263411" expanded>

Method might be too lengthy
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/434#discussion_r481264403" expanded>

Method might be too lengthy
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/434#discussion_r481264923" expanded>

Perhaps getTask(int i) might be more specific
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/434#discussion_r481265261" expanded>

Perhaps getSize() might be more specific
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/373#discussion_r481237767" expanded>

Perhaps UIPrint can be replaced with UiPrint here
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/373#discussion_r481241481" expanded>

Path/File names might sound like boolean variables here
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/373#discussion_r481242770" expanded>

I like the specificity of the error message shown
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/373#discussion_r481243937" expanded>

I suggest having a DukeExceptions class and storing the 'OOPS!!!' message in the class (Makes the message specific to all DukeExceptions)
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/373#discussion_r481244780" expanded>

I like how you created another class for time formatting 👍🏻 
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/373#discussion_r481247551" expanded>

Use of stubs 👍🏻 
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/373#discussion_r481248859" expanded>

Great that there is a method for this
</panel>

</panel>

<panel type="info" header="### 143. AIZAT BIN AZHAR `@aizatazhar` (13 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/319#discussion_r479897031" expanded>

I believe case clauses should not be indented
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/319#discussion_r479897810" expanded>

I think egyptian style braces should be used here
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/319#discussion_r479898685" expanded>

I'm not sure about this but should the variable names be dateTimeArray and dateTimeString instead?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/319#discussion_r479902276" expanded>

 Perhaps you can consider placing 2 comments here to be clear that fallthrough is intentional here?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/319#discussion_r479904825" expanded>

Here the Javadocs opening /** should be on a separate line and there should be a blank line between the description and parameter section
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/319#discussion_r479905072" expanded>

small typo (should be @param instead), and every parameter description should end with a period
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/319#discussion_r479907211" expanded>

Theres an extra whitespace at the function name
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/319#discussion_r479908860" expanded>

I think egyptian brackets should be used here
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/302#discussion_r479913846" expanded>

I noticed that DeadlineException and EventException extends TaskException but the rest extend Exception. Would it be better if all your relevant custom exceptions extend a custom parent exception (e.g. DukeException) so that you can change this method to "throws DukeException" instead?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/302#discussion_r479916891" expanded>

Hmm maybe you can consider naming your test methods with the following format `featureUnderTest_testScenario_expectedBehavior()`
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/302#discussion_r479917893" expanded>

Is this method necessary since it is just calling the overriden `toString()` method in line 65? 
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/302#discussion_r481075198" expanded>

Ah okay I understand what you're trying to accomplish! In that case maybe you could consider making `Task `an abstract class (if your current code allows for it), so that you may declare `stringify` to be an abstract method so you wouldn't need to give an implementation for it in `Task` (this is just a suggestion though, feel free to ignore this!). I do agree that your suggested method name is much clearer 👍🏽 Thanks for the clarification
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/302#discussion_r481079769" expanded>

I meant that for test method names it may be better to describe the test within your method name. One example given is `intDivision_zeroDivisor_exceptionThrown`, which describes to readers that the test is testing for integer division using zero as a divisor, and the expected result is an exception being thrown. 

In this case maybe you can consider naming it `isExitTest_byeCommand_returnsTrue`? Again this is just a suggestion though, apparently the coding standard guide states  that the "Third part or both second and third parts can be omitted depending on what's covered in the test."
</panel>

</panel>

<panel type="info" header="### 144. ANG KAI CHAO `@kc-98` (13 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/430#discussion_r480243613" expanded>

Note the spelling error for "wites" -> "writes"

</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/430#discussion_r480244203" expanded>

For methods that return void, there is no need for the @return tag.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/430#discussion_r480244310" expanded>

For methods that have parameter(s), you have to include @parameter tag.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/430#discussion_r480244724" expanded>

Perhaps a description of what the arraylist is about can be better?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/430#discussion_r480245209" expanded>

I think there should be only one white space between "String" and "getContent()". Perhaps using the checkstyle file will help detect such errors?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/162#discussion_r480209922" expanded>

Should these 2 attribute contain this. too?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/162#discussion_r480220393" expanded>

I think there's a wording error here ("the" -> "that").
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/162#discussion_r480223885" expanded>

Note the camel case format for methods.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/162#discussion_r480225232" expanded>

I like the use of StringBuilder to reduce concat time.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/162#discussion_r480228013" expanded>

Perhaps you could use isBye to be more consistent with your other methods?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/162#discussion_r480229035" expanded>

 You can be more explicit for parameter names so its easier for the code reviewers 👍 
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/162#discussion_r480229735" expanded>

I like the use of ellipsis to simulate loading duration.
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/162#discussion_r482351617" expanded>

It is 4 spaces for next line if you break the @param description.
</panel>

</panel>

<panel type="info" header="### 145. JOSHUA CHEW JIAN XIANG `@josuaaah` (12 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/338#discussion_r480230584" expanded>

Maybe add whitespace after the Exception before the `{`
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/338#discussion_r480231094" expanded>

There should be an empty line between the Javadocs method description and the params.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/338#discussion_r480233270" expanded>

Maybe abstract away all the `split` and other string-processing operations into the Parser class. That would make the Tasklist class much simpler and readable.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/338#discussion_r480233815" expanded>

Final constant names should be capitalised, eg. `HELLO_MESSAGE`, `BYE_MESSAGE`, `ERROR_HEADER`.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/40#discussion_r480204144" expanded>

It would be better if this comment was split into two lines.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/40#discussion_r480205520" expanded>

I like how you declared final constants for the delimiters. I will learn from this for my own code.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/40#discussion_r480205983" expanded>

Might not be necessary to add a blank line to separate the parameters, return values and exceptions.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/40#discussion_r480210031" expanded>

Maybe it would be better if this comment was phrased according to the Javadocs standards, eg.

'''
/** Indicates the type of task */
private final String commandTag;
'''
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/40#discussion_r480210939" expanded>

It would be better if you would indicate in the Javadocs the circumstances in which the DukeException would be thrown.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/40#discussion_r480212908" expanded>

I like how you created an enum class for the error messages. It would make all the errors more organised.
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/40#discussion_r480215894" expanded>

Not sure if the explanation for `parsedInput` is clear enough.
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/40#discussion_r480216774" expanded>

Good that you declared the TICK and CROSS as final variables.
</panel>

</panel>

<panel type="info" header="### 146. CHRISTIAN DRAKE MARTIN `@drake25122000` (12 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/233#discussion_r480119308" expanded>

It would be better if you give a brief description about the parameter of the function.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/233#discussion_r480121461" expanded>

I like how you put spaces between the lines, it makes the code look cleaner and more readable.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/233#discussion_r480129408" expanded>

Perhaps it would be better if you store all these messages into 1 variable, and you can just System.out.println that single variable.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/233#discussion_r480138952" expanded>

LGTM
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/233#discussion_r480148851" expanded>

Perhaps it would be better to name the conditions in the bracket as isEndDateNull.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/69#discussion_r480162082" expanded>

Perhaps it would be better to give these three variables brief descriptions.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/69#discussion_r480167966" expanded>

LGTM

</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/69#discussion_r480169389" expanded>

Nice way to help the user to get to know the commands.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/69#discussion_r480170490" expanded>

Since the System.out.println(" _________________") is often used, perhaps it would be better to make a function to print that line, and you can just recall that function as many times as you want.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/69#discussion_r480180206" expanded>

Perhaps it would be better to store the keyword of every command in some variable, e.g. COMMAND_LIST or COMMAND_BYE , etc.
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/69#discussion_r480182132" expanded>

Perhaps it would be better if you store the "todo", "deadline" and "event" in separated variables, for an example String ADD_TODO = "todo" to improve readability.
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/69#discussion_r480184254" expanded>

I like the way you separate lines, it makes the overall code more readable.
</panel>

</panel>

<panel type="info" header="### 147. ONG LI JIN `@onglijin` (12 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/381#discussion_r481720219" expanded>

Should the method start with lowercase "g"?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/381#discussion_r481728436" expanded>

Perhaps you might not have completed the @return statement?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/381#discussion_r481745865" expanded>

As plural form should be used on names representing a collection of objects, perhaps you could change the name of the variable?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/381#discussion_r481749178" expanded>

Perhaps you might want to change the "removes" to "Removes" to standardize the comment format with the rest?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/381#discussion_r481750421" expanded>

Perhaps you might want to add a comment here describing the method since descriptive header comments for all public class / methods are to be written? 
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/381#discussion_r481757326" expanded>

Perhaps another method can be created to contain ```" | " + (task.getDone() ? 1 : 0) + " | " + task.getDescription() + "| "``` to make the code more readable?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/352#discussion_r481778773" expanded>

I think perhaps you could abstract ```"/ip/src/main/java/Data/TestFile.txt"``` to avoid magic strings?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/352#discussion_r481800446" expanded>

Perhaps the naming of this method can be changed? The usual convention is ```whatIsBeingTested_descriptionOfTestInputs_expectedOutcome```.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/352#discussion_r481803473" expanded>

I think perhaps a space could be added in between these 2 sentences?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/352#discussion_r481806951" expanded>

Perharps you could break at the ```+``` as the statement exceeds 110 characters (soft limit) / 120 characters (hard limit)?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/352#discussion_r481811608" expanded>

Perhaps a switch case could be used here?
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/352#discussion_r481813460" expanded>

Perhaps the method could abstracted into another method to reduce the length of the method ```convertToTask```?
</panel>

</panel>

<panel type="info" header="### 148. WONG WEN WEI ESMANDA `@esmanda3w` (12 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/98#discussion_r481903329" expanded>

Perhaps could start the sentence with a verb in the present tense to abide by the coding standard? (eg Checks whether...)
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/98#discussion_r481907110" expanded>

Perhaps could use a more descriptive name - what is stored? Add stored list?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/98#discussion_r481918713" expanded>

Maybe using the three part format for naming test methods can provide more clarity on what you are testing.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/98#discussion_r481920050" expanded>

Perhaps could change the verb into present tense, such as markAsDone?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/98#discussion_r481923212" expanded>

This method seems to be doing too much work, perhaps can consider abstracting the parsing into the Parser class? I noticed this issue in several other places.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/98#discussion_r481925236" expanded>

Perhaps can consider using the plural form to distinguish between multivalued variables.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/98#discussion_r481927455" expanded>

Perhaps it would be better to name the class as ItemList?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/98#discussion_r481928576" expanded>

Would it be better to separate the similar imports into different blocks?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/91#discussion_r480255192" expanded>

Could consider using isTmpLoadedFromDisk to better reflect a boolean variable?
Slightly unsure what tmp means, perhaps could use a more intuitive name? Maybe temp instead of tmp (assuming it refers to temporary)?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/91#discussion_r480258684" expanded>

Perhaps could use a plural variable name to suggest a collection of objects? I noticed this in several other places too.
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/91#discussion_r480779883" expanded>

Would it be better to use words instead of numbers to distinguish names? It can perhaps give greater clarity :)
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/91#discussion_r481881347" expanded>

Can perhaps use a more descriptive variable name, such as file, since it has a rather large scope? 
</panel>

</panel>

<panel type="info" header="### 149. KOH RAYSON `@raysonkoh` (12 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/419#discussion_r481833185" expanded>

How about renaming `thingsToDo` to `tasks` to convey the same meaning?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/419#discussion_r481837818" expanded>

Would it be better to have a linebreak above this `Override` statement?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/419#discussion_r481839872" expanded>

Would it be better to rename `timeBy` to `deadline`?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/419#discussion_r481845572" expanded>

Could `toBeAdded` be a `private` `final` variable?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/419#discussion_r481846805" expanded>

Could `timeAt` be a `private` `final` variable?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/419#discussion_r481849496" expanded>

Would renaming `toBeAdded` to `newDeadlineTask` be better?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/127#discussion_r481870059" expanded>

Would `print` be a better way to convey the behavior of the `say` method?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/127#discussion_r481876659" expanded>

Would it be better to remove the additional line-breaks in this section?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/127#discussion_r481881011" expanded>

Would naming the `list` variable as `tasks` better convey the contents of the `ArrayList`?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/127#discussion_r481883184" expanded>

`done` might be a little ambiguous. Would a better name be `markAsDone`?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/127#discussion_r481891008" expanded>

Would `toReadableTaskFromat` be a more accurate description of this method?
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/127#discussion_r481892978" expanded>

I am not sure what this variable is for. Similarly for `hour`. Would it be better to rename this variable to be more descriptive?
</panel>

</panel>

<panel type="info" header="### 150. ROBIN HO LIU BIN `@Robinho98` (12 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/369#discussion_r480023161" expanded>

Name should accurately and clearly explain the char, you can consider calling it PENCIL_SYM
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/369#discussion_r480023565" expanded>

Similarly, these emojis could be differentiated, such as ELATED_FACE and RELAXED_FACE
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/369#discussion_r480023988" expanded>

I think this String could be called USER_INPUT, or USER_COMMAND?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/369#discussion_r480024510" expanded>

It is not recommended to use numbers to distinguish between variables (Under Naming in Code Quality)
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/369#discussion_r480025582" expanded>

This method could be better described, such as calling it markAsDone 😃 
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/369#discussion_r480026482" expanded>

Similar to the deadline class, I think the variable name should be changed for clarity
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/369#discussion_r480026908" expanded>

I think it is better to spell description fully, so that it is clearer to others.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/33#discussion_r480013626" expanded>

I think you can include more details on the params, such as the tasks are referring to the user inputted list?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/33#discussion_r480013977" expanded>

I think it should be due, not dued 😄 
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/33#discussion_r480014535" expanded>

I like how you have separate exceptions for the different kind of errors that could have been thrown by the compiler!
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/33#discussion_r480017253" expanded>

I think you can try using the switch statement which could make the code cleaner, as there would not be as many if else statements?
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/33#discussion_r480019452" expanded>

I think you can also try and implement searching the deadline and event by or at respectively, such as searching for dates?
</panel>

</panel>

<panel type="info" header="### 151. WANG LUO `@Asthenosphere` (12 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/201#discussion_r480623049" expanded>

Have noticed this in a few places, the coding standard advises against the use of this if the reference is clear.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/201#discussion_r480627058" expanded>

Lol this is very deep nesting, try to refactor it into multiple &&. Refer to: https://nus-cs2103-ay2021s1.github.io/website/se-book-adapted/chapters/codeQuality.html#avoid-deep-nesting.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/201#discussion_r480628423" expanded>

Maybe a better name can be used for this method and the method below, for e.g. readCliInput vs readGuiInput
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/201#discussion_r480630197" expanded>

Change method name to loadFromStorage for better readability.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/201#discussion_r480632659" expanded>

Can delete the variable done, delete the if else block and simply use a ternary operator in return, i.e. return ... + (isDone ? "1" : "0") + ...
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/201#discussion_r480634400" expanded>

I noticed you have the same method name in Storage, it would be more readable if the names can tell which class they belong to.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/201#discussion_r480635036" expanded>

Same as above.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/35#discussion_r480225426" expanded>

Might be better to change the variable name from d to duke.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/35#discussion_r480226030" expanded>

Would input be a better word compare to echo?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/35#discussion_r480226785" expanded>

Could add JavaDocs to public methods like this, not sure why you explicitly suppressed checkstyle here?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/35#discussion_r480227152" expanded>

Same as above, try to add docs for all public methods.
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/35#discussion_r480228529" expanded>

Probably can remove this one?
</panel>

</panel>

<panel type="info" header="### 152. SEBASTIAN TOH SHI JIAN `@sebastiantoh` (12 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/414#discussion_r479847485" expanded>

Should it be `Returns` rather than `Return`? I noticed the same issue in several other places as well.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/414#discussion_r479848256" expanded>

Should this be split across multiple lines rather than condensed into a single line?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/414#discussion_r479849011" expanded>

Perhaps this method name can be renamed to something like `hasExisting()` to more clearly indicate that it returns a boolean?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/414#discussion_r479849396" expanded>

Should there be a whitespace after `//`? So something like `// Find task ...`
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/180#discussion_r479851966" expanded>

Should this empty line be deleted? I don't think it's necessary to have an empty line separating the javadocs and the class
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/180#discussion_r479852170" expanded>

Should this be `Adds` rather than `Add`?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/180#discussion_r479852319" expanded>

Would `9` be better abstracted out as a constant? I see something similar in the other command classes as well
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/180#discussion_r479852685" expanded>

Perhaps instead of making this an abstract method, you could have a default implementation that returns `false`? That way you minimize code duplication across the different subclasses of `Command` and you'll only have to override this implementation for subclasses in which you want to return `true`
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/180#discussion_r479853034" expanded>

Should there be an empty line between the description and parameter section of the javadocs?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/180#discussion_r479853895" expanded>

Would this class be better named `Deadline` instead of `Deadlines` (singular instead of plural) since it only represents a single task? Likewise for `Events` and `ToDos`
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/180#discussion_r479854736" expanded>

Would it be better to explicitly check `else if (entry.startsWith("[E]"))` here instead of just `else`? Then, in the `else` block, perhaps it may be better to throw an exception since we don't expect the progam to reach that state. 
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/180#discussion_r479855014" expanded>

Would it be better to abstract `[T]` out into a constant variable within the `ToDo` class? Likewise for `[D]`
</panel>

</panel>

<panel type="info" header="### 153. RISHABH PALIWAL `@the-reefshark` (12 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/356#discussion_r480869095" expanded>

Why did you use `this.tasks` instead of `tasks`?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/356#discussion_r480869766" expanded>

Is the function body missing?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/356#discussion_r480870321" expanded>

Should this be removed if not being used?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/356#discussion_r480871077" expanded>

Great job with the styling of this method, looks clean
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/356#discussion_r480872235" expanded>

Should "ToDo" be written as "Todo" instead like the next method?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/356#discussion_r480873279" expanded>

Good use of comments and spacing to make this block of code readable
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/356#discussion_r480874651" expanded>

Tests are very neatly structured and readable
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/117#discussion_r481895374" expanded>

Good job crediting the author of the code fragment that you incorporated
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/117#discussion_r481896292" expanded>

Are the brackets required here?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/117#discussion_r481897347" expanded>

Very minor nitpick but this could be named getSize() instead 
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/117#discussion_r481898027" expanded>

Good idea making use of a switch case to simplify your code
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/117#discussion_r481899701" expanded>

Minor nitpick but could have included a comment `// Fallthrough` like you did in other parts of your code to make it clearer to the reader
</panel>

</panel>

<panel type="info" header="### 154. LI HUANKANG `@MatthiasLHK` (12 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/427#discussion_r483921735" expanded>

In the Duke.java file, line 25, instead of catching Exception in general, you should catch specific Exceptions, so that you can identify the specific error.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/427#discussion_r483921766" expanded>

It is unnecessary to have a line separator, but this is not a major issue, just that it will make the code look more concise and less lengthy.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/427#discussion_r483921943" expanded>

You can consider making the String divider into a constant, as it is being called in both constructors. As it is unchanged in each case, it might be a good idea to make it into a constant.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/427#discussion_r483922119" expanded>

The "+" operator should be in the next line.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/427#discussion_r483922120" expanded>

The "+" operator should be in the next line.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/427#discussion_r483922122" expanded>

The "+" operator should be in the next line.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/64#discussion_r483923383" expanded>

There is no need to declare an empty constructor method. When there is no constructor declared, you can just use new duke() and it will automatically create a duke object with no variables.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/64#discussion_r483923532" expanded>

Why do you catch (Exception)? I think it might be better to catch more specific Exceptions, rather than to catch all Exceptions and its sub-classes.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/64#discussion_r483923688" expanded>

 It might be a better idea to name the variable for LocalDateTime, something more clear, instead of just calling it "by".
For example, "toBeCompletedBy".
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/64#discussion_r483923814" expanded>

You might want to consider using switch and cases to make your code a lot more readable. I also did the same thing as you, using if else, but one suggestion given to me was to use switch cases, which i find it a lot more pleasant to the readers.
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/64#discussion_r483923859" expanded>

It might be better to catch more specific exceptions than the superclass.
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/64#discussion_r483923891" expanded>

There is no need to declare an empty constructor method.
</panel>

</panel>

<panel type="info" header="### 155. HUYNH THAI DUONG `@aidoxe-123` (12 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/355#discussion_r479942772" expanded>

Shouldn't there is an additional 4-space tab here?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/307#discussion_r480010435" expanded>

Isn't `timeDescriptionFormatted` renamed to `fomattedTimeDescription` better?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/307#discussion_r480012252" expanded>

Is there any more descriptive way to replace the name string (e.g command,  input) ?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/307#discussion_r480014853" expanded>

Has the name `end` clearly describe the functionality of this variable?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/307#discussion_r480016175" expanded>

Just my opinion only, I believe renaming `lst` to `tasks` helps to describe the variable better
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/307#discussion_r480017467" expanded>

Due to the coding standard, isn't it be `index++` (the ++ sign is connected to the variable)?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/307#discussion_r480019171" expanded>

Content is not a countable noun, is it?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/307#discussion_r480021389" expanded>

I believe "T", "D" and "E" are kind of magic strings. Is there any way to store them as final variables and then refer to them?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/307#discussion_r480022637" expanded>

Is there any way to make `replacement1` and `replacement2` more descriptive?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/307#discussion_r480024278" expanded>

Is `TITLE` a `final` variable?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/307#discussion_r480025113" expanded>

These lines should be tabbed in, shouldn't they?
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/307#discussion_r480025843" expanded>

I think there should have 1 space between `...Omega manga",` and `newTodo...`
</panel>

</panel>

<panel type="info" header="### 156. TRAN GIA PHONG `@PhongTran98` (12 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/390#discussion_r481098812" expanded>

Should this method name be more specific? I think it is very clear what "it" is here.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/390#discussion_r481100317" expanded>

Should this method name be shortened to "getListSize"?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/390#discussion_r481101241" expanded>

Should the class name be singular instead of plural? I think there are some other class names that could be singular, too.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/390#discussion_r481102649" expanded>

Should this variable sound more like a boolean?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/390#discussion_r481103346" expanded>

Should the class name be PascalCase? So this class name could be "Ui".
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/235#discussion_r480240532" expanded>

Perhaps consider a clearer name for the method's parameter such as "command" or "input"?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/235#discussion_r480244594" expanded>

Should this import statement list all sub-packages explicitly?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/235#discussion_r480244738" expanded>

Perhaps consider changing "split1" into another name like "tokens" or "words"?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/235#discussion_r480246380" expanded>

I think this variable name "split" here and some other places below might could be changed into a more meaningful name, too.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/235#discussion_r480250510" expanded>

Good work for remembering to break lines before they get too long! But shouldn't the line be broken before the operators? I think you could move the trailing plus signs to the beginning of the next line.
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/235#discussion_r480254939" expanded>

Should the merge conflict be resolved before being pushed into the remote repo?
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/235#discussion_r480256242" expanded>

Should the variable name be changed into a more meaningful one like "time" or "date"?
</panel>

</panel>

<panel type="info" header="### 157. CAITLIN JEE SHEN-YI `@caitlinjee` (12 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/325#discussion_r480180225" expanded>

Instead of is the main class of..., maybe you could write represents the main class of...?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/325#discussion_r480180792" expanded>

Since this is a public method, maybe this could have a javadoc?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/325#discussion_r480182155" expanded>

For the switch statement, maybe you could separate it out into another method, or separate out what to do in each case into multiple methods? As this parse() method seems a bit long 
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/325#discussion_r480183190" expanded>

Maybe this method can be named something like getIsFinished() to distinguish between the boolean variable isFinished?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/325#discussion_r480184339" expanded>

Similar with the previous switch statement, maybe you could separate out what to do in these cases into separate methods, such as handleLetterT()? So that it can be neater and shorter
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/325#discussion_r480187436" expanded>

I like the toSave() method, I didn't think of doing this method, good idea!
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/325#discussion_r480188958" expanded>

Should the first letter of the javadoc comments be capital letters?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/22#discussion_r480192461" expanded>

Good idea to use optional, I didn't consider it for the tasks!
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/22#discussion_r480195062" expanded>

This method seems a bit long, maybe you could separate out what to do in each case into different methods? For exmaple a handleList() method.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/22#discussion_r480196041" expanded>

Should this code be removed, since it's no longer in use?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/22#discussion_r480196703" expanded>

Same with the previous switch statement, maybe you could separate out some of the code into separate methods to make this method shorter?
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/22#discussion_r480197619" expanded>

I think your empty has a typo >.<
</panel>

</panel>

<panel type="info" header="### 158. LIEW JING DER DAVID `@davidliew9` (12 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/453#discussion_r481217698" expanded>

could consider being more specific such as 'getTask'?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/453#discussion_r481219907" expanded>

Similarly could also try being more specific here?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/358#discussion_r480963255" expanded>

Perhaps could use a better variable name rather than 'df'
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/358#discussion_r480963662" expanded>

naming of list could be more specific?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/358#discussion_r480965462" expanded>

perhaps a more specific name rather than 'details' such as 'deadline' or 'duedate'
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/273#discussion_r481196853" expanded>

if possible can consider spelling out instead of 'ddl'?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/273#discussion_r481197208" expanded>

could possibly write 'description' rather than 's'?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/273#discussion_r481199334" expanded>

could consider labelling this as a variable instead?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/273#discussion_r481200094" expanded>

could consider more specific method name, such as getTask?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/159#discussion_r480951986" expanded>

Perhaps you could use a more specific name rather than 'string'?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/159#discussion_r480954612" expanded>

Possibly rename 'd' to 'duke'?
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/159#discussion_r480957959" expanded>

Perhaps a more intuitive variable name rather that 'c'?
</panel>

</panel>

<panel type="info" header="### 159. JUAN DAVIN LIE `@juandavinlie` (12 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/470#discussion_r481351339" expanded>

Should taskDataDivided[0, 2, 3] be assigned to a variable that is self-descriptive? It would make the code easier to read and understand.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/470#discussion_r481352119" expanded>

It might be more appropriate to name this variable as taskList instead of returnTaskList since return is a verb and could refer to a function.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/470#discussion_r481352407" expanded>

It is good to separate the description and parameter using a blank line.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/470#discussion_r481354196" expanded>

It may be better to use the Egyptian style when writing if-else statement as it becomes easier to read.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/470#discussion_r481356503" expanded>

May be better to name it searchTaskWithName(String searchString), as it is understandable by just reading it.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/243#discussion_r481329711" expanded>

maybe package and import statements can be put together instead of separating with blank lines? especially when importing from the same package.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/243#discussion_r481331281" expanded>

I think it would be better if the import statements are explicitly mentioned, rather than using *, as it becomes much clearer for others to see and understand.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/243#discussion_r481333170" expanded>

I like how you separate the description and parameter section
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/243#discussion_r481334912" expanded>

Maybe it's better to add the @Override keyword? So that others know that it is overriding an abstract method defined in the superclass.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/243#discussion_r481335405" expanded>

I like how you have made the method names to be self-explanatory. Good job!
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/243#discussion_r481337335" expanded>

Should exit be renamed to hasExited as its a boolean?
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/243#discussion_r481337585" expanded>

I really like how you put superclasses as abstract classes.
</panel>

</panel>

<panel type="info" header="### 160. YONG PING `@yongping827` (12 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/328#discussion_r481235191" expanded>

Is this a typo? `Tockbot` instead of `Tickbot`
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/328#discussion_r481235729" expanded>

Should final variables be capitalized?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/328#discussion_r481236665" expanded>

Maybe leave a line in between imports from different packages. `java.io`, `java.time` and `java.util` all count as different packages. Same for lines 18-24. 
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/328#discussion_r481237473" expanded>

"Writes" instead of "Write". Use this tense for other JavaDoc comments as well. 
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/328#discussion_r481243330" expanded>

To my knowledge, `java.time.LocalDate` does not encapsulate time specifically, only date. The use of the variable name `LocalDate time` in this case might be misleading. May I clarify what form of date or time tracking did you intend to implement?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/172#discussion_r480235758" expanded>

I second the suggestion made by @YangJiyu98 
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/172#discussion_r480237758" expanded>

Perhaps capitalize the beginning of JavaDoc comments? This applies to all other JavaDoc comments as well. 
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/172#discussion_r480238918" expanded>

Repeated suggestion. I second this as well. 
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/172#discussion_r480239303" expanded>

Perhaps group imports based on the packages and leave an empty line between groups?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/172#discussion_r480241215" expanded>

Not part of the Java coding standard, but perhaps remove commented code that I would presume is unwanted?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/172#discussion_r480241653" expanded>

I second that
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/172#discussion_r480241729" expanded>

I second that
</panel>

</panel>

<panel type="info" header="### 161. RITESH KUMAR `@rtshkmr` (12 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/454#discussion_r480704487" expanded>

Hi! Really love the implementation of a HELP case
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/454#discussion_r480707755" expanded>

I think we should camelCase our identifiers, so `bad_cmd` should be `badCmd`. snake_case is reserved for test method naming!

</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/454#discussion_r480709584" expanded>

Really love the comprehensive documentation for your class. Learnt something new from this, good job man :+1: 
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/454#discussion_r480712023" expanded>

I think it's a good idea to always put access modifiers to your fields, for comprehensiveness-sake.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/454#discussion_r480713443" expanded>

JDoc guidelines suggest we should phrase is like so :
`Constructs....`

You might have missed it out for your constructors, but this week's CheckStyle requirement probably means that you already resolved such issues so this might be a moot point I'm making 
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/454#discussion_r480716540" expanded>

Really like your use of Enums to consolidate your Errors in one place, did something similar for mine too!
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/454#discussion_r480746467" expanded>

The use of ChronoField is new to me, thanks for showing this alternative way to handle Date/Time :+1: 
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/338#discussion_r480561075" expanded>

Hi! Just wanted to suggest putting your UI messages in an enums so you can modify them all at one place and the rest of the classes look much neater. Your coding style is so clean already, this should make it even neater :+1: 
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/338#discussion_r480578923" expanded>

Edit: On hindsight, I realise that this review should be focused on coding standard violations but thought it's still a valid suggestion, so leaving it here
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/338#discussion_r480580564" expanded>

Similar to @josuaaah 's point about final constant naming
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/338#discussion_r480587344" expanded>

Second this suggestion. Also think that the Parser class should be responsible for checking User input and throwing appropriate Exceptions from there, so that the TaskList can be responsible solely for TaskList related actions without being concerned about the validity of the Task.
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/338#discussion_r480597659" expanded>

It's amazing that you added a custom serialization/deserialization helper to write an editable text file. This makes your text file editable as long as the format of the file is followed.

I chose to use default serialization libraries for to save the entire TaskList object inside, and upon a new write onto the TaskList, to overwrite that file. This is so that people don't tamper with the saved data file and also prevents Storage class from handling logic related to the the format of the content in the file. I didn't know how to value to your PR, so just giving a possible alternative here.

Example for the deserialisation/load helper:
![image](https://user-images.githubusercontent.com/38996397/91786926-59151180-ec3b-11ea-8988-fe08f4654561.png)

</panel>

</panel>

<panel type="info" header="### 162. SUN YITAO `@sun-yitao` (12 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/422#discussion_r481587081" expanded>

Perhaps this could be an Enum
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/422#discussion_r481587880" expanded>

This pattern looks a little strange.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/422#discussion_r481588423" expanded>

Perhaps a more descriptive name such as byDateTime would be better.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/422#discussion_r481590626" expanded>

Perhaps using a getter and setter here would be better
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/422#discussion_r481591467" expanded>

Perhaps spelling "errorMessage" out in full may be better
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/422#discussion_r481592706" expanded>

This method is doing a little too much work, perhaps can consider using a switch statement and defer the input parsing logic to separate functions
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/422#discussion_r481593441" expanded>

Nit: prefer not having single-letter variables when possible
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/422#discussion_r481593861" expanded>

I like this help section
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/215#discussion_r481580333" expanded>

Can consider moving some of the logic here to another function.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/215#discussion_r481581329" expanded>

Perhaps can consider moving this block to a separate function as well (such as createDirectoryIfNotExists)
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/215#discussion_r481582983" expanded>

Perhaps moving this logic to a function such as toSaveString within Task itself can save some code duplication
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/215#discussion_r481583850" expanded>

Maybe can consider adding a comment here to describe what the unicode characters represent
</panel>

</panel>

<panel type="info" header="### 163. GAN WAN CHENG ISAAC `@orzymandias` (12 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/203#discussion_r481301229" expanded>

Perhaps it could be better you name your test cases as per the following getSaveFormat_Success? 
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/203#discussion_r481302466" expanded>

Maybe if would be clear to specify what format formats? Maybe formatReply?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/203#discussion_r481303917" expanded>

Have you consider removing an indentation level for your case statements?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/203#discussion_r481304846" expanded>

Do you think it will be clearer if your load method follows the name of form loadSomething?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/203#discussion_r481305410" expanded>

Maybe the use of "this" is unnecessary in unambiguous cases?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/203#discussion_r481306003" expanded>

Would it be better for your workflow if you reordered your import statements?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/203#discussion_r481306816" expanded>

Maybe it would be easier to differentiate your variables if you constants had the form SOME_CONSTANT?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/203#discussion_r481313995" expanded>

Perhaps it would be easier to read if you format the braces?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/81#discussion_r481278333" expanded>

Perhaps you could reorganize the import orders java.time.LocalDate?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/81#discussion_r481282687" expanded>

Maybe its better to reorder the exception and task imports?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/81#discussion_r481290701" expanded>

Do you think it would be useful to add a Javadoc for the add method?
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/81#discussion_r481297247" expanded>

This could be an unnecessary new line?
</panel>

</panel>

<panel type="info" header="### 164. YEN PIN HSUAN `@ypinhsuan` (12 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/76#discussion_r480148309" expanded>

Maybe you can make the boolean method sound more like booleans?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/76#discussion_r480149675" expanded>

Should there be javadoc comments here?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/76#discussion_r480158971" expanded>

Perhaps it will be nice to have javadoc comments here since this is a public method?
I noticed the same issue in several other places too
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/76#discussion_r480160381" expanded>

Should there be a full stop?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/76#discussion_r480163117" expanded>

Maybe the default case should be on the next line?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/76#discussion_r480168042" expanded>

Perhaps the header comments for the class is at the wrong place?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/76#discussion_r480168571" expanded>

Maybe the javadoc comment is at the wrong place?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/46#discussion_r480177601" expanded>

Maybe it will be better to make the path `./data/duke.text` a constant?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/46#discussion_r480646734" expanded>

Maybe you can declare the strings as constants? For example `private static final String BYE = "bye"`, and use `case BYE:`
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/46#discussion_r480660666" expanded>

Why did you choose to use `ui.printHello()` instead of `printHello()` (the method right above) ?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/46#discussion_r480671479" expanded>

Might be better to add header comments here?
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/46#discussion_r480683842" expanded>

Maybe you can give a better variable name? Such as `response` or `result`?
</panel>

</panel>

<panel type="info" header="### 165. Wong Zheng Zhi `@Wong-ZZ` (12 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/459#discussion_r481065643" expanded>

Enum names are to be written in PascalCase
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/459#discussion_r481066051" expanded>

There should be an empty line between description and parameter section. Same for some of the other Javadoc comments.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/459#discussion_r481066229" expanded>

There should be a punctuation behind each parameter description. Same for some of the other Javadoc comments.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/459#discussion_r481068480" expanded>

This method is very long, almost 200 lines of code. Should try to create other classes/methods to reduce the length of the method.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/459#discussion_r481069707" expanded>

`case` clauses should not be indented.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/459#discussion_r481070195" expanded>

Enum names are to be written in PascalCase
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/459#discussion_r482724233" expanded>

Oops, sorry I misread the line while I was reviewing it.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/312#discussion_r481049654" expanded>

Import classes are not listed explicitly
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/312#discussion_r481050968" expanded>

There should be an empty line between description and parameter section. Applies for all the other Javadoc comments.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/312#discussion_r481057817" expanded>

Method header comments should start in the form Returns ..., Sends ..., Adds ...
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/312#discussion_r481058677" expanded>

Plural form should be used on names representing a collection of objects
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/312#discussion_r481061515" expanded>

More of a code quality issue, but this method is way too long.
</panel>

</panel>

<panel type="info" header="### 166. TEO ZAY WE, SIMON `@simonteozw` (12 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/323#discussion_r480267690" expanded>

Perhaps you can abstract this logic (and other related logic) to another class (eg. Parser)? To build better abstraction.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/323#discussion_r480268538" expanded>

Perhaps name to something more obvious? Such as wrapMessageWithLines.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/323#discussion_r480269499" expanded>

Perhaps you can declare them as constants and follow the coding violations. eg. static final String TASK_REMOVED = ...
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/323#discussion_r480269703" expanded>

Perhaps you can abstract this out into another class? eg. Storage.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/168#discussion_r480261317" expanded>

Perhaps you can simplify from isCompleted to isComplete?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/168#discussion_r480261496" expanded>

Perhaps you can simplify from isCompleted to isComplete?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/168#discussion_r480263038" expanded>

Perhaps change from saveStorage to saveToStorage?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/168#discussion_r480263366" expanded>

Perhaps you can simplify from isCompleted to isComplete?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/168#discussion_r480263443" expanded>

Perhaps you can simplify from isCompleted to isComplete?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/168#discussion_r480263509" expanded>

Perhaps you can simplify from isCompleted to isComplete?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/168#discussion_r480263981" expanded>

Perhaps you can simplify from markAsCompleted to complete or completeTask?
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/168#discussion_r480264327" expanded>

Perhaps you can simplify from isCompleted to isComplete?
</panel>

</panel>

<panel type="info" header="### 167. LIM ZHENG WEI `@zhengweii` (11 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/255#discussion_r480977975" expanded>

Perhaps similar import statements can be grouped together for readability and consistency?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/255#discussion_r480981573" expanded>

Perhaps a more descriptive name could be used here such as `currentTask`. It may be difficult to know what `curr` means after some time!
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/255#discussion_r480983620" expanded>

Perhaps a new line could be added at the end of the file as well. Git tends to complain when a new line is missing!
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/255#discussion_r480986604" expanded>

Perhaps the comment here could be removed since this is a duplicate of the above!
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/255#discussion_r480989332" expanded>

Perhaps this method could be abstracted out into a few smaller methods such that it is easier to read and debug in the future
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/255#discussion_r480991739" expanded>

Perhaps a constant could be defined in the `Ui` class such that it is easier to print the indentation
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/138#discussion_r480962023" expanded>

According to the coding standard provided, there should be an empty line between description and parameter section
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/138#discussion_r480966023" expanded>

The fully qualified import could be removed here as well since it has already been imported above
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/138#discussion_r480968006" expanded>

For the `case` clauses, there should not be any indentation as well! It should be on the same level as `switch`
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/138#discussion_r480969612" expanded>

Should constants be in uppercase instead? E.g. HORIZONTAL_LINE
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/138#discussion_r480971450" expanded>

I noticed that some of the `if` statements have spaces before the parenthesis while some do not. Perhaps you might want to choose one and standardise!
</panel>

</panel>

<panel type="info" header="### 168. CHAN YONG SOON, KENDREW `@KendrewChan` (11 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/360#discussion_r480772367" expanded>

Good use of abstraction method `printNicelyCollection()`for the `"______"` lines as they may not be used and changed to something else in the future, which makes the code more adaptable. Could possibly use `String.format()` for a slightly cleaner code where you only use `System.out.println(String.format(""))` once
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/360#discussion_r480777367" expanded>

Unintended additional space
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/360#discussion_r480780353" expanded>

TaskList inherits from ArrayList which makes the entire codebase really clean
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/360#discussion_r480782820" expanded>

Might be cleaner to abstract this out as `String isDoneStr = isDone ? '\u2713' : '\u2717'`
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/360#discussion_r480784907" expanded>

CheckStyle convention recommends to import one by one
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/360#discussion_r480787659" expanded>

Would be good to place line break to remove readability
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/360#discussion_r480793109" expanded>

Good use of enums and methods to abstract out the logic to parse the `String input`
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/360#discussion_r480793931" expanded>

Might be cleaner to abstract out the logic into `String variables` to improve readability
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/346#discussion_r480810747" expanded>

Good abstraction of a `Warnings` class
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/346#discussion_r480811939" expanded>

Might want to use at `String.format()` to make it cleaner
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/346#discussion_r480813574" expanded>

Would be good to abstract out the `"_____"` as an echo function, so that it can be changed easily in the future. Good use of line breaks for readability
</panel>

</panel>

<panel type="info" header="### 169. LIM JIN FENG `@jflim98` (11 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/377#discussion_r479938420" expanded>

Should the boolean expression `day < 10` be in parenthesis (as per the coding standards)? I'm not too sure though.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/377#discussion_r479938566" expanded>

Should the boolean expression month < 10 be in parenthesis (as per the coding standards)? I'm not too sure though.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/377#discussion_r479939267" expanded>

Should there be a line gap here?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/377#discussion_r479939705" expanded>

Should this be in camelCase instead? Or maybe declare it as a constant?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/377#discussion_r479940518" expanded>

Is there a need for this line gap?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/377#discussion_r479940840" expanded>

Should this be called "TIME_12H" instead?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/377#discussion_r479940922" expanded>

Should this be called "TIME_12H" instead?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/377#discussion_r479941719" expanded>

I think that case clauses should not be indented?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/377#discussion_r479942262" expanded>

I think that one gap is enough?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/341#discussion_r479948472" expanded>

I think this method is slightly too long?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/341#discussion_r479948755" expanded>

I think that deep nesting should be avoided?
</panel>

</panel>

<panel type="info" header="### 170. LOH JING YEN `@JingYenLoh` (11 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/201#discussion_r480208463" expanded>

Perhaps `this` is unnecessary? The basic coding standard doesn't require this, but is suggested by the [advanced style guide](https://se-education.org/guides/conventions/java/index.html#variables).
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/201#discussion_r480210580" expanded>

Perhaps this newline can be omitted? The style guide [suggests](https://se-education.org/guides/conventions/java/index.html#comments) a certain form for Javadocs, doesn't seem to have a line break between.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/201#discussion_r480211233" expanded>

Like previously mentioned, perhaps the `this.` in this case could be omitted?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/201#discussion_r480213652" expanded>

Perhaps a active tone can be used, as recommended by the coding guide?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/201#discussion_r480215202" expanded>

'''suggestion
     * Runs the Duke program.
'''
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/201#discussion_r480216732" expanded>

Perhaps a Javadoc could be added for this, as it is a public method?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/201#discussion_r480218700" expanded>

'''suggestion
    public void disontinue() {
'''
Perhaps 'discontinue' could be used instead?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/83#discussion_r480290165" expanded>

Perhaps a try with block can be used here, for an auto flush and close?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/83#discussion_r480293194" expanded>

What's the reason for using an `AtomicInteger`? Perhaps a traditional for loop would have sufficed here?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/83#discussion_r480294931" expanded>

Perhaps globstar could be enabled, so that this script doesn't have to change every time a new package is added?

EDIT: I realize this is out of the scope of the review but ya
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/83#discussion_r480596130" expanded>

Globstar is a Bash feature, it does not exist in batch scripts. Sunfire is ancient and really just used for jumping. There might be several nodes with Java 11. Perhaps `xgpe1`?
</panel>

</panel>

<panel type="info" header="### 171. SITI NURUL SYASYA BTE AZMAN `@Syasyazman` (11 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/445#discussion_r480205674" expanded>

Is there a better way to describe the Deadline class in the Javadoc comment? I understand what you are trying to convey but perhaps it would be better to elaborate on it! I personally prefer this representation as its very concise however it might not be intuitive enough for other readers.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/445#discussion_r480209163" expanded>

I like this way of initialising the variables as its very concise. However, perhaps you could consider using "this" to refer to the instance variables? I feel like it would be a more explicit representation of the initialisation in the constructor.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/445#discussion_r480211633" expanded>

Perhaps you could use comments to further elaborate on your "else if" statements' condition? I feel like it would definitely be clearer and will increase readability for readers!
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/445#discussion_r480213074" expanded>

I appreciate how clean your code is in the try blocks! But maybe you could include more spacings and comments between different segments of the code so that it is easier to capture the main gist of your code?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/445#discussion_r480217224" expanded>

I really like how your Parser class separates different functions in a very intuitive manner to readers. However, perhaps you could provide a more detailed naming to the functions? This is so that the functionality of your functions can be more easily inferred by its name.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/445#discussion_r480221485" expanded>

I really like how you did testing of the lowest complexities as it shows that you place focus on the minute details of your code!
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/50#discussion_r480163000" expanded>

I really like how neatly the imports and packages were organised and I could see that the other files have similar structures too!
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/50#discussion_r480170966" expanded>

Perhaps you could start your Javadoc comments with a more preferred form (e.g "Initializes" instead of "Initialize")? I've noticed there are some other similar comments but most of your comments are cleanly written and I like how concise your descriptions of the functions are!
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/50#discussion_r480183979" expanded>

Perhaps the ordering of the tags could be improved (i.e param -> return -> throws) so that its more intuitive to readers?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/50#discussion_r480186714" expanded>

I really appreciate how you managed to pick out minute details such as indenting your string so that its much more readable for readers.
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/50#discussion_r480188854" expanded>

Maybe there could be a way to name them such that it is easy to identify that they are constants? For example, "readableFormat" could be named as "READABLE_FORMAT".
</panel>

</panel>

<panel type="info" header="### 172. TAN YING JIE, DEXTER `@dextertanyj` (11 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/423#discussion_r480668831" expanded>

I think there should be an empty line between the description and parameter sections. I noticed the same issue in a few other places as well.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/423#discussion_r480675031" expanded>

I think we should use the word "Interacts" instead of "Interact"? I noticed the same issue in a few other places as well.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/423#discussion_r480677263" expanded>

I think the indentation level of `case` should be inline with that of the `switch` statement?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/423#discussion_r480686430" expanded>

Perhaps `hasFinished` would be a better name for this method? 
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/423#discussion_r480688944" expanded>

I think there is a missing description for this parameter?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/423#discussion_r480690028" expanded>

I think it would be good to avoid wildcard imports? I noticed this in a few other places as well.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/423#discussion_r480696754" expanded>

I like the check for the trimmed version of the input!
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/378#discussion_r480722042" expanded>

I think it would be good to have an empty line between these two methods?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/378#discussion_r480742342" expanded>

Perhaps an empty line between the description and parameter section would make it easier to read? I noticed this issue in a few other places as well.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/378#discussion_r480926856" expanded>

I noticed that some of such comments are always lowercase while others such as this are in sentence case. I think it would be a good idea to keep to a particular format?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/378#discussion_r480928225" expanded>

Perhaps it may be better to put the class level JavaDoc description above the class declaration statement instead of at the top of the file?
</panel>

</panel>

<panel type="info" header="### 173. SIM BING YANG, GABRIEL `@gabrielsimbingyang` (11 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/285#discussion_r481464222" expanded>

Maybe you could define exactly what is being returned and in what format
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/285#discussion_r481466900" expanded>

Clever!
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/285#discussion_r481467687" expanded>

Perhaps, you might want to consider using a switch-case instead of nested if-else loops so that the code would look neater
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/285#discussion_r481468213" expanded>

Perhaps you can also consider bringing this value (ValidInput.getCmdType(command[0]).name()) out of the loop and assigning it as a String.  For example, 
String s = ValidInput.getCmdType(command[0]).name(). 
If s.equals("EXIT") {
    //do something
}
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/285#discussion_r481468575" expanded>

This could also be another place where you might want to consider using a switch-case loop (=
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/285#discussion_r481468814" expanded>

For example,
switch(currTask[0]) {
case("T") :
    do something
}
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/259#discussion_r481469887" expanded>

I don't think you have the type javadocs for every variable in your code. Some times the code is self explanatory. However, please  check with your tutor on this particular feedback (=
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/259#discussion_r481470584" expanded>

Good documentation!
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/259#discussion_r481470950" expanded>

Perhaps you can consider using a switch-case block instead of multiple if-else loops.  That will make the code more readable
switch(action) {
case("bye"):
    do something
}
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/259#discussion_r481471742" expanded>

I think switching line 59 and 60 would make this section more readable (=
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/259#discussion_r481474012" expanded>

I believe these 2 lines can be combined in a more optimal way instead of 2 abrupt points. Resolve this if I am wrong as I am unable to see the character space limit from github (= 

E.g.
 * Represents a Duke storage that deals with loading tasks from the file and | <<character limit>>
 * saving tasks in the file.
</panel>

</panel>

<panel type="info" header="### 174. PHYO HAN `@Nahoyhp` (11 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/391#discussion_r479931099" expanded>

cases should have the same indention as switch statement
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/391#discussion_r479931727" expanded>

{ } does not follow the convention. Maybe you can add "break();" at the end of lines for each cases.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/391#discussion_r479933384" expanded>

Maybe you forget the { } on this line?
The if cases should follow the same format even if it is one line
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/174#discussion_r479920090" expanded>

Maybe all the different commands listed individually for clarity?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/174#discussion_r479921604" expanded>

convertIntoTasks() seems to suggest a method that will return a Task.
Maybe change the name to addLoadedData or something similar?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/174#discussion_r479922166" expanded>

Maybe we can have a method in Task that will convert the Task status to the desired String format?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/174#discussion_r479922921" expanded>

Maybe you can list out the specific classes that is needed?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/174#discussion_r479926107" expanded>

Maybe you can rephrase the method name as isSameDay()?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/174#discussion_r479929768" expanded>

Isn't it slower to parse the input String inside the hasTime() method compared to parsing it once you receive the user input?

So if you have 10 tasks, you only need to parse once and uses it rather than parsing it inside every tasks.hasTime()

</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/153#discussion_r479910905" expanded>

Any reason why you don't choose to omit the shouldExit() method? 
[Same for other command classes that return false as well]
From my understanding, if the sub-class behaves exactly as the parent class, we can choose to omit it and the system can compile.
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/153#discussion_r479915685" expanded>

This seems to behave differently that the typical toArray() where an ADT(abstract data type) is converted to Array.
Maybe you can name it as toSaveFormat() ?
</panel>

</panel>

<panel type="info" header="### 175. WONG TUN HUA JOSHUA `@murtubak` (11 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/443#discussion_r480302548" expanded>

This class should be put into a package.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/443#discussion_r480303577" expanded>

I agree, destination is not long enough to need to shorten to dest.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/443#discussion_r480304525" expanded>

Should leave a spacing between curly braces and finally.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/443#discussion_r480305563" expanded>

Missing Javadocs.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/443#discussion_r480306606" expanded>

A little inconsistent with the this.at and at. Not that there is anything wrong.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/443#discussion_r480307564" expanded>

Case statements should not have extra indentation. (they should be placed on the same indentation as the switch statement)
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/443#discussion_r480309239" expanded>

Boolean should be made to sound like a boolean. Perhaps doesWriteData? 
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/443#discussion_r480312372" expanded>

Should leave a space before the opening curly braces for the method.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/411#discussion_r480327656" expanded>

Your classes should be packaged for better understanding for the reader.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/411#discussion_r480344755" expanded>

This area looks a little confusing, perhaps could try reducing the amount of nesting occuring?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/411#discussion_r480351739" expanded>

These two methods look very similar, perhaps you could just combine it into one instead of duplicating it?
</panel>

</panel>

<panel type="info" header="### 176. ONG YI JIE MELVIN `@moyj01` (11 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/257#discussion_r482085653" expanded>

Comments are written for the reader and explains what the class Deadline is. Perhaps you could include these in your JavaDocs. Good job 👍 
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/257#discussion_r482086339" expanded>

Since this portion of code is commented out, perhaps you could consider removing it?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/257#discussion_r482090532" expanded>

Perhaps you can consider arranging your imports in lexicographical order to ensure that the ordering of import statements is consistent. Consistent ordering of import statements will make it easier for readers.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/257#discussion_r482098217" expanded>

I noticed that the indentation here is 10 spaces instead of 12 spaces. Apart from this, I believe your indentations are very well done 👍 
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/236#discussion_r482043150" expanded>

Hi Wang Mo, I noticed that some imports are not arranged in lexicographical order. For example, 'duke.exception.InvalidInputException' import could be placed before 'duke.ui.Ui' and 'duke.task.Task' import could be placed before 'duke.ui.Ui'. This would make the ordering of import statements more consistent.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/236#discussion_r482045142" expanded>

To add on, I like the clear and concise Javadocs you have written. Your code is enjoyable to read as well 👍 .
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/236#discussion_r482049034" expanded>

There are some issues with the indentation in this class. For example,  the expected number of spaces should be 8 instead of 12 in line 40.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/236#discussion_r482051419" expanded>

 It appears to me that this import was not used. Maybe you could take a look and check if it could be removed?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/236#discussion_r482055624" expanded>

I noticed that the '/' was not preceded and followed by whitespace in this class. Great job on ensuring that operators are surrounded by whitespace in other classes 👍 
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/12#discussion_r483913605" expanded>

Hi Tiffany, I noticed that some imports are not arranged in lexicographical order. For example, 'duke.tasks.Task' import could be placed before 'duke.util' packages. This would make the ordering of import statements more consistent.
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/12#discussion_r483914728" expanded>

I also noticed that the .class files are in your main folder. If I am not wrong, intellij should auto place the files into the build folder? Perhaps you could take a look into that. Cheers 👍 
</panel>

</panel>

<panel type="info" header="### 177. YANG JIYU `@YangJiyu98` (11 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/294#discussion_r480918754" expanded>

Perhaps you could leave a new line to group your imports, similar to your other files
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/172#discussion_r479909660" expanded>

Maybe can consider having a empty new line to group your package/import statements
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/172#discussion_r479910384" expanded>

You might have missed a whitespace here
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/172#discussion_r479910505" expanded>

You might have missed a white space here
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/172#discussion_r479913561" expanded>

Not sure if this would be necessary as it is simple enough fro a reader to understand
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/156#discussion_r480920244" expanded>

Perhaps you could leave a new line to group your imports?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/146#discussion_r479894697" expanded>

Imported classes should be listed explicitly.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/146#discussion_r479895343" expanded>

I think you missed out on some white spaces in your switch statements
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/146#discussion_r479899627" expanded>

Should final variables be all caps?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/146#discussion_r479901623" expanded>

Also should associated constants be prefixed by a common type name? so that when sorted alphabetically they will appear together.
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/146#discussion_r479902198" expanded>

Missing white space after comma

</panel>

</panel>

<panel type="info" header="### 178. LUM JIAN YANG, SEAN `@seanjyjy` (11 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/430#discussion_r480264291" expanded>

Perhaps for Strings like bye and list, you could use an ENUM class or private static final String variable instead.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/430#discussion_r480266829" expanded>

Similarly, "E" and "D" could be abstracted away to either ENUM or private static final String variables like Event = "E" for more clarity.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/430#discussion_r480269887" expanded>

Hi, I am not very sure however, I think only when you are breaking the line then you would need to use 8 spaces for the next line, however, for method and constructor, I believe you should use 4 spaces instead? Do correct me if I'm wrong! (This applies to the other classes as well)
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/54#discussion_r480278149" expanded>

Perhaps for cases like these where there are long String of texts, you can consider abstracting it out as private static final String or can consider an ENUM class too! Applies for other parts of ur code too!
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/54#discussion_r480279455" expanded>

Slight note for consistency. There seem to be some javadocs with full stops while some without perhaps you can choose to settle on one?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/54#discussion_r480280043" expanded>

Some Javadoc format issue, there should be an empty line between the description and your @tag
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/54#discussion_r480282125" expanded>

there seems to be an awkward space in level 17? not sure if it is my computer issue
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/54#discussion_r480282719" expanded>

I don't think that there should be 4 spaces for the switch-case. I think there should not be an indentation there. Do correct me if I'm wrong
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/54#discussion_r480284580" expanded>

From here it seems like you named your overall Exception as CustomException, would it be better to make it more relevant to the project like perhaps DukeException instead?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/54#discussion_r480286159" expanded>

It might not be too good to catch all Exceptions! This is because you might not know if it is an exception like RuntimeException would could be possibly due to your code itself, so it is a better practice to catch specific exceptions.
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/54#discussion_r480286578" expanded>

variable name should follow camelCase. This applies to the parameters as well
</panel>

</panel>

<panel type="info" header="### 179. GILBERT TAN `@GilbertTan19` (11 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/399#discussion_r479849094" expanded>

Would you consider importing each one of them rather than having *?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/399#discussion_r479849511" expanded>

Maybe this could have been abstracted as method of another class such as TaskList?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/399#discussion_r479849740" expanded>

Would you consider to add  spacing before ">" ?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/399#discussion_r479849932" expanded>

Would you consider adding Punctuation and the detail of the parameter?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/399#discussion_r481066609" expanded>

Would you mind adding punctuation after the description?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/395#discussion_r479839463" expanded>

Would you consider deleting the file as it is no longer used?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/395#discussion_r479843771" expanded>

Would you consider putting this class at some package?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/395#discussion_r479844115" expanded>

Would you consider putting this class at some package?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/395#discussion_r479844651" expanded>

Maybe this line is not needed?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/395#discussion_r479845088" expanded>

Maybe this line is not needed?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/395#discussion_r479845431" expanded>

Maybe we need newline at the end of file?
</panel>

</panel>

<panel type="info" header="### 180. BENNETT CLEMENT `@benclmnt` (11 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/418#discussion_r480018180" expanded>

I like how you separate this long string into different lines, but perhaps it is better to have breaks before operators?
'''suggestion
                "     Noted. I've removed this task: \n"
                + "       " + task.toString() + "\n"
                + "     Now you have "+ taskList.size() +" tasks in the list.\n"
'''
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/418#discussion_r480019631" expanded>

Perhaps it is better to put break before operators? I noticed the same issue in several other places too

'''suggestion
            throw new DukeException("☹ OOPS!!! Please put a number to select a task for the \""
                    + commands[0] + "\" action!");
'''
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/418#discussion_r480020537" expanded>

Perhaps not having any indentation for `case` clauses will help improve readability? 
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/418#discussion_r480021913" expanded>

Perhaps the name could be changed to `isCompleted` to sound like a booleans?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/88#discussion_r480026137" expanded>

Perhaps leave a space after the argument closing parenthesis for better readability? I noticed the same issue in several other places too...

'''suggestion
    public DukeIncorrectTimeFormatException(String message) {
'''
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/88#discussion_r480027624" expanded>

Perhaps `handleUserInputs`  will make a better variable name here?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/88#discussion_r480029130" expanded>

Perhaps you can add a space after each `if` block to help increase readability.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/88#discussion_r480030361" expanded>

Can I clarify that 5 here comes from `length("todo ")` ? If so, perhaps it is better to use `length("todo ")`  or a constant here instead of magic numbers? 

I noticed similar issues in several other places too...
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/88#discussion_r480030886" expanded>

Perhaps `taskList` will give a more clearer context instead of `shelf`?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/88#discussion_r480031675" expanded>

Perhaps you mean `||` here? I noticed the same issue in several other places too..
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/88#discussion_r480032857" expanded>

Perhaps a more intuitive variable name here? If I understand correctly, it is used to determine the index of task in your tasklist, so perhaps `taskIndex` ?
</panel>

</panel>

<panel type="info" header="### 181. YUKI AKIZUKI `@yuki-cell` (11 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/351#discussion_r481412100" expanded>

maybe can delete this extra space 
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/351#discussion_r481413754" expanded>

maybe can delete this extra space?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/351#discussion_r481415758" expanded>

maybe set isComplete false by default so no need to assign isComplete every time making deadline (same applies for other task related class)
ex) new Deadline("task", false, 2020-9-1) => new Deadline("task", 2020-9-1)
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/351#discussion_r481418691" expanded>

this is minor detail but can remove this extra space
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/351#discussion_r481419765" expanded>

can delete extra space
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/351#discussion_r481420701" expanded>

maybe can make each command's string as enum?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/30#discussion_r481386551" expanded>

I think class needs to be part of some package.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/30#discussion_r481389523" expanded>

like how all command is checked
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/30#discussion_r481389825" expanded>

shouldn't it be setDone?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/30#discussion_r481390805" expanded>

need space between Exception and {
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/30#discussion_r481393234" expanded>

needs a space between while and ( 
</panel>

</panel>

<panel type="info" header="### 182. KELVIN WONG JIAN QUAN `@kelvinvin` (11 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/382#discussion_r481153734" expanded>

The cases should be on the same indentation as switch
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/382#discussion_r481157671" expanded>

How about renaming the method to showEmptyList? Not a coding violation, but showNoTask might not be easily understood
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/140#discussion_r481130887" expanded>

You might have missed out the empty line between description and parameter section.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/140#discussion_r481135266" expanded>

This comment is missing the empty line between description and parameter section as stated in the coding convention page. Happens a few times in this class, so I'll just comment once here!
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/140#discussion_r481135548" expanded>

This comment is missing the empty line between description and parameter section as stated in the coding convention page. Happens a few times in this class, so I'll just comment once here!


</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/140#discussion_r481137246" expanded>

This comment is missing the empty line between description and parameter section as stated in the coding convention page. Happens a few times in this class, so I'll just comment once here!
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/140#discussion_r481138743" expanded>

This comment is missing the empty line between description and parameter section as stated in the coding convention page. Happens a few times in this class, so I'll just comment once here!
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/140#discussion_r481138900" expanded>

This comment is missing the empty line between description and parameter section as stated in the coding convention page. Happens a few times in this class, so I'll just comment once here!
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/140#discussion_r481139617" expanded>

This comment is missing the empty line between description and parameter section as stated in the coding convention page. Happens a few times in this class, so I'll just comment once here!


</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/140#discussion_r481139841" expanded>

This comment is missing the empty line between description and parameter section as stated in the coding convention page. Happens a few times in this class, so I'll just comment once here!
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/140#discussion_r481139972" expanded>

This comment is missing the empty line between description and parameter section as stated in the coding convention page. 
</panel>

</panel>

<panel type="info" header="### 183. PEH JUN SIANG `@todoge` (11 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/386#discussion_r481101511" expanded>

Maybe setting `display` as `final` which is also consistent with `date`? 🤔 
Not sure if static is necessary though since there are no static methods in DeadLineTask and it is set as `private`. What do you think?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/386#discussion_r481104643" expanded>

It might be a good idea to move all Ui related components to a `UI.java` class. What do you think? 🤔 
In this case maybe a `UI.welcome()` to print the welcome message?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/386#discussion_r481108124" expanded>

Maybe naming  it something else other than `MyDateTime` so it gives a little more information?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/386#discussion_r481110225" expanded>

Maybe its a good idea to declare a variable like `String task = info[0];` so that it is less ambiguous what info[0] is? 🤔 
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/386#discussion_r481113920" expanded>

Should printing be done in `Storage` and not in the main execution? 🤔 
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/386#discussion_r481117254" expanded>

Would it be better to have a `UI.class` to handle formatting text and display a printable message to the user? For example parsing `storage.get(position - 1).toString()` into a `UI.markAsDoneMessage(storage.get(position - 1).toString())` ? 
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/386#discussion_r481118629" expanded>

Since you have a `getDescription()` method, would it be a good idea to set name as private? Also maybe we can also name it something else rather than `name` so it is more descriptive?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/291#discussion_r481082100" expanded>

It might be better to name this as `canExitProgram` since this is a boolean to check if program has terminated?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/291#discussion_r481083301" expanded>

Perhaps instead of naming it c, name it `command` so its easier to read? 🤔 
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/291#discussion_r481090012" expanded>

Maybe it is better to name this as `getTaskListWithKeyword` instead of an overloaded method so that the functionality of the method can be easily understood without reading the docs? 🤔 
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/291#discussion_r481090558" expanded>

Perhaps this could be named as `getTaskListOnDate` ? 🤔 
</panel>

</panel>

<panel type="info" header="### 184. RACHEL HO XIN YING `@rachel170` (11 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/273#discussion_r482190287" expanded>

Should there be spacing here?
As in `for (Todo...`
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/273#discussion_r482198430" expanded>

Perhaps a space here? 
Between for and the bracket.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/273#discussion_r482199488" expanded>

Perhaps list your imports explicitly?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/273#discussion_r482200929" expanded>

Any reason why you use isFileExist() instead of doesFileExist()? 
I find that it reads easier the other way.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/273#discussion_r482202784" expanded>

Any reason why you abbreviate the method? readTextFile2List() struck me as a method to read a second text file into the list before I realized the short-form.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/273#discussion_r482205407" expanded>

Perhaps you could format your test methods in the following way so that it is easier to understand?
`featureUnderTest_testScenario_expectedBehavior()`
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/273#discussion_r482205940" expanded>

Same thing for this class, perhaps you could rename your test methods so that it is easier to understand?
`featureUnderTest_testScenario_expectedBehavior()`
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/110#discussion_r482222053" expanded>

I like how you did the check for the command's follow-up details!
However, I can't help but notice you use a lot of numbers for your comparison and substrings. Is there any reason you do this instead of using a constant?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/110#discussion_r482225167" expanded>

Like previous, is there any reason you avoid using a constant for your substring() method calls?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/110#discussion_r482228872" expanded>

Yes, if you could write that line before line 58, then the conditional check will no longer be needed and the code will be easier to read.
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/110#discussion_r482232473" expanded>

Any reason why you don't use a constant?
</panel>

</panel>

<panel type="info" header="### 185. MAGUIRE ONG `@maguireong` (11 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/429#discussion_r479866042" expanded>

Maybe line breaks should be used for this line to improve readability?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/429#discussion_r479866095" expanded>

Should single statement conditionals be wrapped by curly brackets or not?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/429#discussion_r479866140" expanded>

Should conditional statements be placed on the same line or separate line?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/429#discussion_r479866184" expanded>

Should logical units within a block be placed together? Maybe separating them by 1 line could improve readability
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/429#discussion_r479866213" expanded>

I like how you use switch statements instead of the usual if-else statements here! 👍
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/429#discussion_r479866405" expanded>

Could this text be too long?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/137#discussion_r479867299" expanded>

I like the use of switch cases here instead of if-else statements 👍
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/137#discussion_r479867422" expanded>

Maybe a line break could be used here to improve readability
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/137#discussion_r479867536" expanded>

Could the length of the line be more than 120 chars?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/137#discussion_r479867728" expanded>

Should javaDocs be added here since this is a rather long line of code?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/137#discussion_r479867902" expanded>

Could this line be more than 120 chars?
</panel>

</panel>

<panel type="info" header="### 186. LAU XIN YEE `@xinyee20` (11 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/347#discussion_r482775922" expanded>

Perhaps it will be better to write the long form of 'tmp' to improve readability? I am not sure what it means
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/347#discussion_r482778614" expanded>

Maybe you can consider adding breaks before some of the dot separator for this block of code to improve readability?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/347#discussion_r482798963" expanded>

The test method name can be more descriptive for readers to understand it better? There's the three part format featureUnderTest_testScenario_expectedBehavior() that you can consider adopting:)
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/347#discussion_r482812785" expanded>

Perhaps you can include in the name what you are serializing to make it clearer?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/347#discussion_r482813861" expanded>

Maybe can use the long form to make it easier to understand, I am not sure what 'ctr' means from this line
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/240#discussion_r482752767" expanded>

Yup, I agree! I think 'hasNoArgs' may be easier to understand than 'isNoArgs' :)
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/240#discussion_r482754930" expanded>

Perhaps 'tasks' should be entirely in uppercase since you marked it as a constant using 'final'?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/240#discussion_r482757412" expanded>

Below you have a function 'add' to add Task t to the ArrayList<Task> task, should the statement still have 'final' inside then since the array list will be changed? It may be less confusing to remove the term 'final'
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/240#discussion_r482762387" expanded>

'done' here could be changed to 'isDone' to sound more like a boolean
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/240#discussion_r482770951" expanded>

I agree, since 'desc' is used in quite a few places, it may be better to use the full name 'description' so that it will be clearer in other parts of your code
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/240#discussion_r482772000" expanded>

Perhaps you can break before the operator '+' to improve readability
</panel>

</panel>

<panel type="info" header="### 187. HE JIALEI `@hjl99` (11 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/77#discussion_r482105391" expanded>

Good to consider and add such a scenario in!
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/77#discussion_r482111868" expanded>

The class has a clean structure and the methods are following SOLID principles well. 
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/77#discussion_r482116975" expanded>

It is nice to see that you have created subclasses of the Command superclass. This guarantees a clean structure as different types of commands can be managed separately. Well done!
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/77#discussion_r482125846" expanded>

Definitely a nice and clearcut way to manage exceptions! 
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/77#discussion_r482130266" expanded>

Maybe consider if you want to differentiate between lowercases and uppercases? And also, if you wish to search for matching elements in the date and time for events and deadlines as well?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/77#discussion_r482176366" expanded>

The namings of methods as such are quite clear and direct :)
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/73#discussion_r481316971" expanded>

Same as hanweic53 has commented, it could be possible to modify this naming a bit so that it might sound clearer :) The descriptions for methods are quite clear though! Nice attempt!
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/73#discussion_r481317947" expanded>

Same as hanweic53 has pointed out. It's a minor issue, but it might be good to take note!
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/73#discussion_r481319664" expanded>

The coding style for this class is especially impressive! Very clean and tidy. Keep up the good work!
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/73#discussion_r481320750" expanded>

Maybe consider indicating "@Override" here?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/73#discussion_r481322448" expanded>

Yes, "tokens" is quite a good name to use! "loaded", however, could seem a little bit confusing.
</panel>

</panel>

<panel type="info" header="### 188. YAO YUAN `@ya0-yuan` (11 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/252#discussion_r480776321" expanded>

I like how you arrange your import statements tidy and in order!
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/252#discussion_r480824710" expanded>

Perhaps you may consider avoid deep nesting (up to 3 levels of indentation) here to make the code more readable.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/252#discussion_r480833518" expanded>

Perhaps you may consider change Task to an abstract class so that the implementation of getType(), getDate() can added later in child classes, instead of returning null value.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/252#discussion_r480835153" expanded>

Perhaps you can consider get rid of so many empty lines.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/99#discussion_r480636635" expanded>

Perhaps use Ui instead of Ui here since all class names must be written in PascalCase.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/99#discussion_r480648969" expanded>

Maybe add an empty line between description and parameter section? I noticed the same issue in several other places too.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/99#discussion_r480665633" expanded>

Perhaps you can consider adding a punctuation behind each description and no blank line between the documentation block and the method.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/99#discussion_r480675644" expanded>

I like how you make all import statements tidy and in order!
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/99#discussion_r480678786" expanded>

Perhaps a more intuitive variable name that will sound more like a boolean?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/99#discussion_r480764609" expanded>

Instead of keep repeating datearr[0].length() & datearr[1].length(), maybe you can consider putting them into a variable to make them more readable.
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/99#discussion_r480769440" expanded>

I like how you arrange classes in to packages!
</panel>

</panel>

<panel type="info" header="### 189. CAO WENJIE `@shadowezz` (11 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/366#discussion_r480279425" expanded>

I think it is recommended for variable names to be in camelCase.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/366#discussion_r480280605" expanded>

This method seems a little too long. Perhaps it is better to break it up into smaller methods.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/366#discussion_r480282372" expanded>

Would it be clearer to create a variable for such whitespaces and reuse it so that readers know their formatting purpose?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/366#discussion_r480286184" expanded>

I think the code quality guide suggests that we don't use numbers to differentiate variables.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/366#discussion_r480288298" expanded>

Maybe a name like getSize will be more descriptive
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/366#discussion_r480290655" expanded>

I think a name like printSuccess will make the method sound more like a verb.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/366#discussion_r480292651" expanded>

This method seems a little long as well, can consider breaking it up. Perhaps it will be clearer to assign variable names to the numbers in this method so that readers can have a better understanding of what they mean.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/56#discussion_r480248736" expanded>

I think imported classes should be listed explicitly even though I understand that you are literally importing everything from the package.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/56#discussion_r480261300" expanded>

Perhaps a method name like getSize is more descriptive.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/56#discussion_r480262548" expanded>

A name like getIndex may make it clearer what you are getting.
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/56#discussion_r480267842" expanded>

I like the additional help command that you have included 👍 
</panel>

</panel>

<panel type="info" header="### 190. YANG YUTONG `@yyutong` (11 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/365#discussion_r482645526" expanded>

I think maybe you can include javadoc to better explain the code.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/365#discussion_r482645833" expanded>

I think you forgot to include javadoc for this class!
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/365#discussion_r482646381" expanded>

I think you forgot to include javadoc in this class!
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/365#discussion_r482646644" expanded>

Should the word 'load' be 'loads' ?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/365#discussion_r482646892" expanded>

Maybe can include javadoc to better interpret the code!
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/365#discussion_r482647226" expanded>

Maybe can include javadoc in the exception classes as well if got extra time!
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/365#discussion_r482647698" expanded>

Should the word 'save' be 'saves'?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/132#discussion_r482725173" expanded>

Maybe the DukeException can be split into more specific exceptions to polish the design?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/132#discussion_r482726892" expanded>

Good job on explicitly stating the visibility of variables!
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/132#discussion_r482728069" expanded>

Maybe can try to include javadoc for methods in task classes as well if there is extra time! 
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/132#discussion_r482729988" expanded>

I really like how to use inheritance to handle different types of command!
</panel>

</panel>

<panel type="info" header="### 191. WANG JUN HAO `@wang-jun-hao` (11 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/449#discussion_r482913158" expanded>

I like how you summarised the functionality of Duke concisely 👍 
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/449#discussion_r482914852" expanded>

I like how the import statements are separated based on their association
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/449#discussion_r482916788" expanded>

Would it be better to just declare sc without the null initialisation? 
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/449#discussion_r482918792" expanded>

Perhaps you can abstract out the common code 
`taskDescription = task.getTaskName();`
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/449#discussion_r482925035" expanded>

Perhaps you can create a separate java file for this enum class since it is used by other classes too (DoneCommand, AddCommand, etc)
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/70#discussion_r482897921" expanded>

Would it be more readable if this was named INVALID instead?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/70#discussion_r482899971" expanded>

Would it be better to name this 'Command' instead of 'Commands'? 'Commands' may suggest to the reader that it is a collection.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/70#discussion_r482900515" expanded>

I like how these import statements are separated based on their associations 👍 
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/70#discussion_r482901506" expanded>

Would it be better to make 'path' a private field for encapsulation purposes?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/70#discussion_r482905399" expanded>

Would it be better to use a while-loop to enhance readability? 
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/70#discussion_r482908031" expanded>

Might be better to name it such that it is a plural since it is an array. Perhaps 'currSubStrings'?
</panel>

</panel>

<panel type="info" header="### 192. SAGAR SUREKA `@sagarsureka` (11 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/415#discussion_r482359440" expanded>

Styling error. Perhaps you could use the full word command as a more intuitive variable name?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/415#discussion_r482360396" expanded>

Naming error. Perhaps you could use anchorPane instead of ap as the variable name?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/415#discussion_r482362539" expanded>

Styling error. Consider following the style specifications for the switch-case block? Specifically, the indentation levels for the cases in your code should be 8 and not 12. 
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/415#discussion_r482368552" expanded>

I like how you have abstracted the Command class. It makes the code much easier to read and understand.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/186#discussion_r482332219" expanded>

Styling error. Consider using the full word "message" for the String variable name. 
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/186#discussion_r482335614" expanded>

Styling error. Boolean variables should be named to sound like booleans. Maybe you can use isClear instead of clear here.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/186#discussion_r482338965" expanded>

Styling error. Consider using full names anchorPane and mainWindow as variable names instead of short forms. 
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/186#discussion_r482341908" expanded>

Great usage of the Optional class!
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/186#discussion_r482343738" expanded>

Styling error. Consider using time as the name for the variable instead of t. It will communicate the meaning in an easier way.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/186#discussion_r482348417" expanded>

Styling error. Indentation for the for-loop brace is incorrect.
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/186#discussion_r482349334" expanded>

This is really nice! 
</panel>

</panel>

<panel type="info" header="### 193. TAN XUAN ZHI `@xxzz-tt` (11 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/340#discussion_r481019317" expanded>

Perhaps can break up this method into shorter methods?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/340#discussion_r481025517" expanded>

Maybe the description of the javadoc can start with 'opens' instead?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/340#discussion_r481026921" expanded>

Maybe extract out some parts of this method to shorten it?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/340#discussion_r481028492" expanded>

Perhaps capitalise 'return' and maybe use 'returns' instead?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/340#discussion_r481029383" expanded>

Perhaps the variable can be final, with a capitalised variable name as a constant?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/200#discussion_r480981904" expanded>

Should the method come right after the documentation? I noticed the same issue in several other places too.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/200#discussion_r480984867" expanded>

Perhaps you can capitalise ’Saves'?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/200#discussion_r480986250" expanded>

Perhaps you can add the description for this method?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/200#discussion_r480988485" expanded>

Maybe the name of this boolean variable can be changed to isCompleted?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/200#discussion_r480989023" expanded>

Perhaps writing 'br.readLine() != null' will make the while loop cleaner?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/200#discussion_r480991937" expanded>

Perhaps this method can be renamed as areAllDone?
</panel>

</panel>

<panel type="info" header="### 194. UDAYAGIRI NIKHILA SAI `@Nikhilalalalala` (11 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/187#discussion_r480026733" expanded>

Perhaps, you could add this file into git ignore as we do not need to push this data.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/187#discussion_r480029221" expanded>

I think this new line is not necessary here. 
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/187#discussion_r480030638" expanded>

The javadoc comment would be great if if could start with a simple present tense verb like 'Gets'.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/187#discussion_r480031243" expanded>

I believe there needs to be a fullstop after the sentence ends.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/187#discussion_r480031567" expanded>

Perhaps, the parameter i could have a better name, like index, or indexOfItemToDelete.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/187#discussion_r480032147" expanded>

Perhaps the newStatus could be better named as a boolean variable like isDoneNow.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/187#discussion_r480032795" expanded>

It would be great if the sentence ended with a period.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/90#discussion_r480017992" expanded>

I think you could leave a whitespace between the slash and the start of the comment.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/90#discussion_r480019846" expanded>

This name sounds like a variable name instead of a method, how about something like hasExit() or willContinue() ?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/90#discussion_r480022089" expanded>

Perhaps the method name could be a verb like convertToFileStringFormat().
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/90#discussion_r481667220" expanded>

Right sure! 

</panel>

</panel>

<panel type="info" header="### 195. HENG JIE KAI JOVEN `@Joven-Heng` (10 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/370#discussion_r481116335" expanded>

Perhaps you can change the name of Deadlines to Deadline? To match the consistency of the class Task. 
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/370#discussion_r481116538" expanded>

Similarly for this, maybe change it to Event?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/370#discussion_r481117318" expanded>

Similarly consider changing to ToDo?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/370#discussion_r481118826" expanded>

Maybe change this to loadTasks? Since there is another method named load for the Task class
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/370#discussion_r481119685" expanded>

Maybe change this to showErrorMessage? Just for clairty ><
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/370#discussion_r481120893" expanded>

Maybe instead of by, you can try dueDate?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/370#discussion_r481121120" expanded>

hmm you can try eventDate for this? Makes it a little more readable!
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/322#discussion_r481093419" expanded>

Perhaps you can write the exception it handles? I.E: throws SparklesException when the file is not found?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/322#discussion_r481095084" expanded>

Maybe you can name it showListSize instead? Since all the other methods are named showLine/ showLoadingError
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/322#discussion_r481095677" expanded>

Maybe you can rename it getListSize since it is a getter ?
</panel>

</panel>

<panel type="info" header="### 196. KERK PEI YONG `@kerkpy` (10 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/102#discussion_r481309366" expanded>

Could the variables for be more descriptive? That is, instead of o, be obj, and instead of c, be cmd
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/102#discussion_r481313693" expanded>

Should they have been private instead of protected?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/102#discussion_r481314598" expanded>

should this have been renamed as tasks?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/102#discussion_r481315288" expanded>

Should there be spacing between +"." ?

</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/102#discussion_r481315584" expanded>

Should there be spacing between if(..)?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/24#discussion_r481300043" expanded>

As mentioned by HCY123902, could this have been a series of if-else statements instead?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/24#discussion_r481303910" expanded>

Should there be a line break between the import statements here?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/24#discussion_r481305110" expanded>

is isExit, rather than this.isExit, sufficient?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/24#discussion_r481306421" expanded>

Should the method be renamed as addTask instead to be consistent? 
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/24#discussion_r481306822" expanded>

As per addItem, could this be deleteTask instead of deleteItem
</panel>

</panel>

<panel type="info" header="### 197. MUNNAMGI HARSHA VARDHAN REDDY `@munharsha` (10 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/256#discussion_r482052801" expanded>

For the javadocs, there should be a spacing between description and @param
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/256#discussion_r482058486" expanded>

This execute function is quite long. Maybe can break up further into parts for better readability?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/256#discussion_r482063488" expanded>

Maybe this can be made protected as there are classes that extend from it so they can directly access this variable instead of using a getter.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/256#discussion_r482065467" expanded>

Maybe can break this block up as there is a lot going on this one block. It was quite difficult to trace through.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/256#discussion_r482066466" expanded>

Should be consistent with naming functions for example adding the public
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/164#discussion_r482069438" expanded>

There should be a gap between the description and @params for javadoc
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/164#discussion_r482070547" expanded>

variable name for arraylist should be in plural form 
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/164#discussion_r482071805" expanded>

For your functions, some of them have a whitespace at the brackets while some does not. I think with the checkstyle one it is preferred to have the whitespace
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/164#discussion_r482072335" expanded>

should declare this as private
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/164#discussion_r482073114" expanded>

Could have better naming for the arraylist
</panel>

</panel>

<panel type="info" header="### 198. PUA XUAN MING `@xnmng` (10 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/66#discussion_r482722293" expanded>

is there any reason you chose to call the Exception 'commandNotFoundexException'? why not call it commandNotFoundException 
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/66#discussion_r482724136" expanded>

since this is a final field should call it SCANNER instead of scanner
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/66#discussion_r482724296" expanded>

might be better to call this method handleException as handle appears to be rather vague
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/66#discussion_r482724375" expanded>

could call this showAddedTask
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/66#discussion_r482724460" expanded>

could call this showTaskList
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/66#discussion_r482724701" expanded>

could call this showDeletedTask
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/66#discussion_r482725219" expanded>

(just a suggestion) perhaps you could store the tasks in the same format as when the user inputs them/when you print the message on the console?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/28#discussion_r482855509" expanded>

could u split this into 2 lines? (improve readability)
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/28#discussion_r482855875" expanded>

remove blank lines
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/28#discussion_r482857370" expanded>

i think it would be helpful if you include what the parser is supposed to do 
</panel>

</panel>

<panel type="info" header="### 199. CHUA EUGENE `@iamgenechua` (10 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/371#discussion_r480089244" expanded>

Do you think it would be good to specify what this `4` represents?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/371#discussion_r480089696" expanded>

Since this if statement has a long condition, perhaps you might want to display each new condition on a new line to improve readability?
I have also seen this case a few other times in your code.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/371#discussion_r480091084" expanded>

Perhaps you might want to store variables containing these magic strings to adhere to coding guidelines?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/371#discussion_r481047100" expanded>

Perhaps it would be better if your booleans can adhere to the coding guide:
e.g. isNotExited
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/164#discussion_r480083940" expanded>

I think this comment could perhaps be rephrases to be aligned with the Java Docs principle 😬
Perhaps you would want to rephrase it to `Parses input from the user`?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/164#discussion_r480085395" expanded>

Perhaps you could add an extra space between `Task` and `{` to follow the coding standards and practices?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/38#discussion_r480087187" expanded>

I like how you separated this long string concatenation into 2 lines, while leaving 8 spaces on the second line! This adheres to coding standards. Good job.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/38#discussion_r482077032" expanded>

since rewrite is a proper word, perhaps you could just name this method as `rewrite`?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/38#discussion_r482078245" expanded>

I like this one-line ternary operator!
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/38#discussion_r482079843" expanded>

Since you have the same string twice, would it be better if you store the string in a variable and then use it in your output and return?
</panel>

</panel>

<panel type="info" header="### 200. JUSTIN TZURIEL KRISNAHADI `@justintzuriel` (10 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/460#discussion_r481940370" expanded>

Shouldn't there be a space after the comma?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/460#discussion_r481941527" expanded>

Shouldn't variable names use camelCase instead of snake_case?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/460#discussion_r481942729" expanded>

Shouldn't the indentation be removed for `case` clauses?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/460#discussion_r481943291" expanded>

Shouldn't there be a space after the comma?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/460#discussion_r481944283" expanded>

Perhaps consider having consistent indentation?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/460#discussion_r481944768" expanded>

Shouldn't variable names use camelCase instead of snake_case?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/460#discussion_r481945822" expanded>

Shouldn't the boolean variable be named isComplete instead?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/460#discussion_r481946682" expanded>

Shouldn't the indentation for wrapped lines be 8 spaces?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/136#discussion_r481977241" expanded>

Would it be better if the method were named getDateFormat?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/136#discussion_r481979981" expanded>

Instead of using nested try-catch blocks, would it be better to use one block to catch different kinds of exceptions and throw the corresponding DukeExceptions?
</panel>

</panel>

<panel type="info" header="### 201. ZENG YU TING `@Jillzyt` (10 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/362#discussion_r481002539" expanded>

Any reason why the string is joined this way? Maybe could the task contain a method to return a customized message instead?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/362#discussion_r481003279" expanded>

I like your use of enum. It makes the code easier to read :) 
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/362#discussion_r481003721" expanded>

Perhaps a more intuitive variable name here? Like dueDate instead of by.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/362#discussion_r481004326" expanded>

Perhaps a more intuitive name here? For example, eventDate for at.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/362#discussion_r481007308" expanded>

Perhaps a more intuitive variable name here? 
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/362#discussion_r483004858" expanded>

Great effort here to format all the different types of DateTime to parse for the user. It is user friendly :) 
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/223#discussion_r480987711" expanded>

Perhaps shorter the line?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/223#discussion_r480988156" expanded>

Perhaps a more intuitive method name here? 
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/223#discussion_r480990592" expanded>

What does hydrate the task mean? 
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/223#discussion_r480994660" expanded>

I like how you implemented the Deadline over here. 
</panel>

</panel>

<panel type="info" header="### 202. WU YUJIN `@SherryWu178` (10 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/181#discussion_r481499717" expanded>

Should this start with "Adds task in the command..."?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/181#discussion_r481500643" expanded>

Should there be an empty line between description and parameter section?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/181#discussion_r481502679" expanded>

Should there be an empty line to separate different import?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/181#discussion_r481502905" expanded>

I like how short and sweet your Parser is!
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/181#discussion_r481505072" expanded>

Should this boolean be named as isExit?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/133#discussion_r481221475" expanded>

Maybe can consider using "switch"?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/133#discussion_r481223632" expanded>

Well-written Javadoc comment that handles the singular and punctuation well.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/133#discussion_r481225292" expanded>

Should this ends with "."?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/133#discussion_r481229475" expanded>

Maybe you miss out the "." here
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/133#discussion_r481231475" expanded>

Did you miss out the "." here?
</panel>

</panel>

<panel type="info" header="### 203. LONG ZELING `@zeling595` (10 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/178#discussion_r481171651" expanded>

Maybe can extract the split part to make it easier to read?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/178#discussion_r481173930" expanded>

maybe it's better use uppercase and underscore to name a constant value?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/178#discussion_r481175401" expanded>

Maybe can consider swap your if and else block to "make the happy path prominent" according to textbook?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/178#discussion_r481178131" expanded>

Maybe can consider save the path in a constant? It makes it easier to access in write to file method (instead of calling file.getPath())
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/178#discussion_r481179662" expanded>

I think "list" would be a better name.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/161#discussion_r481166066" expanded>

Group relevant import statements together.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/161#discussion_r481166540" expanded>

Method name should start with a verb.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/161#discussion_r481166967" expanded>

A JavaDoc for the method will help others to understand this methods better.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/161#discussion_r481167426" expanded>

"+" should be at the start of a new line
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/161#discussion_r481167719" expanded>

maybe savedFile is a better name?
</panel>

</panel>

<panel type="info" header="### 204. JERRYL CHONG JUNJIE `@jerrylchong` (10 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/321#discussion_r479869096" expanded>

Maybe a more detailed name for date2 can be used?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/321#discussion_r479870667" expanded>

I think there is a typo, "add a Command" should be "add an Event"? 😅
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/321#discussion_r479870854" expanded>

Did you miss a space before this line?
Cause you had spaces for your other JavaDocs comments :)
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/321#discussion_r479880966" expanded>

I think names of Collections should be plural?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/321#discussion_r479881219" expanded>

Should the "case"s be on the same indentation as "switch"?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/321#discussion_r479881967" expanded>

Maybe a more detailed name for date2 can be used?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/62#discussion_r479913299" expanded>

I think pathname should be in camelCase?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/62#discussion_r479914264" expanded>

Maybe could be a bit clearer on what 'by' is? (e.g. byDate)
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/62#discussion_r479914690" expanded>

Similar to Deadline, maybe be a bit clearer on what 'at' is?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/62#discussion_r479915992" expanded>

I like the readability of the if-else statements here. It's easy to look for a specific command and see the code for each one :)
</panel>

</panel>

<panel type="info" header="### 205. IAN YONG YEW CHUANG `@ianyong` (10 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/213#discussion_r481208656" expanded>

Hi, I don't think using wildcard imports is better. The following line can be found in the CS2103T Java coding standard:
> Imported classes should always be listed explicitly.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/213#discussion_r481212853" expanded>

Perhaps this could be rewritten to be in line with the coding standard?

> In method header comments, the first sentence should start in the form `Returns ...`, `Sends ...`, `Adds ...` (not `Return` or `Returnning` etc.)
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/213#discussion_r481217890" expanded>

Consider adding header comments for all public methods as suggested in the style guide; there are a few public methods which do not have comments.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/213#discussion_r481226018" expanded>

Should the imports be listed explicitly instead?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/213#discussion_r481228747" expanded>

Perhaps a more descriptive variable name could be used since the scope of this variable is not that small? Same for some of the other one letter variables.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/213#discussion_r481230737" expanded>

Would it be possible to rewrite this as a verb?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/156#discussion_r481238536" expanded>

Should an empty line be left between the description and parameter sections?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/156#discussion_r481240968" expanded>

I believe that the coding standard states that `case` clauses should not have indentation.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/156#discussion_r481241859" expanded>

Should this documentation block be moved down to right before the class?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/156#discussion_r481246978" expanded>

I like your use of a guard clause here! It makes the happy path much more clear.
</panel>

</panel>

<panel type="info" header="### 206. CHEN YUMING `@yu-ming-chen` (10 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/460#discussion_r481192463" expanded>

Can be abstracted out as a Parser class
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/460#discussion_r481192833" expanded>

Can be abstracted out under UI
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/460#discussion_r481193041" expanded>

Can be abstracted out as Storage class
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/460#discussion_r481194085" expanded>

Can be abstracted out as another class
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/47#discussion_r481178821" expanded>

Good use of Optional class here
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/47#discussion_r481179104" expanded>

Maybe can spell out "message" here
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/47#discussion_r481182226" expanded>

Can spell out "description".
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/47#discussion_r481185187" expanded>

Maybe overriding is not necessary as it is same as Task superclass 
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/47#discussion_r481185948" expanded>

onList can be a bit misleading, can use printList/printCurrentList
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/47#discussion_r481186412" expanded>

onFind can maybe be replaced with printSearchedList/showFindList
</panel>

</panel>

<panel type="info" header="### 207. SHAWN NG YONG KWANG `@shawn-nyk` (10 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/239#discussion_r481638567" expanded>

Perhaps the first word should be "Constructs", as in a verb ending with an "s"? I noticed this similar issue for a few other Javadoc comments but most of them do follow this coding standard rule, which is great!
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/239#discussion_r481641894" expanded>

Should the lines be broken before the <code>+</code> operator rather than after?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/239#discussion_r481648161" expanded>

Should underscores be inserted to separate the words in the variable name i.e. "BY_OR_AT"?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/239#discussion_r481650063" expanded>

Should the variable name be "HOME" with all uppercase letters since it is a constant?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/239#discussion_r481653747" expanded>

Should the variable name have a plural form (e.g. "tasks") since the variable represents a collection of objects?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/101#discussion_r481681636" expanded>

Should the variable name be a noun (e.g. "stringToFind") rather than something that starts with a verb?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/101#discussion_r481687115" expanded>

For the "that" variable, perhaps a different variable name - one that explains the variable to the reader accurately - could be used instead?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/101#discussion_r481695632" expanded>

Should the variable name here be in plural form, as in "results", since it represents a collection of objects?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/101#discussion_r481706972" expanded>

For such a variable name, and for its purpose and description in your code, would a boolean be a more appropriate type for this variable?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/101#discussion_r481714065" expanded>

Should this method be named "getTask" so as to inform the reader what exactly it is getting? I noticed that other methods here such as <code>removeTask()</code> and <code>getSize()</code> are named in a way that makes it clear to readers what they do, which is great, and perhaps renaming this method would be consistent with this style as well.
</panel>

</panel>

<panel type="info" header="### 208. KHOR JING QIAN `@khor-jingqian` (10 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/239#discussion_r479896583" expanded>

Is it possible to further abstract the code? This style of deep nesting is not encouraged and you might have to organize the code again.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/239#discussion_r479898923" expanded>

Would it better adhere to coding standards if you added white spaces before the "(" and after the ")" ? This style appears quite often in your code so hopefully you take a look at it again.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/239#discussion_r479906109" expanded>

Do you think you can abstract this expression? This is rather complicated to look at if the person is looking at the code for the first time. You might consider:

boolean isInputTodo = parser.isTodo(input);
boolean isInputEvent = parser.isEvent(input);
boolean isInputDeadline = parser.isDeadline(input);

This is to further enhance the readability of the code, but this is just a small comment.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/207#discussion_r479867136" expanded>

Should there be punctuation behind the parameter description?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/207#discussion_r479869898" expanded>

Would it be better to list out all the imports for your command package? This might be an issue on Intellij's side as they group together imports when there are several
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/207#discussion_r479870948" expanded>

Should this TODO be empty? I think you may have missed this after completing the work
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/207#discussion_r479871461" expanded>

Should you use "Tries" instead of "Try" to conform to coding standards?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/207#discussion_r479872390" expanded>

Is this a typo?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/207#discussion_r479872940" expanded>

Is this a typo?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/207#discussion_r479875839" expanded>

Is the implementation meant to be as such?
</panel>

</panel>

<panel type="info" header="### 209. Hans Sebastian Tirtaputra `@hansebastian` (10 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/340#discussion_r479920186" expanded>

I think there should be spaces between each variable here
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/340#discussion_r479921353" expanded>

I think the naming of the array here should be in camelCase?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/340#discussion_r479922158" expanded>

I think java reserved words should be followed by a white space
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/340#discussion_r479922804" expanded>

Similarly, I think its lacking some spacing here for the try and catch statements
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/340#discussion_r479924323" expanded>

I think a newline should be included here?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/340#discussion_r479925007" expanded>

I think test method naming should be in camelCase? Likewise for the other test methods names
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/340#discussion_r479925748" expanded>

I think the indentation on this switch statement is not in line with the coding standard
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/340#discussion_r479926486" expanded>

I think it would be better not to use wildcard imports
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/231#discussion_r479931010" expanded>

I think the + operator should be on line 32 instead?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/231#discussion_r479931371" expanded>

Likewise for this + operator, I think it should be on line 20 instead?
</panel>

</panel>

<panel type="info" header="### 210. LI SHUO `@li-s` (10 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/116#discussion_r482836314" expanded>

was this file in a package?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/116#discussion_r482837243" expanded>

Could the exception e be mroe descriptive?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/116#discussion_r482838698" expanded>

What does name refer to here? the command (todo, deadline), or the description of the task?

</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/74#discussion_r479964304" expanded>

should there be an empty line after the comments, before the @params?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/74#discussion_r479968442" expanded>

Should the class be declared public? (could it be just class Duke { ......} )
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/74#discussion_r479968908" expanded>

Should there be an empty line after class declaration?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/74#discussion_r479969499" expanded>

Should there be empty line after comment, before @params?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/74#discussion_r479969930" expanded>

Should there be an empty line here between javadoc and method?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/74#discussion_r479970615" expanded>

Should variable names be more descriptive?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/74#discussion_r479973409" expanded>

Should there be empty line here

</panel>

</panel>

<panel type="info" header="### 211. LI JIANHAN `@jianhandev` (10 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/385#discussion_r481246927" expanded>

Consider separating imports into groups, and in lexicological order.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/385#discussion_r481248111" expanded>

The case line should be at the same indentation level at the switch statement.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/385#discussion_r481249181" expanded>

"Mark" should be "Marks"
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/385#discussion_r481250049" expanded>

Consider separating different logical units with a line break.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/172#discussion_r481219561" expanded>

From the java coding standards: "Logical units within a block should be separated by one blank line."
Consider leaving a line before the try block?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/172#discussion_r481221125" expanded>

Variable name could be more descriptive.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/172#discussion_r481222936" expanded>

This block is generally abit chaotic, perhaps add in line breaks to separate different logical units?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/172#discussion_r481226196" expanded>

Javadocs:
- "show" should be "Shows"
- add a full stop after the function description
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/146#discussion_r481193102" expanded>

Perhaps return an immutable object of the class? (i.e. Instead of mutating the value of isComplete)
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/146#discussion_r481214406" expanded>

Consider importing in lexicological order.
</panel>

</panel>

<panel type="info" header="### 212. NG ZHEN TENG `@ngzhenteng` (10 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/190#discussion_r481143612" expanded>

Maybe a more descriptive name for the variable c such as commandObj could be used?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/190#discussion_r481145908" expanded>

I like how your code checks and maintains the state of the Duke application. This can help prevent the program from behaving in unexpected ways.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/190#discussion_r481151738" expanded>

I like the addition of this feature, it could come in handy for the user.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/190#discussion_r481159275" expanded>

Maybe it would be better to give a short explanation on how the command is executed?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/190#discussion_r481163582" expanded>

Perhaps more information could be given to explain that Command is a super class for the various types of Command objects, and that the role of a Command object is to create the correct type of Task and pass it to Ui for the correct string output to be printed. 
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/190#discussion_r481164031" expanded>

I like how you have used a class to encompass all types of commands as this is neater and more scalable.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/89#discussion_r481126503" expanded>

@w-yeehong that is a great point. I agree with what w-yeehong has mentioned, maybe you could remove the parameter completely as the method setDone is self-explanatory and  a boolean argument may not need to be passed.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/89#discussion_r481128331" expanded>

I like how the indentation of the value for cssLayout makes it neat and easy to read.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/89#discussion_r481132244" expanded>

It is great that only the necessary import statements are written and * is not used to import everything. 
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/89#discussion_r481135371" expanded>

I like that the JavaDoc comments are concise and informative
</panel>

</panel>

<panel type="info" header="### 213. CHEW SONG YU `@sogggy` (10 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/188#discussion_r480880955" expanded>

Maybe there can be some comments for this private method? Just to give viewers some idea on how the bot is initialized 👍 
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/188#discussion_r480883767" expanded>

Not a huge issue, but since searchParameter has a _this_ reference, perhaps it is better to standardize results and searchParameter to point from _this_ as well! 😄 
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/188#discussion_r480890279" expanded>

perhaps this method could be named more explicitly, for e.g. parseStringToLdt, so that more context on what the method is about could be given! 😄 
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/188#discussion_r480949641" expanded>

I think you might have missed out a javadoc for this method! This applies for your Event class as well.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/188#discussion_r480952047" expanded>

A very small issue, but perhaps the junit libraries should be imported before the dependencies needed to run your tests (i.e. junit imports before your exception imports).
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/175#discussion_r480978447" expanded>

Perhaps this variable could be a little more descriptive!
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/175#discussion_r480979088" expanded>

Small issue, but perhaps the carryOn boolean can be named as 'isCarryOn' or 'shouldCarryOn' to sound more like a boolean!
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/175#discussion_r480980484" expanded>

For the parse method, it might be a better idea to split the implementations which parse individual commands into another method, this way SLAP could be achieved. 😄 
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/175#discussion_r480982116" expanded>

Perhaps it is a better idea to specify the type of _lines_ to be a List<String> instead, in case further into implementation a different kind of list structure is used to store the information!
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/175#discussion_r480982854" expanded>

Since this getter gets the _lines_ attribute, maybe getLines() is a clearer name for this method 👍 
</panel>

</panel>

<panel type="info" header="### 214. TOH HONG XIAN `@raythx98` (10 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/409#discussion_r479767946" expanded>

Is the nesting too deep? Consider abstraction to your other classes
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/409#discussion_r479768352" expanded>

Can we assume that all thrown exceptions are only due to invalid index (and not other unchecked exceptions)?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/409#discussion_r479768425" expanded>

would a naming like "markTaskAsComplete" be clearer?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/409#discussion_r479768521" expanded>

Unnecessary indentation
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/409#discussion_r479768777" expanded>

Since ToDo is-a task, would a name like ToDo be sufficient?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/36#discussion_r479764884" expanded>

Is it necessary to wrap it in 3 lines? line 36 should be indented a further 8 spaces, I notice this in other places too
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/36#discussion_r479765197" expanded>

Is this needed?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/36#discussion_r479765807" expanded>

Is there a better variable name such as gibberishInput ?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/36#discussion_r479766348" expanded>

Is the overqualified 'this' necessary? https://se-education.org/guides/conventions/java/index.html under variables
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/36#discussion_r479766428" expanded>

LOL
</panel>

</panel>

<panel type="info" header="### 215. MUHAMMAD NIAAZ WAHAB `@GeNiaaz` (10 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/365#discussion_r482121215" expanded>

Mayb you'd like to print out the full formatted date and time in your expected output?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/365#discussion_r482175434" expanded>

Perhaps this line needs no comments, it is quite self explanatory 👍 
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/365#discussion_r482192556" expanded>

If you are declaring this as final, you may want to consider naming this in all caps separated by underscores.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/17#discussion_r482028901" expanded>

Is it entirely necessary to have a duke package within another duke package? 🤔 
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/17#discussion_r482031826" expanded>

I think you forgot to add the timing in here !! 🤓 
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/17#discussion_r482037370" expanded>

If this is meant to be an error message, maybe it could throw an exception instead? 😀 
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/17#discussion_r482038478" expanded>

Seconded!! Also agree on the succintness of the comments, keep it up! 👍 
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/17#discussion_r482039193" expanded>

Hmm, this seems to be a constant, maybe you'd like to uppercase it with underscore? 💇 
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/17#discussion_r482042697" expanded>

Perhaps you could rename it to "isLocalDateFormatted" instead, since the Date is definitely present, is just a matter if it is formatted correctly or not. Just a suggestion!! You do what you think is right 😺 
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/17#discussion_r482045035" expanded>

I appreciate the humour here!! Though could the text be contained inside the Ui / Gui class instead for better abstraction? 💯 
</panel>

</panel>

<panel type="info" header="### 216. ZHANG SHENG YANG `@YuunoKun` (10 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/266#discussion_r482198437" expanded>

I think not having a newline at the end of the file might not pass the checkstyle.
(If you use the IDEA checkstyle plugin, the first line of this .java file will have red lines on it.)
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/266#discussion_r482201501" expanded>

Perhaps you might want to break this line for better readability(Too many characters):
        `return "[" + getTaskType() + "]" + "[" + getStatusIcon() + "]" `
              `+ description + " " + "(by: " + formatDate() + ")";`
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/266#discussion_r482202572" expanded>

Missing public class header comments.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/266#discussion_r482205004" expanded>

Perhaps a name that has a better meaning is more suitable for arrays :)

(It has to be plural too)
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/266#discussion_r482208045" expanded>

No header comments for public class and methods in this file. :(
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/11#discussion_r482174332" expanded>

Perhaps try to use 
`/**`
` * Represents a parser that parses String inputs in the accepted formats into a`
` * {@link DukeDateTime} object.`
` */`
if the comment is too long and could not fit in one line? (Might not be a violation)
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/11#discussion_r482179762" expanded>

I think maybe the name of the `String[] arr` can be more meaningful.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/11#discussion_r482181557" expanded>

Perhaps breaking the line from `String commandName,` so the nextline starts with `String arguments) throws...`would be better in this case?

(CodingStandard: Break after a comma or before an operator)
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/11#discussion_r482185852" expanded>

Maybe `parsedInputParts` is a better choice for this type of arrays since it needs to be plural.
Other `case` code blocks also have the same issue.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/11#discussion_r482189466" expanded>

Perhaps `getNumOfTasks` as the method name is a slightly better choice.

(CodingStandard: Names representing methods must be verbs and written in camelCase.)
</panel>

</panel>

<panel type="info" header="### 217. MICHAEL SETIA ATMAJA `@michael-setia` (10 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/451#discussion_r482697159" expanded>

I think there should be a space after the comma?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/451#discussion_r482707591" expanded>

Yes, I also found this in other classes i.e. method invalidInput() in Duke class perhaps can also be changed to a verb?


</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/451#discussion_r482709783" expanded>

I like how you use String.format() here. I think it looks cleaner than using "+" for the strings concatenation 😄 
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/451#discussion_r482711935" expanded>

Maybe the attribute name "at" can be changed to a noun like "date" or "eventDate" to enhance readability?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/451#discussion_r482714125" expanded>

I think the import statements can be grouped based on their package and add one blank line between the groups to enhance readability?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/416#discussion_r482775984" expanded>

I think "splitList" can be changed to something like "splittedString" to be more specific?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/416#discussion_r482780230" expanded>

Maybe "splitList2" can be replaced with something like "deadlineDate" to make it more intuitive to the reader?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/416#discussion_r482783881" expanded>

I noticed a lot of the method's name are not verb. Perhaps they can be changed to verb to enhance readability? For instance, maybe "byeCalled" can be changed to "handleByeCommand" instead?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/416#discussion_r482791678" expanded>

Perhaps the imported class should be listed explicitly without using "*"?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/416#discussion_r482795202" expanded>

Maybe "deadline" can be replaced with other name like "deadlineDate" to avoid confusion with the class name?
</panel>

</panel>

<panel type="info" header="### 218. YAN BINGTAO `@yanbingtao` (10 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/304#discussion_r482799693" expanded>

Good abstraction of a `DukeException` class
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/304#discussion_r482805111" expanded>

Maybe you want to rename the variable "by" as something like "deadlineTime"/"deadlineDate"? It could be clearer and easier for a person who doesn't know Duke Project to read 😄 
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/304#discussion_r482805766" expanded>

I like the way you use ENUM to differentiate task types 👍 
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/304#discussion_r482810128" expanded>

You may want to consider to use "eventTime" instead of "at"? Personally I feel it's more meaningful
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/304#discussion_r482820116" expanded>

Your switch structure looks good. There is no indentation for `case` clauses, and it comes with the default 👍 
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/299#discussion_r482825083" expanded>

you may want to delete away these empty lines so that it will look neater? 😄 
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/299#discussion_r482826001" expanded>

Yes, I agree with zhuoyao, it sounds more like booblean variable
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/299#discussion_r482829669" expanded>

I think names representing methods should use verbs, here, you may consider changing to names like "getDoneString", etc
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/299#discussion_r482830574" expanded>

You may want to use "getSize" to name this method? It will be clearer to show others what this method is doing.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/299#discussion_r482831452" expanded>

And you may consider to use "final" to avoid changing this constant accidentally in the future
</panel>

</panel>

<panel type="info" header="### 219. LI BEINING `@dearvae` (10 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/333#discussion_r482052200" expanded>

hmm, i feel its confusing to use verb as a start of variable name, as normally we use verb to start a method name.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/333#discussion_r482056681" expanded>

hmm i feel this method is redundant
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/333#discussion_r482058777" expanded>

the vairable name should be all captical letter if it is final?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/333#discussion_r482061098" expanded>

instead of print the task list, this method actually just return the printing message.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/333#discussion_r482063581" expanded>

i feel "printByeMessage" maybe a better naming
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/333#discussion_r482064391" expanded>

return type is missing
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/110#discussion_r482038757" expanded>

why is this method empty?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/110#discussion_r482044026" expanded>

Naming for final should be all capital letter?

</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/110#discussion_r482044827" expanded>

you can use ++ length on here directly instead of writing line 48

</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/110#discussion_r482045534" expanded>

maybe you can write this outside the for loop before line 58?

</panel>

</panel>

<panel type="info" header="### 220. NICHOLAS GIANCARLO CANETE `@nicholas-gcc` (10 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/406#discussion_r482053098" expanded>

Try not to shorten variable names so that they can be more easily understood
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/406#discussion_r482054241" expanded>

Again, try not to shorten variable names. For boolean variable names, name them in the format is____ instead
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/406#discussion_r482054955" expanded>

should be case BYE, case LIST, case FIND, etc.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/406#discussion_r482056413" expanded>

Try to follow camelCase and avoid abbreviations for variable names
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/406#discussion_r482057151" expanded>

Name it File variable as file. f is supposed to be used for scratch variables (i.e. short term use)
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/406#discussion_r482057467" expanded>

Use a more meaningful argument name
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/45#discussion_r482043401" expanded>

Try to add JavaDocs here if you have the time, as well as the other private methods in this class
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/45#discussion_r482047001" expanded>

Small thing but if you consider goodbye as one English word, method should be named goodbye() instead
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/45#discussion_r482049278" expanded>

Try not to use abbreviated or shortened argument name msg
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/45#discussion_r482050926" expanded>

Try not to use shortened names for variables so that the variable name makes more sense
</panel>

</panel>

<panel type="info" header="### 221. SRUTHI SARAVANAN `@Sruthisarav` (10 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/310#discussion_r482053214" expanded>

Could have better names for your variables. I have no idea what str does just from the name. Or maybe you could add a comment to explain what it does...?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/310#discussion_r482054598" expanded>

needs a space before '{'
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/310#discussion_r482054910" expanded>

Needs a space before '{'
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/310#discussion_r482055144" expanded>

Needs a space before '{'
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/310#discussion_r482055310" expanded>

Needs another space here too
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/310#discussion_r482055548" expanded>

Another space you forgot to add here.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/310#discussion_r482055896" expanded>

This seems like a constant. Might wanna add 'final' to it as well.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/305#discussion_r481921248" expanded>

You could combine lines 77 and 78. There is no need to separate them
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/305#discussion_r481923036" expanded>

Lines 48 to 50 could have been in a single line.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/305#discussion_r481923289" expanded>

Lines 59 to 61 could have been in the same line too
</panel>

</panel>

<panel type="info" header="### 222. LAU JUN HAO ASHLEY `@Ashley-Lau` (10 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/147#discussion_r480282612" expanded>

A space is needed between the description of the method and the tags following it.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/147#discussion_r480284469" expanded>

Method name is slightly vague. Could perhaps be renamed to processAsDone.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/147#discussion_r480287600" expanded>

You could perhaps provide an alternative method description as this description is not indicative of the current method.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/147#discussion_r480290766" expanded>

There isn't a need for filePath to be static.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/147#discussion_r480291842" expanded>

Could perhaps include javadocs for to describe the class. 
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/147#discussion_r480292755" expanded>

Naming for method could perhaps be more descriptive.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/115#discussion_r480300765" expanded>

Variable name can be renamed to pathName
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/115#discussion_r480302022" expanded>

Leave a line after the description. 
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/115#discussion_r480305194" expanded>

Could consider abstracting our each arguments and put them in a variable to make your code more readable.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/115#discussion_r480306097" expanded>

Could perhaps be create a command class to encapsulate all the commands to adhere to the OOP concept.
</panel>

</panel>

<panel type="info" header="### 223. ONG GUAN HONG MALCOLM `@m0nggh` (10 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/144#discussion_r480868350" expanded>

Perhaps a more descriptive variable name can be used instead (duke?)
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/144#discussion_r480869449" expanded>

Maybe the boolean variable should be named to sound more like a boolean (isDone?)
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/144#discussion_r480914280" expanded>

Just a small nitpick, I think you missed out an empty line between the description and parameter section.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/144#discussion_r480918161" expanded>

Perhaps you can split and name the components right from the start for 1, 2 and 3 to make the code more easily understood.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/144#discussion_r480918951" expanded>

I think you are missing the javadoc for the class, oops.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/144#discussion_r480925970" expanded>

Sorry just feels like result is a little vague here, are you referring to the response instead? 
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/144#discussion_r480927058" expanded>

I like how your code is kept short and sweet in the main start method. Good job!
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/104#discussion_r480186797" expanded>

Perhaps you missed out on a @return for this javadoc? Your description seems to have an extra "the" too!
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/104#discussion_r480215407" expanded>

Perhaps a more descriptive word could be used for scanner? (scanner or sc) Just a very small nitpick.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/104#discussion_r480225999" expanded>

I like the use of this class to store the countless printing messages for Duke. Great job!
</panel>

</panel>

<panel type="info" header="### 224. KYI NUU KHIN KHIN `@khinkhinn` (10 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/342#discussion_r481307478" expanded>

good use of enums!
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/342#discussion_r481314441" expanded>

perhaps you could add an empty line between the description and parameter section as per the java coding standard? (along for the other javadoc comments as well!) :)
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/342#discussion_r481316471" expanded>

maybe you can add punctuation behind each parameter description? (as per java coding standards, and for the other javadoc comments as well!) :)
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/342#discussion_r481318283" expanded>

should break be included? 
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/220#discussion_r481347496" expanded>

should this method be split into more methods? might be harder to debug in future :(
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/220#discussion_r481347873" expanded>

perhaps this could be its own method?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/220#discussion_r481350163" expanded>

maybe this could be a separate method as well? or even two considering that there are around 3 if else blocks!
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/220#discussion_r481352223" expanded>

maybe you can add a empty line between the description and the parameters? (as per the java coding standard - also applicable to the other javadoc comments!) :)
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/220#discussion_r481357321" expanded>

thought this method was really cool and unique!!
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/220#discussion_r481357824" expanded>

good testing!!
</panel>

</panel>

<panel type="info" header="### 225. DIVAKAR MALHOTRA `@divakarmal` (10 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/214#discussion_r482903593" expanded>

Can be removed if commented out, leads to some confusion.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/214#discussion_r482904188" expanded>

Can be removed if not used
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/214#discussion_r482905594" expanded>

variable name can be index or serialNumber instead of i to denote what it is
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/214#discussion_r482907322" expanded>

it should be named printTask instead of taskPrint
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/214#discussion_r482907633" expanded>

once again lot of these commented out lines should be removed
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/214#discussion_r482908433" expanded>

It should be PrintListCommand
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/214#discussion_r482909038" expanded>

Should replace with TODO, EVENT, DEADLINE
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/57#discussion_r482917970" expanded>

Very clear and concise and easy to understand, good job
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/57#discussion_r482919366" expanded>

Maybe class can be named EventTask instead of Event, makes it more clear
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/57#discussion_r482921237" expanded>

naming it list can be ambiguous, maybe it can be called taskList to make it clearer
</panel>

</panel>

<panel type="info" header="### 226. PETRICK JERICO GUSTENDI `@petrickjerico` (10 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/454#discussion_r482125766" expanded>

Agree with the previous reviewer! Grouping all your Errors in one Enum class makes the code neater.

On another note, noticed you added a header comment for the Command Enum class. For consistency, perhaps one for this class too? 
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/454#discussion_r482128640" expanded>

Found a hard catch here: misaligned asterisk. _Sneaky_.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/454#discussion_r482130584" expanded>

Here, maybe start with `Marks...` instead of `Mark...`? 

I noticed the same issue in several other lines too, but as the previous reviewer mentioned, this comment could prove redundant.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/454#discussion_r482181590" expanded>

JDoc seems to be against any "blank line between the documentation block and the method/class." Perhaps I can suggest removing the (unintentional?) blank at line 38 here.

Kindly survey the other lines, as I might have missed some other cases of this!
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/454#discussion_r482192943" expanded>

Referring to the JDoc for all rules (the one suggested for W3 was only basic + intermediate), the `this` keyword is best used "only when a field is shadowed by a method or constructor parameter".

In this case, since `path` does not shadow any of the `TaskManager` attributes (`taskList`, `ioParser`, and `textParser`), perhaps it is safe and good practice to remove the `this` keyword.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/227#discussion_r482223286" expanded>

Perhaps `errorMessage` can also be `final`? 

Rationale: At any point, the code would `throw new DukeException(errorMessage)`. Making the attribute(s) `final` is not only safe, but also recommended by JDoc as a good practice.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/227#discussion_r482231818" expanded>

I like the different stages of boolean returns! To enhance the readability, you might want to consider refactoring different booleans. For instance:

'''
boolean isThis = ...;
boolean isDuke = ...;
boolean hasSameTasks = ...;
return isThis || (isDuke && hasSameTasks);
'''

I notice the same optimization could be applied to the 'equals()' method in other classes. Just a small suggestion!
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/227#discussion_r482252143" expanded>

Noticed that 'switch-case' statements were used in the 'Parser' class. If there are no method calls that prevent this, do consider 'switch-case' here too! It could potentially refactor out repeated method calls – in this case, 'inputList[0].trim().equals(...)'.

'''
String letterCommand = inputList[0].trim();
switch (letterCommand) {
case "D":
    newTask = new Deadline(...);
    break;
case "T":
    newTask = new ToDo(...);
    break
case "E":
    newTask = new Event(...);
    break;
default:
    System.out.println("I'm sorry, but I don't know what that means :-(");
    break;
}
'''
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/227#discussion_r482261798" expanded>

I like the usage of `Streams` here to `filter` relevant tasks! 

Noticed that the method means to `return UnmodifiableList`. Would like to raise the use of `Collectors.toUnmodifiableList()` as a possible minor optimization.

Reference: https://stackoverflow.com/a/53013505
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/227#discussion_r482268796" expanded>

Really like that you consider using Java's `Optional`s to pre-empt empty tasks! Most people – including me – would stray away from this and bulk up on error handling instead. Kudos!
</panel>

</panel>

<panel type="info" header="### 227. ONG SI MIN `@minzzelo` (10 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/173#discussion_r479939038" expanded>

What do you think about leaving a whitespace after the `//`?  I've noticed a few other areas with the same formatting
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/173#discussion_r479953617" expanded>

Since you are using `input.substring(x)` quite often in your code, what do you think about declaring a string constant for it and referring to it for the conditions? Such that the substring operation doesn't have to be repeated throughout.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/173#discussion_r479954797" expanded>

What do you think about using `LocalDateTime` instead for the date/time related variables? Such that you don't have to parse the time separately
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/173#discussion_r479981423" expanded>

Do you think it would improve readability if there was a line break here?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/173#discussion_r479983292" expanded>

Do you think it would be a better idea to give the test a more descriptive name? E.g. `whatIsBeingTested_descriptionOfTestInputs_expectedOutcome`. This applies to the other tests as well.


</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/173#discussion_r479984649" expanded>

Do you think the naming for the methods can be improved on? e.g. `deleteTask`, `addTodo` etc because right now it follows a "set" prefix for completing, deleting, and adding Tasks which I find might be a little confusing 😅
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/32#discussion_r479897691" expanded>

What do you think about adding a descriptive header comment here describing the `Duke` class?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/32#discussion_r479897893" expanded>

Do you think it would be better if you added comments for the class members as well?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/32#discussion_r479901189" expanded>

Should there be a period after the comment?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/32#discussion_r479913473" expanded>

Do you think it would be better to add a header comment here?
</panel>

</panel>

<panel type="info" header="### 228. ZHANG YI `@Diwu-Yi` (10 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/290#discussion_r482138335" expanded>

Great idea to offer a README! I will learn this from you.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/290#discussion_r482145168" expanded>

Organisation is quite clear! Perhaps the invalid command case could be checked at the beginning so that the "happy path" is more clear ?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/290#discussion_r482146032" expanded>

For this part, the "happy path" is quite clear :).
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/290#discussion_r482146879" expanded>

I do not think so, my concern is that doing so may violate the naming style? no?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/290#discussion_r482149363" expanded>

I really like how you organise the commands into a package.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/147#discussion_r482153920" expanded>

As mentioned, maybe adding some JavaDoc comments to meet our coding standard when you have the time :) ?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/147#discussion_r482154316" expanded>

The parse method's structure is very clear!
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/147#discussion_r482156092" expanded>

Hi, Ashley-Lau, a gentle reminder : we need to meet all standards specified for reviewing. Perhaps consider phrasing your comments as question more often ? 
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/147#discussion_r482157460" expanded>

I am having this issue as well. Perhaps we should shorten out method and use more helpers ?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/147#discussion_r482158539" expanded>

Perhaps this method can also be shortened with the help of helpers?
</panel>

</panel>

<panel type="info" header="### 229. ABDURRAHMAN FAQIH BIN ISKANDAR `@abdurrahmanfaqihiskandar` (9 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/247#discussion_r482988264" expanded>

Perhaps "secondarr" and "stringarr" should be in camelCase instead?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/247#discussion_r482990437" expanded>

Maybe add a line break after the method description before parameter?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/247#discussion_r482992786" expanded>

Perhaps you can restructure this code block to make the happy path more prominent?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/42#discussion_r480029371" expanded>

Some of your logical blocks have a blank line before and after, some only before and some only after. Maybe you can make this consistent?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/42#discussion_r480030762" expanded>

Perhaps an empty line between description and return section?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/42#discussion_r480031443" expanded>

Perhaps add a verb at the start of this javadoc comment for this method?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/42#discussion_r480032108" expanded>

Maybe use the "Returns" instead of "Return"? The imperative form is also apparent in many other javadoc comments of other methods. Perhaps consider changing them to be conform to the java coding standards?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/42#discussion_r480033538" expanded>

I like that you placed line breaks in many parts of your code including this one. Improves readability. 👍 
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/42#discussion_r480139245" expanded>

Maybe consider using a switch statement for this long list of conditionals?
</panel>

</panel>

<panel type="info" header="### 230. WANG ZIJUN `@WangZijun97` (9 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/449#discussion_r481710552" expanded>

Perhaps place the operator as part of the next line for ease of reading (easily shows that the line is part of the previous)?
This applies to other instances e.g. in AddCommand
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/449#discussion_r481778234" expanded>

Perhaps this (and other similar chunks of code) should be broken up into distinct logic units with comments to describe what they do?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/449#discussion_r481802050" expanded>

Should this be in the ```featureUnderTest_testScenario_expectedBehavior()``` format?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/380#discussion_r481812472" expanded>

If this is meant to only be thrown when an invalid input is given, perhaps a more descriptive name such as `DukeInputException` would help readability?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/380#discussion_r481819049" expanded>

Not sure if I'm supposed to give this type of comments, but I think if your user input is something like `todo delete files` your parser will run the wrong command :(
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/380#discussion_r481819754" expanded>

Good attention to detail to differentiate these responses :D
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/380#discussion_r481827885" expanded>

Perhaps call these functions `doSomethingSaveFile` rather than `doSomethingTextFile` since you are referring to the save file all along? Could reduce some confusion.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/380#discussion_r481831916" expanded>

Perhaps a more descriptive term than `by` can be used to describe the deadline.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/380#discussion_r481833700" expanded>

Should this be `protected`? Not sure if used anywhere outside of `getData()` or `toString()`.
</panel>

</panel>

<panel type="info" header="### 231. SIGMUND CHIANASTA `@sigmund-c` (9 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/351#discussion_r479956871" expanded>

Minor nitpick (that I'm personally ok with), but the coding standard suggests adding an empty line between the description and the parameter section
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/351#discussion_r479959350" expanded>

Not 100% sure about this one myself, but would a name like `ParsedCommand` be more accurate here since it represents one command? Though I understand that a previous level requires a class to be explicitly named Parser :P
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/351#discussion_r479962702" expanded>

Since these are constants, it's recommended to have them all be uppercase (LINE, LINE_INDENT, ...). And perhaps that since they're associated with one another, they could also be prefixed with a common name (MSG_LINE, MSG_LINE_INDENT, ...)
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/177#discussion_r479941395" expanded>

The comments might be a bit redundant since the code already somewhat tells what is happening? But not sure.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/177#discussion_r479942329" expanded>

Since these constants are associated, it might make sense to prefix them with a common name (eg. MSG_DIVIDER, MSG_GREETING, ...).
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/177#discussion_r479945686" expanded>

Another minor one, but the coding standard mentions that there's no need to indent for the `case` clauses.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/177#discussion_r479952355" expanded>

Perhaps the last `: "✓",`  line can be in the same line as the previous to improve readability?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/177#discussion_r479953013" expanded>

Mentioning the reasoning behind the +1 might be a good idea
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/177#discussion_r479955582" expanded>

Consider naming x as a more obvious name (maybe returnValue?) just to make it clearer.
</panel>

</panel>

<panel type="info" header="### 232. GOH YEE LOON `@gloon99` (9 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/301#discussion_r481647691" expanded>

could perhaps consider using a switch statement instead of multiple if else 

</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/301#discussion_r481650432" expanded>

could perhaps rename type to commandType to make it clearer?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/301#discussion_r481661199" expanded>

tasks instead of task
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/301#discussion_r481665168" expanded>

could perhaps rename to something more recognizable like dateString (?)
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/237#discussion_r481675080" expanded>

could perhaps overwrite the toString() method such that polymorphism can be utilised, rather than performing multiple if else checks!
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/237#discussion_r481676815" expanded>

adding on to the comment above about adding a toString() method, this could prevent multiple copy pasting of the same chunk of code :-)
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/237#discussion_r481679847" expanded>

could perhaps assign a variable name firstWord = input.split(" ")[0] so that it can be directly referenced in the rest of the if else statements!
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/237#discussion_r481680286" expanded>

could maybe consider using a switch statement instead of using multiple if else statements
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/237#discussion_r481681577" expanded>

could perhaps create a new Exception class to group this exception with the deadline equivalent
</panel>

</panel>

<panel type="info" header="### 233. MARCUS `@marcus2k` (9 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/336#discussion_r481247588" expanded>

Perhaps `userInput` would be a more suitable variable name than `searchText`?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/336#discussion_r481249495" expanded>

I like your suitable use of enum here!
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/336#discussion_r481250025" expanded>

Nice use of enum here!
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/336#discussion_r481250811" expanded>

Should the method be named more accurately with a verb, perhaps `getWelcomeMessage()`?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/336#discussion_r481251258" expanded>

Should the method be named more accurately with a verb, perhaps `getExitMessage()`?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/13#discussion_r481242185" expanded>

Should border be capitalised as well?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/13#discussion_r481243833" expanded>

Would it be better if the DukeInvalidListNumberInputException was given a slightly shorter name, perhaps DukeInvalidIndexException?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/13#discussion_r481244810" expanded>

Should the indent variable be capitalised if it was declared static final?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/13#discussion_r481244973" expanded>

Would it be better to name constant (static final) fields with upper case letters?
</panel>

</panel>

<panel type="info" header="### 234. WANG RI ZHAO `@therizhao` (9 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/442#discussion_r482801266" expanded>

There are opinions that nested ternary operators should be avoided as much as possible, as it's difficult to follow 👓  
Could consider refactoring this code ⌨️ 

</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/442#discussion_r482805049" expanded>

There are some magic numbers here (e.g. 7). It is currently not apparent to a reviewer, why you chose these numbers. Would suggest you refactor, index parsing logic into their own static methods. 
1. That way, you could add comments to describe more about what the method does, and why chose those numbers.
2. Abstracting into individual methods would also make them unit testable, thus making your code less fragile

That said, the issues I have raised may not be urgent since they do not directly impact workability of your code. But they could be issues to keep in mind in the future 🐱 .
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/442#discussion_r482812127" expanded>

I observed that equals method is implemented for many of the Command classes. However, I am not too sure if it is actually necessary based on the project requirements. 

In any case, if you decide to override equals, you probably should override the `hashcode()` method too. (See https://www.techiedelight.com/why-override-equals-and-hashcode-methods-java/#:~:text=Overriding%20only%20equals()%20method,hashCode%20method%20on%20each%20of)

If I were you I would probably save myself the hassle 🐩  and not implemented the equals method since it's not strictly necessary. But of course, that's just my opinion 😸 


</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/442#discussion_r482812498" expanded>

Comment should be removed when it's done 😝 
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/442#discussion_r482813078" expanded>

Slight styling issue. The comment should probably be in the javadoc instead of inline. Writing it in javadoc would help you generate beautiful documentation too 😄 
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/442#discussion_r482816191" expanded>

This chunk of code has quite a lot of logic in it 🧠
While that's totally fine, I would suggest to refactor part of the logic, namely (parsing index of task and getting task description) into their own separate methods.

Doing so will have a few benefits:
1. Abstracting into methods gives you opportunity to document them. Naming them would also make it more readable for the reader
2. Methods are unit testable. This gives more opportunity for unit testing and makes your code less fragile and look more reliable 💪 
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/424#discussion_r482719620" expanded>

I find this comment, a little unnecessary, since we can infer that the line below is a String alr, what do you think 😃?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/424#discussion_r482720067" expanded>

The additional noun here (mark_done) could be removed ☺️ Just verbs are enough if we are following our cs2103 coding style 🤓
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/424#discussion_r482720451" expanded>

Funny comment 😋. I love it, but some may find it unnecessary.
</panel>

</panel>

<panel type="info" header="### 235. CHUA YONG YANG, JAY `@nopenotj` (9 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/274#discussion_r480002899" expanded>

cool graphic 👀
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/274#discussion_r480006702" expanded>

The coding style for this module suggests we should have no indentation for case clause 😕 
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/274#discussion_r480007347" expanded>

same comment as previous switch statement 
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/274#discussion_r480007880" expanded>

I like your use of System.exit (cause I didn't use it in my own program LOL) 😀
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/131#discussion_r480016892" expanded>

Hello! You should have a newline at the end of your files if not you might get errors while doing checkstyle😰 

</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/131#discussion_r480019723" expanded>

Tiny nitpick here.. To improve readability of code, you could try using guard clauses to ensure that the happy path is more prominent 🤓 [Click here to read more](https://nus-cs2103-ay2021s1.github.io/website/se-book-adapted/chapters/codeQuality.html#make-the-happy-path-prominent)
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/131#discussion_r480021119" expanded>

Cool, never thought of using enum this way 
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/131#discussion_r480021355" expanded>

same thing with the guard clause!! can refer to my comment above
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/131#discussion_r480022580" expanded>

wow, very neat way of taking in user input 👍

Oh but for this module, the case clauses should not have the extra indentation, can find out more [here](https://se-education.org/guides/conventions/java/intermediate.html)
</panel>

</panel>

<panel type="info" header="### 236. MAYANK KEOLIYA `@mkeoliya` (9 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/401#discussion_r481233990" expanded>

Perhaps you missed out a merge conflict here? 
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/401#discussion_r481235714" expanded>

I'd concur with the views above - hope the changes aren't much trouble :))
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/401#discussion_r481238176" expanded>

Explicitly listed, the classes would be `BufferedReader,` `BufferedWriter`, `File`, `FileReader` and `FileWriter`.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/32#discussion_r481258955" expanded>

Perhaps a constant declared with `final` should be renamed in all-caps?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/32#discussion_r481260970" expanded>

Perhaps an enum (say, `ExceptionTypeEnum`) would be more expressive here? 
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/32#discussion_r481264618" expanded>

Maybe you could separate out logic such as this into its own method? This would help make the method shorter.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/32#discussion_r481267813" expanded>

Perhaps this is a redundant check, as per the [documentation of the createFile method](https://docs.oracle.com/javase/7/docs/api/java/io/File.html#createNewFile())?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/32#discussion_r481268926" expanded>

Maybe this should be an exception instead?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/32#discussion_r481273983" expanded>

Astute idea to separate out MainWindow as a UI component. Makes for a clean SOC between Duke and its UI!
</panel>

</panel>

<panel type="info" header="### 237. LIM WEN HAO, LIONEL `@WhiteLio` (9 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/426#discussion_r480986608" expanded>

this constant should be in all caps! `COMMAND_LIST`
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/426#discussion_r480988860" expanded>

you should specify when these exceptions are thrown!
eg `@throws CommandNotFoundException If the user command is not in the command list`
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/426#discussion_r480990307" expanded>

귀여워요 haha
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/426#discussion_r480992624" expanded>

those curly braces are unnecessary! i think the code would look cleaner without them~
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/426#discussion_r480995626" expanded>

you should use underscores to separate words! also, associated constants (final variables) should be prefixed by a common type name
eg `PATTERN_EXIT`, `PATTERN_DONE`
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/176#discussion_r481001598" expanded>

you should be able to combine these if statements into one!
`if ( ... && ... ) { ...`
if the first half returns false, the second half won't even be executed, so no need to worry about nulls :)
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/176#discussion_r481002666" expanded>

you can collapse this into a single try-catch!
'try {
...
} catch () {
...
} catch() {
...'

you can also just surround the exact statement that might throw the error (in this case 'sc.next()')
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/176#discussion_r481005491" expanded>

you can use a `switch` statement instead!
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/176#discussion_r481007064" expanded>

same as before! minimise your try-catch coverage to error-prone areas and use switch statements~
</panel>

</panel>

<panel type="info" header="### 238. CHRISTOPHER LEO MERVYN `@Christopher-LM` (9 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/361#discussion_r481096675" expanded>

Maybe you could consider adding javaDoc comments to help improve readability
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/361#discussion_r481097423" expanded>

This method seems to be a little long and goes beyond 30 LOC. Would be good to provide a javaDoc comment or shorten the code
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/361#discussion_r481099172" expanded>

Seems to be a long method would suggest shortening it and adding a javaDoc
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/361#discussion_r481100456" expanded>

the method seems to have deep nesting, maybe consider avoiding arrowhead style code.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/279#discussion_r481088675" expanded>

Should this be more descriptive? maybe sizeTaskList
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/279#discussion_r481089479" expanded>

Should this be in camelcase since it is a variable
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/279#discussion_r481090108" expanded>

Maybe the method name could be more descriptive? Can consider getTaskDetails
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/279#discussion_r481092212" expanded>

Should variable name be in camelCase? maybe taskList would be better here
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/279#discussion_r481094309" expanded>

Should this be a verb since it is a method? maybe something like generateMessage?
</panel>

</panel>

<panel type="info" header="### 239. TING XIAO `@tigerting98` (9 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/412#discussion_r482823108" expanded>

Perhaps it would be better to move the `import java.util.Arrays;` statement to before the import `duke.command.Command` statement?
I got flagged for this by checkstyle myself.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/412#discussion_r482824172" expanded>

Consider using braces for your `if` block here? It would adhere to the coding standard and be more consistent with the rest of your code as well
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/135#discussion_r482834452" expanded>

Maybe you can consider changing the class name to Dook as well to match the name that you have given it? I think it's better to match the class name with what you actually want to call him.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/135#discussion_r482838769" expanded>

Might be better to give more descriptive names to `str` and `args` as they are used throughout this method for better readability. Also consider changing `done` to `isDone` to follow the coding standard.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/135#discussion_r482840986" expanded>

Might be better to phrase `To instantiate...` as `Public constructor for TaskList object that requires a Storage object` or something along those lines. 
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/135#discussion_r482842161" expanded>

Might want to change `Add` to `Adds` for to make it grammatically correct and more consistent throughout your code as I've noticed some methods use singular verbs in their description while some others use plural verbs.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/135#discussion_r482842664" expanded>

nice
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/135#discussion_r482843186" expanded>

^
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/135#discussion_r482844734" expanded>

Is it necessary to have overloaded methods? It seems to result in some duplication of code in the implementations of your Command subtypes.
</panel>

</panel>

<panel type="info" header="### 240. MEHAKPREET KAUR VIRDI `@mehak24k` (9 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/129#discussion_r482037985" expanded>

Perhaps write the comment above the corresponding line of code for better readability?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/129#discussion_r482038842" expanded>

Maybe you can consider renaming this variable to something more descriptive instead of dth for better readbility.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/129#discussion_r482043678" expanded>

Perhaps you could create multiple exception classes which inherit from DukeException instead of writing various methods in this one exception class.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/129#discussion_r482045141" expanded>

You could consider using switch statements instead of if-else since there are many different cases to handle here.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/129#discussion_r482046381" expanded>

Perhaps you can use more descriptive parameter names.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/103#discussion_r482017836" expanded>

Should not have a blank line between documentation block and constructor.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/103#discussion_r482021301" expanded>

Add punctuation behind each parameter description.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/103#discussion_r482024695" expanded>

Empty constructor may not be needed here.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/103#discussion_r482031270" expanded>

Perhaps make this into one line for better readability?
</panel>

</panel>

<panel type="info" header="### 241. ROLAND YU WENYANG `@rolandyuwy` (9 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/376#discussion_r480911381" expanded>

Should your class files be in a folder "duke", in lower cases instead?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/376#discussion_r480915230" expanded>

There is a small typo here for the word "can".
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/376#discussion_r480919287" expanded>

Perhaps you might want to use a boolean value 'isExit' as the looping condition instead? You may refer to the example below.

![image](https://user-images.githubusercontent.com/59356158/91817948-01d96600-ec68-11ea-8e11-d611405b14a6.png)
  
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/376#discussion_r480922633" expanded>

Good practice to import classes explicitly.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/376#discussion_r480924953" expanded>

Maybe an empty line between description and param section? This applies to the other JavaDoc comments in other files.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/312#discussion_r480941308" expanded>

Perhaps you might want to improve readability by using a boolean value 'isExit' as the condition instead?

</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/312#discussion_r481038470" expanded>

Perhaps you can consider listing the imports explicitly?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/312#discussion_r481040232" expanded>

Perhaps numOfTasks() might be clearer?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/312#discussion_r481040697" expanded>

Perhaps findTask(...) would be clearer? This will be similar to your other methods here too.
</panel>

</panel>

<panel type="info" header="### 242. NG WEI HONG `@justweihong` (9 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/335#discussion_r482238622" expanded>

I understand that you avoid isQuit again because it has the same naming as the attribute. Perhaps can consider hasQuit() so it is clearer that its a boolean?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/335#discussion_r482239722" expanded>

Just a suggestion but you can also consider the short form "init".
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/335#discussion_r482241394" expanded>

Maybe can remove the enter spacing here so it doesn't seem like a separate method javadoc
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/335#discussion_r482247443" expanded>

Once the code lines are not required, they can be removed. Else if its meant to be kept, you can consider adding TODO line so others know there are pending changes.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/335#discussion_r482247724" expanded>

same for this as well! If comments are not required can remove them!
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/75#discussion_r482221311" expanded>

Can consider showWelcomeMessage so that other developers can expect string outputs.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/75#discussion_r482224490" expanded>

I'm not exactly sure what "iteration 2 " means. Does that mean there is a another method that's iteration 1?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/75#discussion_r482232062" expanded>

Just a suggestion: Maybe can rename them to TodoTask, EventTask and DeadlineTask so that programmers that doesn't know about our Duke project knows that an Event is a type of Task
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/75#discussion_r482248959" expanded>

I think its because it is not a requirement for the More-OOP tag but a good to have!
</panel>

</panel>

<panel type="info" header="### 243. TAN KANG LIANG `@tankangliang` (9 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/176#discussion_r481890726" expanded>

Hey, I've noticed the package names all begin with a capital letter but our coding standards require it to be in all lowercase.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/176#discussion_r481894692" expanded>

Hey, the variable names for the parameters along with the javadoc comments don't seem to give much information regarding what the function expects. I see that the classes extending this one have more specific comments and variable names which is great! Perhaps this could be made more descriptive?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/176#discussion_r481899208" expanded>

Hey, class names should be written in PascalCase so the first letter should be capitalized here.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/176#discussion_r481904508" expanded>

I've noticed this in other places as well but perhaps some variable names could be longer to give an indication of their purpose? In this case maybe the 'done' variable should have been the 'String' which might help in reading through the code.

E.g.
'''
char d = current.charAt(4);
String done = "";
done = done + d;
'''

This might help in the latter parts when referring to what the variable means.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/176#discussion_r481905369" expanded>

Hello, according to the coding standards, `boolean` values should be named to sound like booleans. An alternative here could be `isDone`
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/51#discussion_r481920998" expanded>

I like the simplicity here 👍 
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/51#discussion_r481935996" expanded>

This method seems quite long and is doing a lot of things. Maybe it could be separated into smaller methods which handle one functionality each?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/51#discussion_r481937815" expanded>

This code seems to be repeated in a few parts, would it be better to have your `Parser` class handle some of these parsing?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/51#discussion_r481940833" expanded>

The naming of this variable might make it seem like it is an action and can be called.
</panel>

</panel>

<panel type="info" header="### 244. NGO DUC BINH `@ducbinh2611` (9 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/131#discussion_r482088388" expanded>

Oh I didn't know you can break the description into the new line and indent till the first word which makes the description much easier to read. Anyway, I like your Javadoc since it's really succinct and detailed. Learn a lot from reading your javadoc 👍 
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/131#discussion_r482094385" expanded>

Just a very very minor detail here because of the extra empty line 
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/131#discussion_r482099650" expanded>

Very nice and clear way of dealing with each type of command!!

But I think you don't have to have an indentation for your case statement, so case should have the same indentation as switch
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/131#discussion_r482101527" expanded>

Another very minor detail here also, perhaps you can leave a line between your package and your import statement. I see you do that for most of the other classes so maybe you just forget to do it here :D
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/131#discussion_r482105432" expanded>

The summary of what the function does is great :D, perhaps you can improve it even further by starting your summary with the verb `Gets ...` instead of `a function to ...` . I noticed the same issue at some other places too. You can view more about it here :D [https://se-education.org/guides/conventions/java/intermediate.html#comments](url)
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/131#discussion_r482110559" expanded>

I like how you break the line, you think can put the `+` operator at the beginning of the new line instead of the end of the previous line.
More info can be found here under the `Place line to improve readability` section :D 
[https://se-education.org/guides/conventions/java/intermediate.html#comments](url) 
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/30#discussion_r482150782" expanded>

Perhaps you can try segment this code since it is a bit too long now imo, maybe you can consider an `execute()` for each command?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/30#discussion_r482153805" expanded>

Just a very minor detail here, I think you can consider put the `+` in the beginning of the new line instead of putting it at the end of line 72 :D 
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/30#discussion_r482157069" expanded>

Perhaps you can try to avoid putting all the processing of the input in the predicate expression for the `if ... else`, you can try to have another function deal with the parsing and isolating user input and just return what you want here instead :D
</panel>

</panel>

<panel type="info" header="### 245. GE WAI LOK `@raymondge` (9 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/262#discussion_r481051777" expanded>

you could have use this.message to make it specific the message reference.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/262#discussion_r481052349" expanded>

"Task deleted" seems to be a coding standard violation. You could change to deletedTask instead
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/262#discussion_r481053382" expanded>

It's better to name out the exception you are handling
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/262#discussion_r481054672" expanded>

"list" can be changed to "TaskList"
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/248#discussion_r481043278" expanded>

Since the line is not to share with other class, maybe change it to private instead?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/248#discussion_r481046196" expanded>

good use of switch case to list all possible outcome, adding a default may be better
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/248#discussion_r481047996" expanded>

saveTasks maybe change to saveTasksToFile to make it more specific
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/248#discussion_r481048451" expanded>

we are missing a verb before taskDone, maybe makeTaskDone?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/248#discussion_r481048910" expanded>

input is not a good name for Scanner, maybe sc?
</panel>

</panel>

<panel type="info" header="### 246. ZHU XIAOCHEN `@zhXchD` (9 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/229#discussion_r480178567" expanded>

Variable should be named as PRE_SPACING
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/229#discussion_r480179477" expanded>

Does not follow the `JavaDoc` preferred style. Better if you commented as `Formats the string to...`
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/229#discussion_r480186158" expanded>

Too many empty lines.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/229#discussion_r480187761" expanded>

Possible to use `switch` statement?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/138#discussion_r480191555" expanded>

Avoid long methods.

`Parser` class should only parse the user input and translate to Duke-understandable commands. The specific execution of those commands should not be handled inside `Parser`.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/138#discussion_r480192326" expanded>

Use a `switch` statement to enhance readability.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/138#discussion_r480192799" expanded>

Avoid deep nesting.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/138#discussion_r480194392" expanded>

This should be handled by `Ui`.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/138#discussion_r480194988" expanded>

`printAddedTask` and `printList` should be handled by the `Ui` class.
</panel>

</panel>

<panel type="info" header="### 247. CHEAK HAN WEI `@hanweic53` (9 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/107#discussion_r479980524" expanded>

Shouldn't there be a line spacing between the description and parameter section as specified in the coding standards?
I noticed the same issue in several other java docs too.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/107#discussion_r479987430" expanded>

For line breaks, shouldn't we break before operators like '+'?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/107#discussion_r479992747" expanded>

Maybe it's a good habit to include a @ Override tag here?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/107#discussion_r480931018" expanded>

Maybe there is a more intuitive name than temp? Such as inputTokens?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/73#discussion_r480019451" expanded>

Should the name of this method start with a verb to make it more intuitive? Maybe like convertFromFile() ?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/73#discussion_r480020384" expanded>

Should there be indentations for case clauses?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/73#discussion_r480022370" expanded>

Should there be a default clause here?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/73#discussion_r480027541" expanded>

Maybe you can separate imports from different packages so that it will be easier to browse the list?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/73#discussion_r480029260" expanded>

tokens is a good name for the this case. Not so sure about loaded though, although we know that it represents your loaded task after reading the code, but it's not intuitive at first. 🤔 
</panel>

</panel>

<panel type="info" header="### 248. KAMIL GIMIK `@chewypiano` (9 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/92#discussion_r481635065" expanded>

I like how clean the code for your Storage class is but perhaps the two public methods (doesFileExist() & createFile()) could be made private?  
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/92#discussion_r481640931" expanded>

I like how you segment the classes with "//Attributes, //Methods, etc." as it makes your code easily readable and clean. Perhaps you could also add some javadoc comments to methods that are not clear in what they do. For instance, for getStatusIcon(), it could be good to include what the output represented.  
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/92#discussion_r481647264" expanded>

I like how clear the javadoc comments are. However, perhaps you could add an empty line between the description and parameter section. I noticed this similar minor issue in several other places as well.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/17#discussion_r481671895" expanded>

I like how clear and easy-to-understand your Javadoc comments are. Perhaps for this comment, you could leave an empty line between the description and the parameter section to conform to coding standard.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/17#discussion_r481680322" expanded>

I like how clear your documentation is. However, perhaps you need not repeat some javadoc entries for overridden methods. I noticed a similar pattern in several of your classes (Command classes).
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/17#discussion_r481686605" expanded>

I like how proper the naming of variables and methods are, making it clear as to what each variable and method does. However, perhaps you could extract out some components of the method into compact private helper methods to reduce deep nesting? I noticed similar patterns in a few of your methods. 
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/17#discussion_r481694911" expanded>

I like how you included comments within the method to make it more readable. However, perhaps it would be good to extract out some components of the method to make the method shorter and easier to follow.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/17#discussion_r481700999" expanded>

Perhaps you could add a "// Fallthrough" comment for leaving out the break statements.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/17#discussion_r481703341" expanded>

Perhaps you could simplify the method by doing it in steps to reduce the amount of complicated expressions and improve readability of the code.
</panel>

</panel>

<panel type="info" header="### 249. JOSHUA TAN YIN FENG `@joshtyf` (9 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/398#discussion_r481517847" expanded>

Should you remove the `this` keyword? The [java coding standard documentation](https://se-education.org/guides/conventions/java/index.html#variables) mentions to use `this` keyword only when a field is shadowed by a method or constructor parameter.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/398#discussion_r481519586" expanded>

Should this be method be called `setDone` instead? See the boolean section in [java coding standard](https://se-education.org/guides/conventions/java/index.html#naming) 
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/269#discussion_r481136904" expanded>

Should this be reworded?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/269#discussion_r481139720" expanded>

Should you remove the `this` keyword? In the Java Coding Standard documentation called "Avoid unnecessary use of this with fields.", it mentions how the the `this` keyword should only be used when a field is shadowed by a method or constructor parameter.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/221#discussion_r481553239" expanded>

Should this be renamed as `toStream`? It might be more intuitive instead of just `stream`.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/221#discussion_r481556330" expanded>

Should this be abstracted to a separate method instead?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/221#discussion_r481559599" expanded>

Do you think it's better to store the string template `"Got it. I've added this task: ..."` as a separate variable or abstract it out into another method? This reduces repetition as well as enable you to reuse the template in case you have different types of tasks to add in the future.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/197#discussion_r481531243" expanded>

I like the use of the `label` although a better name could be used instead.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/197#discussion_r481532645" expanded>

Should 'TaskList' contain 'Ui'? Your 'Parser' class contains 'Ui' as well. So you could invoke the methods for 'TaskList' and 'Ui' from 'Parser' instead of invoking some of 'Ui' methods in this 'TaskList' class. 
An example from your 'Parser' class would be this:
'''Java
case "bye": { //bye
    storage.updateFile(taskList);
    ui.farewellMessage();
    break label;
}
'''
This reduces the dependency between your 'TaskList' and 'Ui' class and allows your code to be easier to maintain.
</panel>

</panel>

<panel type="info" header="### 250. SOON XIANG, YAN `@yan-soon` (9 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/428#discussion_r482982647" expanded>

I like that you followed the no indentation rule for case clauses
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/428#discussion_r482983229" expanded>

I like that you imported the following in order and did not make use of the *
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/428#discussion_r482983747" expanded>

I like that your javadocs follow the standard format (E.g. the spacing in between param and the description)
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/428#discussion_r482984333" expanded>

I like your use of variable naming, makes the code more comprehensive more readers
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/428#discussion_r482985956" expanded>

Perhaps you can consider listing explicitly all the classes of the Duke Package required for this testing?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/288#discussion_r482992353" expanded>

I like your extraction of command classes, as it makes the code a lot cleaner and more comprehensive.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/288#discussion_r482995763" expanded>

Perhaps the use of substrings and the significance of the numbers can be illustrated more clearly?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/288#discussion_r482997317" expanded>

Perhaps there can be another javadoc here as well?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/288#discussion_r482999842" expanded>

I like your thorough testing!
</panel>

</panel>

<panel type="info" header="### 251. THUTA HTUN WAI `@thutahw` (9 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/166#discussion_r481218378" expanded>

Just a missing spacing between ")" and "{". 
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/166#discussion_r481220252" expanded>

Maybe put a spacing between ")" and "{"?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/166#discussion_r481222972" expanded>

Good naming of the methods!
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/166#discussion_r481229271" expanded>

Just the missing spacing between ) and { in some methods. Everything is good!
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/22#discussion_r481180411" expanded>

Would it be better to name this method as "showWelcomeMessage"?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/22#discussion_r481181423" expanded>

Would it be better if "showByeMessage" is used instead?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/22#discussion_r481188124" expanded>

Maybe add a spacing here: "testGetNumTask() {" ? Also, would "listOfTasks" look better?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/22#discussion_r481190628" expanded>

I think it's the same as above, just missing 1 spacing between ")" and "{".
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/22#discussion_r481193878" expanded>

Everything is good! Maybe just the missing spacing like above.
</panel>

</panel>

<panel type="info" header="### 252. TAY SENG LIANG SEAN `@seantaysl` (9 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/355#discussion_r481929748" expanded>

Perhaps comment on why the catch block is left empty?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/355#discussion_r481931593" expanded>

Is there a way to make the method shorter?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/355#discussion_r481932255" expanded>

Perhaps comment on the reason behind the empty catch block?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/355#discussion_r481933640" expanded>

Should this be changed to increase readability and understandability?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/218#discussion_r481913630" expanded>

Should there be a space above this line?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/218#discussion_r481916213" expanded>

Perhaps remove indentation for the case clauses.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/218#discussion_r481921274" expanded>

Perhaps align the case clauses with the switch.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/218#discussion_r481922551" expanded>

Should there be a line break between static imports and normal imports?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/218#discussion_r481923094" expanded>

I like how you listed the imported classes explicitly.
</panel>

</panel>

<panel type="info" header="### 253. TAN CHIA QIAN `@TCQian` (9 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/335#discussion_r480694548" expanded>

I do not think the variable named printAddTask is well named.Does printNewTask describe the action better?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/335#discussion_r480697632" expanded>

Based on the coding standard, all comments end with a full stop.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/335#discussion_r480705257" expanded>

Opps, you forgot to use the correct format for parse_FindString_prints as you did for parse_addString_prints. At least you did aware of you mistake and edited it for the parse_addString_prints.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/335#discussion_r480710784" expanded>

Same thing happen here, is it better to replace the add to new?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/335#discussion_r480716790" expanded>

setMessage(List, EventTask...) might not seem complete. Does adding a of or for help to make the variable name complete such as setMessageOfList?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/325#discussion_r481071668" expanded>

Do not forget follow the coding standard  for while loop.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/325#discussion_r481073641" expanded>

Yes, I agree. Maybe instead of doing if-else inside an if-else, they can be a part of else if of the main if-else.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/325#discussion_r481081166" expanded>

These exception is thrown due to the problem of reading data from data file or saving data to data file which are relative to the data file. Therefore, an exception named fileLoadingException inherited from Duke Exception can be created so that all the exceptions inherited from the DukeException can be handled easily. 
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/325#discussion_r481081862" expanded>

The name of the function get might be a bit confusing. Is it better to be "getTaskByIndex"?
</panel>

</panel>

<panel type="info" header="### 254. TAN JIA QI `@jiaqi20` (9 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/455#discussion_r481225880" expanded>

Based on coding standards, it's better to place the line break after a comma or an operator to improve readability.

</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/455#discussion_r481228816" expanded>

For this part, is it better avoid nested try catch block to increase readability? Maybe you can extract each part separately into different methods :))
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/455#discussion_r481234181" expanded>

It's good that you have structured the code to deal with an error as soon as they are detected to make the happy path clear and prominent. 👍 

</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/455#discussion_r481240113" expanded>

Perhaps you can use a more descriptive variable name to increase readability :) 
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/455#discussion_r483028192" expanded>

It's okay, my variable naming is also bad sometimes ._. Yes, it's better! 👍 
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/286#discussion_r481144774" expanded>

Based on coding standard, the Javadoc comments should have empty line between description and parameter section and there needs to be punctuation (a full stop) behind each parameter description.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/286#discussion_r481148877" expanded>

Is it better if the loaded method is named as printLoaded instead to be more meaningful? :)
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/286#discussion_r481152029" expanded>

There is a minor indentation mistake for switch statement. There should be a spacing between "switch" and "()". The indentation for other switch statements is good. :D

</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/286#discussion_r481153512" expanded>

Based on coding standards, I think no need to put curly brackets for case block. 
</panel>

</panel>

<panel type="info" header="### 255. ZHANG YUANXING `@yuanxing-y` (9 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/466#discussion_r480163039" expanded>

Suggest using private keyword instead of protected.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/466#discussion_r480164180" expanded>

different parts of the code can be grouped together as a method, make it easier for abstraction.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/466#discussion_r480164429" expanded>

same suggestion as deadline
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/387#discussion_r480131416" expanded>

typo: should be re-enter
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/387#discussion_r480134932" expanded>

"Boolean variables/methods should be named to sound like booleans."
Recommend using canUnderstand instead.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/387#discussion_r480141337" expanded>

I didn't know this way of using enum before, nice implementation! However, it may be better if you create a class for Command, according to OOP.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/387#discussion_r480143740" expanded>

allTasks might be more intuitive.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/387#discussion_r480144808" expanded>

hahaha i like the way you make it sounds so engaging!
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/387#discussion_r480152672" expanded>

new line
</panel>

</panel>

<panel type="info" header="### 256. LIN YUAN XUN, CALEB `@caleblyx` (9 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/270#discussion_r479997747" expanded>

Should this class variable be named "uI" instead of "ui"?

> "Variable names must be in camelCase." -[ Java coding standard @ SE-EDU/guides](https://se-education.org/guides/conventions/java/intermediate.html#guides-for-se-student-projects)

I noticed that there could be issues regarding the naming of UI objects in other classes too.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/270#discussion_r480002730" expanded>

Perhaps, this class could be named "UI" instead of "Ui", since it is an acronym where both letters represent different words.

> Class/enum names must be nouns and written in PascalCase. - Java coding standard @ [SE-EDU/guides](https://se-education.org/guides/conventions/java/intermediate.html#guides-for-se-student-projects)

</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/270#discussion_r480011777" expanded>

It could be beneficial to edit the name of this class variable to include more detail to explain what this format could be used for. 

For instance, maybe this constant could be renamed to "REQUIRED_FORMAT" to indicate that is the required format that users should use when providing input. 

I believe that the Event class has a class variable named "FORMAT" too that could benefit from this small edit too.

> Use name to explain - [Textbook](https://nus-cs2103-ay2021s1.github.io/website/book/codeQuality/nameWell/intermediate/useNameExplain/)
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/270#discussion_r480015085" expanded>

Would it be better if the naming convention below was used for naming the test methods of this test class?

> whatIsBeingTested_descriptionOfTestInputs_expectedOutcome - [Textbook](https://nus-cs2103-ay2021s1.github.io/website/book/cppToJava/junit/basic/)

Perhaps, the test methods in the other test classes could benefit from using the stated convention as well
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/270#discussion_r480016294" expanded>

I like that you created your own custom greeting banner!
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/74#discussion_r482002091" expanded>

Could a more descriptive name (such as fileWriter) be provided for this variable? Otherwise, it may perhaps be better to explain this acronym. Also, since each letter of this acronym represents a separate word, camelCase should probably be used.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/74#discussion_r482003635" expanded>

Perhaps, it may be beneficial to provide a full word (such as result) as the name of this variable instead of an abbreviation. Otherwise, the provision of a brief explanation of this variable's name could be useful to improve readability.

I have noticed this issue regarding abbreviation in variable naming in other parts of code too. 
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/74#discussion_r482005993" expanded>

Perhaps this variable could be provided with a more descriptive name to improve readability. 
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/74#discussion_r482007252" expanded>

It may be beneficial to include a verb instead of having one noun to name this method, since it completes an action. For instance, including the verb "print" in the name could improve its naming.
</panel>

</panel>

<panel type="info" header="### 257. JONATHAN FOO CHEE YONG `@jonfoocy` (9 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/461#discussion_r481126737" expanded>

Perhaps change this to `index`? In my opinion it's more understandable from the get go and it's not too many more characters 😉 
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/461#discussion_r481127611" expanded>

Typo in 'specified' 🤣 
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/461#discussion_r481138200" expanded>

Just a suggestion but I would name it as `toReturn` instead :)
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/461#discussion_r481139785" expanded>

Perhaps you might consider changing it to `formatMsg` instead?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/198#discussion_r480838119" expanded>

Perhaps you might consider capitalizing the start of each Javadoc comment to improve consistency? 
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/198#discussion_r481105961" expanded>

Can consider shifting this comment to your Javadoc comment, under the description for `@param description`. Same comment for the `DoneCommand` class 😄 
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/198#discussion_r481109447" expanded>

With reference to this:

> Variables should be initialized where they are declared and they should be declared in the smallest scope possible.

I think you could consider combining lines 22 and 23 into a single line? Similarly for the `DoneCommand` class 😄 
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/198#discussion_r481114385" expanded>

This comment was very helpful in understanding the logic flow of the app! 👍 
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/198#discussion_r481120093" expanded>

Not related to the coding standard but I just wanted to say that implementing the Serializable interface was an interesting decision! I had never known about this until now, so thanks for introducing me this 😄 
</panel>

</panel>

<panel type="info" header="### 258. LOW JIE FENG `@lowjiefeng1998` (9 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/447#discussion_r481321988" expanded>

I like these error messages 😄 

Since there is quite a lot of logic going into this method, should there be Javadocs for this method?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/447#discussion_r481336451" expanded>

I like this method's name - wish I had thought of this 😄

Should there should be a line space between the header and the parameters though? Can also consider this with the rest of the Javadocs in this class and its subclasses.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/447#discussion_r481337325" expanded>

Should the assertions import be split into individual imports?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/447#discussion_r481337978" expanded>

Cool test case 😄 

Can the name of the test case be clearer though? Something like `parser_unknownCommand`. Can consider this with regards to the rest of the test cases as well.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/447#discussion_r481359552" expanded>

Perhaps you can consider renaming `words` to something like `taskInfoWords` to make it clearer?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/447#discussion_r481365438" expanded>

Interesting use of the 'split()' method.

Perhaps you can consider abstracting '"T"', '"D"' and '"1"' to be a variable to make it more readable?
Something like:

'''java
...
private static final String TODO_INDICATOR = "T";
...
if (words.get(0).equals(TODO_INDICATOR)) {...}
...
'''

Alternatively, maybe you can create a method called 'isTodoLine(words)' to improve readability?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/447#discussion_r481376787" expanded>

Perhaps the `"1"` and `"0"` can be defined as variables in `Task.class`? Then the subclasses can utilise these variables, helping to abstract this flag further since it is used in both `Deadline.class` and `Event.class`.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/447#discussion_r481383750" expanded>

I like this customized divider👍 So cool.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/257#discussion_r481983139" expanded>

I like how you kept an example of the subclasses of the Task class 😄 
</panel>

</panel>

<panel type="info" header="### 259. ALVIN CHEE TECK WENG `@CodingCookieRookie` (9 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/389#discussion_r480919750" expanded>

Perhaps you would want to put the toString() method below @Override ?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/389#discussion_r480923977" expanded>

Can try using String.format() for a longer customised string :) , I noticed this issue in other places as well
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/389#discussion_r480934584" expanded>

Perhaps you want to put a space between the comma and the next word :D?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/389#discussion_r480939580" expanded>

I like how you abstracted Status into an enum 👍 
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/389#discussion_r480946668" expanded>

Perhaps you want to make this field private? By default it is default access modifier :D 
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/204#discussion_r480966509" expanded>

Can perhaps abstract the different commands to avoid a long command? :)
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/204#discussion_r480970142" expanded>

I really like how you included the clear() method and the code is very clean
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/204#discussion_r480970950" expanded>

Perhaps since this is a multi-part customised line you could use String.format instead?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/204#discussion_r480971651" expanded>

Perhaps should put a fullstop after the sentence? Found this issue at several places as well 
</panel>

</panel>

<panel type="info" header="### 260. LIU SHULONG `@DreamerDragon` (9 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/236#discussion_r481125527" expanded>

Perhaps the class name could change to CommandDeleter or other nouns? Reference: Use nouns for classes/variables and verbs for methods/functions.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/236#discussion_r481128953" expanded>

I like how you name your command classes which is pretty clear for me to follow!!
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/236#discussion_r481130239" expanded>

Ohh I think I misinterpret this as a verb at first, but from the rest of the class names,  I could tell this is a noun as well
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/236#discussion_r481132586" expanded>

I like how you clearly named each of the exceptions from which I can instantly get the meaning!
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/236#discussion_r481133384" expanded>

I like the way that you name it as a noun instead of ParseTime!
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/114#discussion_r481111987" expanded>

Perhaps avoid using public here? Reference: Class variables should never be declared public unless the class is a data class with no behavior.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/114#discussion_r481114818" expanded>

I like how you follow every rule of the javadoc
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/114#discussion_r481116189" expanded>

I like the ordering of your packages, but maybe move the javafx.stage.Stage package to the bottom?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/114#discussion_r481119611" expanded>

I like how you follow the indentation rules in the try and catch block 
</panel>

</panel>

<panel type="info" header="### 261. CHIAM YUN QING `@chiamyunqing` (9 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/287#discussion_r480909036" expanded>

Use nouns for things. Consider more descriptive names such as 'deadlineDate' instead of 'by'.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/287#discussion_r480913553" expanded>

Personally, I think naming it as taskList is alright here. I think in the textbook when they are referring to constant variables, it's more like fixed values e.g. int MATH_PI = 3.14 . In this context, I would consider taskList more of a variable rather than a constant instead. :) 
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/287#discussion_r480915691" expanded>

Again, use nouns for things. Consider naming this variable as 'eventTime' or something rather than 'at'. 
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/287#discussion_r480918037" expanded>

You may wish to consider combining the 3 "System.out.println(..)" into one e.g. 
'''
System.out.println("Got it. I've added this task:" 
                    + task + "Now you have "
                    + taskList.size() + " task(s) in the list.");
'''
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/287#discussion_r480919110" expanded>

Same issue pointed out by the first reviewer. Take note that there's no indentation for your case blocks.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/148#discussion_r480889968" expanded>

Good job in following the coding standard for switch statements! 
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/148#discussion_r480895752" expanded>

Consider naming your function by adding a verb (e.g. markDone) instead of 'done' as it may not be apparent what the function 'done' does.  
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/148#discussion_r480897073" expanded>

Consider using 'deleteTask' as the function name as 'delete' may not be clear enough. :) 
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/148#discussion_r480899760" expanded>

I noticed that you have named the subclasses in plural form (e.g. Events, Todos, Deadlines) but they represent only 1 Task object rather than a list of event/todo/deadline tasks for example. Perhaps you can consider this point in future for clarity.
</panel>

</panel>

<panel type="info" header="### 262. TAN RUI EN, JOSHUA `@joshruien` (9 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/29#discussion_r481704260" expanded>

I agree with shermz-lim, there shouldn't be indentation for case clauses as indicated in the coding standard.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/29#discussion_r481708282" expanded>

Perhaps the class name could be TodoCommand with d in small caps since your todo class has d in small caps. This ill make your code more standardised.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/29#discussion_r481708782" expanded>

Same case here where case clauses shouldn't have indentation.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/29#discussion_r481711508" expanded>

Should there be a line break here between line 67 and 68? I feel that there is no need for a line break as the line is not long when put together. 
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/29#discussion_r481714700" expanded>

Perhaps there could be a line break here to improve readability of your code.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/8#discussion_r481680636" expanded>

Should the method name be parseToDoTest instead? Since your todo class has a capitalised D. This would make the code cleaner and more standardised.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/8#discussion_r481686446" expanded>

I agree with jimvae, you could provide further abstractions to make your code more easy to read.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/8#discussion_r481690878" expanded>

I like how you personalised the project with your own naming and logo.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/8#discussion_r481691633" expanded>

The line break is good as it makes it easier to read.
</panel>

</panel>

<panel type="info" header="### 263. TAN RUI XUAN `@ruixuantan` (9 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/384#discussion_r480047419" expanded>

Should this indentation be 4 spaces instead of 2?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/384#discussion_r480048151" expanded>

Should the indentation here be 4 spaces instead of 2? I notice this same issue in other places as well.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/384#discussion_r480048772" expanded>

Should this line be indented so as to have less than 120 characters?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/384#discussion_r480056897" expanded>

Should there be no need for indentation in switch statements?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/384#discussion_r480058027" expanded>

Should the line break be 8 spaces instead of 4?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/384#discussion_r480059980" expanded>

Should there be a space after `i` such that `System.out.println(++i + ". " + task);`
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/184#discussion_r480071011" expanded>

Maybe can consider using a more descriptive name that indicates a date/time object?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/184#discussion_r480072024" expanded>

Perhaps can consider using a more descriptive name? I notice the same issue in the Deadline class.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/184#discussion_r480074060" expanded>

Perhaps you can use something more descriptive like `secondCommand`?
</panel>

</panel>

<panel type="info" header="### 264. RAYASAM HARSHINI `@rayasamhr` (9 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/282#discussion_r481242449" expanded>

I think because the constructor is also a public method the Javadocs comment should also start with a verb!
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/282#discussion_r481262449" expanded>

This method is quite long and exceeds 30 LOC, maybe you could consider splitting it up into multiple private methods? 

Maybe you could also experiment with throwing exceptions from your Commands instead, if that would help trim down this method. For example, instead of multiple checks if num is outside of list index, you can catch the IndexOutOfBounds exception from your command's execute method and throw the required DukeException from there
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/282#discussion_r481266175" expanded>

Here and in other cases, because the constructor method is still a public method, I think the Javadocs should still start with a verb? eg. "Constructs a new ..."
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/282#discussion_r481273918" expanded>

Perhaps you can consider using descriptive constants to represent the numbers 4, 5 and 7?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/282#discussion_r481276822" expanded>

Maybe the constant here could have a noun name, to avoid being confused with a method? The style guide also specifies that constants should be all uppercase using underscore to separate words
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/144#discussion_r481215069" expanded>

I think this parameter name would be clearer as a noun, eg. 'time' or 'dueDate'
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/144#discussion_r481216972" expanded>

Here and in other places, there should be punctuation behind each parameter description
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/144#discussion_r481225104" expanded>

Can remove the word "Thrown" here and in other instances? I think '@throws DukeException when ....' is meant to be read like a full sentence
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/144#discussion_r481228977" expanded>

Just a minor thing, but I think you don't need the conditional expression here since .equals already returns a boolean :)
</panel>

</panel>

<panel type="info" header="### 265. CHIA WEN LING `@cwenling` (9 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/300#discussion_r480118766" expanded>

Should the name of a constant be in all uppercase instead?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/300#discussion_r480120402" expanded>

Perhaps the imports from different packages could be separated to make it easier to browse the list?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/300#discussion_r480121959" expanded>

Should there be a spacing between the ) and { ?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/300#discussion_r480124781" expanded>

Perhaps the string could be more descriptive of what it contains? eg, keyword
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/300#discussion_r480131608" expanded>

Should we break the line before the + operator instead?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/226#discussion_r479775846" expanded>

Should this constant name be in all uppercase?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/226#discussion_r479776390" expanded>

Could the name of the boolean sound more like a boolean? eg, isComplete
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/226#discussion_r479777126" expanded>

Perhaps each statement in the javadoc comment could be a complete sentence? I noticed this was in other files too.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/226#discussion_r479777357" expanded>

Im not sure if the first sentence should start with a verb. Perhaps "Creates..." or "Initializes..." might be more intuitive?
</panel>

</panel>

<panel type="info" header="### 266. ZHAO HUAN `@zhaohuanqdcn` (9 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/393#discussion_r480004585" expanded>

Not sure I can agree on this abstraction. Wouldn't this make it harder to locate the cause of exceptions?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/393#discussion_r480005837" expanded>

I am thinking that perhaps this may be abstracted out because the same segment is used for events as well.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/215#discussion_r483912533" expanded>

Perhaps avoiding abbreviations can make code cleaner
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/215#discussion_r483912846" expanded>

Maybe the pattern can be extracted for it's used multiple times
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/215#discussion_r483913120" expanded>

Maybe this class name can be made more descriptive?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/215#discussion_r483913323" expanded>

Perhaps getting the string representation in file can be extracted to a separate method
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/215#discussion_r483913520" expanded>

Unfortunately I am not sure what the leading part means
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/132#discussion_r479998682" expanded>

Perhaps use camelCase for this variable name?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/132#discussion_r480001828" expanded>

Not sure I can agree on this abstraction. Wouldn't this make it more difficult to locate the cause of exceptions?
</panel>

</panel>

<panel type="info" header="### 267. JAYA LIANG NAN RENGAM `@jayarengam` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/338#discussion_r481898372" expanded>

Consider adding `break;` statements after these cases as well; if fall through behaviour is deliberate, consider adding a `//Fallthrough` comment at the end of the case block. 
(The same applies for all the other switch statements in your code)
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/338#discussion_r481921867" expanded>

Something to consider: a reader won't know the reasoning/context behind this number
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/338#discussion_r481925463" expanded>

"do by" is a verb; consider changing this to doByDate?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/338#discussion_r481930124" expanded>

This is a small thing, but you can also do `System.out.printf(` with the same arguments and add `\n` at the end
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/338#discussion_r481931800" expanded>

Consider extracting the ternary expression to improve readability?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/338#discussion_r481935577" expanded>

Consider breaking before the `+` operator instead as mentioned in the style guide
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/332#discussion_r481886912" expanded>

Nice, this method of formatting is very readable!
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/332#discussion_r481889875" expanded>

Consider adding blank lines in these blocks to improve readability (in the other Command files as well)
</panel>

</panel>

<panel type="info" header="### 268. FONG WEI JIE `@WeiJie96` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/402#discussion_r482743673" expanded>

Should there be a newline after the description?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/402#discussion_r482744286" expanded>

Should there be a description to say when the exception would be thrown?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/402#discussion_r482744882" expanded>

Should there be a full stop after the description
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/402#discussion_r482745793" expanded>

Should this line be one more indented by one more space? Perhaps we can align the second "*" of the "/**" line with the "*" of the subsequent lines
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/392#discussion_r482760195" expanded>

Perhaps a more intuitive class name would be FIleReader?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/392#discussion_r482761098" expanded>

Would it be better to avoid deep nesting of 3 levels?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/392#discussion_r482762841" expanded>

Perhaps in might be more intuitive to use enumerations for the different cases?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/392#discussion_r482763970" expanded>

Perhaps a more intuitive variable name would be currentTask?
</panel>

</panel>

<panel type="info" header="### 269. SIEOW JE MIN `@jeminsieow` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/425#discussion_r481235770" expanded>

Maybe using Executes instead of Execute will better follow the coding standard?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/425#discussion_r481236582" expanded>

Maybe using Deletes instead of Delete will better follow the coding standard?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/425#discussion_r481247003" expanded>

Maybe using Marks instead of Mark will be better in following the documentation practices. This is repeated in other comments as well.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/425#discussion_r481249762" expanded>

Should the file path be declared as a constant before passing it into the Duke constructor?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/283#discussion_r481257787" expanded>

Would a more descriptive method name be more suitable here?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/283#discussion_r481258411" expanded>

Would a more descriptive method name be more suitable here? Perhaps writeFile?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/283#discussion_r481261795" expanded>

Perhaps starting the method with a verb? An example can be getDesc.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/283#discussion_r481262126" expanded>

Perhaps starting the method with a verb? An example can be getDeadline.
</panel>

</panel>

<panel type="info" header="### 270. JAVIER LIM XIN LONG `@ijavierja` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/171#discussion_r481145862" expanded>

Do you think these conditions' structure can be made more readable?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/171#discussion_r481153426" expanded>

Perhaps an interface is better suited to describe the Command class as it does not have any attributes and it is never instantiated. 
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/171#discussion_r481156145" expanded>

Are all these classes who extend Exception necessary? Since their messages are handled by the other class, perhaps a general exception class is better suited.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/171#discussion_r481165637" expanded>

Coding standard asked for a space after for. So I think it should be: for (Task task: taskList) {
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/36#discussion_r481184474" expanded>

what does i represent? Can its naming be more specific?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/36#discussion_r481187977" expanded>

Is the name "by" descriptive enough? Would this confuse the reader?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/36#discussion_r481190652" expanded>

Is the name "at" descriptive enough?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/36#discussion_r481192351" expanded>

Would recommend using back ArrayList method names since both class have similar functionalities and other readers might be more familiar to ArrayList method names. This would increase readability
</panel>

</panel>

<panel type="info" header="### 271. JIN YUZE `@UnicornJin` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/253#discussion_r480732570" expanded>

Good JavaDoc
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/253#discussion_r480734736" expanded>

It seems you are using different classes for UI output, it's okay.
You can also do this in one single class lah
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/253#discussion_r480735669" expanded>

Oh you use abstract class, that's good.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/253#discussion_r480738119" expanded>

Maybe name this function as executeOrder/executeCommand would be better
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/41#discussion_r480741081" expanded>

Good JavaDoc
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/41#discussion_r480741711" expanded>

Haha you made a logo for Duke, interesting!
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/41#discussion_r480743149" expanded>

you can just use /* */ for one line JavaDoc
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/41#discussion_r480745519" expanded>

Good, using different packages for different usage of classes
</panel>

</panel>

<panel type="info" header="### 272. GAO GUI `@Perpetual09` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/372#discussion_r483911706" expanded>

Maybe there are other possible exceptions?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/372#discussion_r483912009" expanded>

Maybe there is string index out of range exception also?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/372#discussion_r483912130" expanded>

You can add a header Java Doc here.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/372#discussion_r483912331" expanded>

Personally, I would like to handle exceptions in else branch.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/271#discussion_r481156793" expanded>

Maybe can use StringBuilder to replace + 
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/271#discussion_r481158324" expanded>

If I remember correctly, we need to do at least half of Javadoc for all these files. Maybe you can do that later
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/233#discussion_r481149909" expanded>

Why here is an empty line
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/233#discussion_r481154021" expanded>

Good to create child classes to handle different exceptions
</panel>

</panel>

<panel type="info" header="### 273. LEE WEI HENG `@Whleee` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/443#discussion_r479890101" expanded>

Perhaps can just use destination as the variable name since it is not too long?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/443#discussion_r479890359" expanded>

Maybe try to keep the formatting coherent, in this case a new line after the else statement.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/443#discussion_r479891652" expanded>

Perhaps we can move these classes out of the Duke class for better organisation.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/443#discussion_r479892342" expanded>

Maybe can look into abstracting out the main logic of Duke into another class to add a layer of abstraction.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/443#discussion_r479892806" expanded>

Spacing seems to be inconsistent.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/297#discussion_r479886742" expanded>

Might toBeReturned be uninitialised, thereby returning null?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/297#discussion_r479887144" expanded>

Should the method name be returnSearchedTasks? 
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/297#discussion_r479888823" expanded>

Maybe the use of a new line character at the end of every statement can reduce the amount of repeated code?
</panel>

</panel>

<panel type="info" header="### 274. TAN SU YIN `@tnsyn` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/431#discussion_r481238745" expanded>

Should these exception classes be moved into separate files for better abstraction? 
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/431#discussion_r481239793" expanded>

Should these constants be named in uppercase and separated with underscores between words? 
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/431#discussion_r481242867" expanded>

It would be good to make this portion of code more readable! For example, maybe you can consider using switch statements in place of the if-else statements, and consider abstracting the relevant logic into separate methods? 
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/179#discussion_r481209572" expanded>

I like this quirky error message
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/179#discussion_r481210811" expanded>

Very minor comment, but should there be a space between the word DukeException and the bracket beside it?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/179#discussion_r481217355" expanded>

Should there be breaks for each case? Or, if break statements were left out intentionally, should there be explicit //Fallthrough comments? 
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/179#discussion_r481220275" expanded>

Should the TypeOfCommand parameter be named in camelCase (i.e. typeOfCommand) instead? 
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/179#discussion_r481222541" expanded>

Should this boolean be named to sound more like a boolean instead (e.g. isCompleted)? 
</panel>

</panel>

<panel type="info" header="### 275. NG SONG GUAN `@sgn00` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/367#discussion_r479965735" expanded>

Perhaps consider not using wildcard imports?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/367#discussion_r479966525" expanded>

Should case clauses be indented?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/367#discussion_r479967795" expanded>

Should this comment start with "Creates" or "Create"? I noticed this issue in several other places too.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/367#discussion_r479968731" expanded>

Perhaps consider using isClosed instead of Closed? This will make it sound more like a boolean.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/120#discussion_r479973794" expanded>

Perhaps consider splitting this method into several methods and using switch-case statements? This could reduce the length and nesting of the method.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/120#discussion_r479976695" expanded>

Perhaps consider using a clearer variable name such as deadlineDate?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/120#discussion_r479981460" expanded>

This method name sounds like a noun. Perhaps change it to something like formatForSaving?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/120#discussion_r479984363" expanded>

Could consider using String.format instead of string concatenation for better readability.
</panel>

</panel>

<panel type="info" header="### 276. KAITLYN NG KE YI `@kaitlynng` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/218#discussion_r481365414" expanded>

Perhaps this can be edited as the filepath could change!
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/218#discussion_r481366178" expanded>

I like how you load and parse the data!
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/218#discussion_r481366755" expanded>

Another possible way to do this it to define a DateTimeFormatter pattern and directly parse with that pattern.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/218#discussion_r481368659" expanded>

Since this is done for any task that is timed, perhaps this can be abstracted out into a parent class? 
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/196#discussion_r481083670" expanded>

Perhaps put a space after Task to comply with coding standards? 
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/196#discussion_r481084196" expanded>

Perhaps put a space between the '+' to comply with coding standards?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/196#discussion_r481084600" expanded>

Perhaps you can change the description for the return statement, as it does not give any additional information not present in your description!
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/196#discussion_r481087391" expanded>

Perhaps all of this can be handled by the parser as well, as these are all commands?
</panel>

</panel>

<panel type="info" header="### 277. MUHAMMAD IQBAL B IMRAN `@iqbxl` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/421#discussion_r482182974" expanded>

Could leave a blank line here to follow coding standard.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/421#discussion_r482183483" expanded>

Try not to use wildcards and instead state all explicit imports.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/421#discussion_r482183937" expanded>

The plus sign should be at the start of the next line to follow coding standard.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/421#discussion_r482184420" expanded>

Can perhaps add java docs for the override methods here.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/46#discussion_r482177717" expanded>

Perhaps you can add java docs for this method?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/46#discussion_r482178407" expanded>

Maybe can add java docs for this method as well.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/46#discussion_r482179723" expanded>

Good job following the module's coding style of indentation for the switch case!
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/46#discussion_r482181411" expanded>

Perhaps a bit lengthy code here? Not sure if some parts could be abstracted out of the execute method......
</panel>

</panel>

<panel type="info" header="### 278. TAN HONG JIE URIEL `@urieltan` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/272#discussion_r480248261" expanded>

Should the code commented be deleted? 
Coding standards state that all comments must be in english. Perhaps the previous code can be accessed by looking through the change history rather than comments.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/272#discussion_r480254104" expanded>

Should the class have a Javadoc comment as well? I noticed your classes seem to be missing comments for the class.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/272#discussion_r480255755" expanded>

Should your other classes be in the same package? I noticed only this file has the package line.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/272#discussion_r480257871" expanded>

Should we delete this comment? This is a very large code comment. Perhaps we can reference this in the code diffs instead of leaving it as part of the code base?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/272#discussion_r480268317" expanded>

Should we spill this line over to the next? It seem a little too long.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/272#discussion_r480268774" expanded>

Should we replace this with the specific import instead of the wildcard?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/179#discussion_r480280435" expanded>

Would you consider using a switch case here too? 
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/179#discussion_r480286134" expanded>

Should handle be further split up into separate methods? I believe the handle method was created to help shorten the parse method, however that resulted in handle being a long method.
</panel>

</panel>

<panel type="info" header="### 279. XU ZENG `@Royxuzeng` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/302#discussion_r481239992" expanded>

Perhaps a more intuitive variable name here? Maybe it can be changed to a name like storeLists because the data type is an arrayList.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/302#discussion_r481241300" expanded>

I think maybe this line can be split into two lines because it is a bit too long.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/302#discussion_r481243534" expanded>

I think logic units within a block can be separated by a blank line to improve readability.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/302#discussion_r481249743" expanded>

I like how straightforward the logic of this code is.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/26#discussion_r481276531" expanded>

I like how you changed the variable name to be more intuitive.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/26#discussion_r481278055" expanded>

I like how you inserted the blank line to different units within a block.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/26#discussion_r481287135" expanded>

Maybe certain parts of the class can be extracted out because it is a bit too long.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/26#discussion_r481289765" expanded>

Maybe certain parts of this code can also be extracted out to improve readability?
</panel>

</panel>

<panel type="info" header="### 280. YANG YUE `@YangYue128-helen` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/259#discussion_r481118495" expanded>

I like how you catch the exceptions when parsing the string!
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/259#discussion_r481123997" expanded>

Nice to follow the coding standard!
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/238#discussion_r481130747" expanded>

I think there are other actions as well. Is it better to involve LIST EXIT FIND into the ActionType?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/238#discussion_r481132934" expanded>

I think it's better to end the description with a '.' and the same for the descriptions of parameters. I noticed the same issue in several other places too.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/238#discussion_r481136273" expanded>

I think it's better to use a split() function to deal with the input since in this case, you cannot handle the situation when the user types in a message with a lot of white spaces.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/238#discussion_r481137808" expanded>

I think it is better to separate line 24 into two lines.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/238#discussion_r481139503" expanded>

I think the define statements do not follow the coding standard.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/238#discussion_r481140339" expanded>

I think the name of the constant should be in capital form. I noticed the same issue in several other places too.
</panel>

</panel>

<panel type="info" header="### 281. TAN HIN KHAI, STEPHEN `@blackonyyx` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/318#discussion_r480846996" expanded>

Class Script is very well documented good job for the extensive documentation.

However Have some concerns regarding the addition of static modifier to many class methods 
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/318#discussion_r480848678" expanded>

Good use of an example in the documentation. Thanks for showing this way to make documentation more clear!
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/318#discussion_r480850087" expanded>

Interesting use of Exceptions to cover up for Java System Exceptions thrown.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/318#discussion_r480854882" expanded>

Boolean Variables should be named to sound like booleans, consider renaming to isExited or some other such boolean sounding name
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/318#discussion_r480858284" expanded>

test cases should be in featureUnderTest_testScenario_expectedBehavior() format even if it is a assertion of a hardcoded enumeration
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/318#discussion_r480858881" expanded>

Similarly snake case and naming scheme as mentioned in usercommand tests.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/318#discussion_r480860695" expanded>

Also would be good to add a javadoc on what the test is supposed to be about to make it clearer to reviewers what is the expected behaviour for the Unittest
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/318#discussion_r480861893" expanded>

JDoc guidelines suggest we should phrase constructors is like so :
Constructs....
</panel>

</panel>

<panel type="info" header="### 282. JOSIAH EZEKIEL KHOO SHAO QI `@josiahkhoo` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/409#discussion_r481033046" expanded>

Should there be indentations for case clauses?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/409#discussion_r481034937" expanded>

Perhaps you can standardize whether to break before an operator or after an operator?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/409#discussion_r481037425" expanded>

Should the setter method for isComplete follow the form of `void setComplete(boolean isComplete);`?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/409#discussion_r481040084" expanded>

I am with @raythx98 on this, perhaps you can make use of your Parser and Storage class?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/250#discussion_r481050411" expanded>

The method name `isEmpty` can possibly come off as vague, perhaps the method can be named `hasEmptyDetails` to reflect that it is determining if the detail in the input is empty.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/250#discussion_r481052668" expanded>

Would it be better if your print statements were moved to the `Ui` class? It seems that both the methods found in `TaskList` and the methods found in `Ui` print directly to the user.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/250#discussion_r481055683" expanded>

Variable name `duration` might come off as misleading. I would think that `duration` implies how long the `Event` would last rather than when the `Event` is.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/250#discussion_r481060005" expanded>

The nested logic for `parse` seems a bit complex... perhaps you might want to abstract it further?
</panel>

</panel>

<panel type="info" header="### 283. JORDAN YOONG JIA EN `@jordanyoong` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/195#discussion_r481832740" expanded>

Can consider changing to private and using getter to access.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/195#discussion_r481834472" expanded>

Can consider splitting into declaration then .run().
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/195#discussion_r481836199" expanded>

Can consider making private, accessed with getter.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/195#discussion_r481837252" expanded>

Better name to name the scanner?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/195#discussion_r481837609" expanded>

Can just return loadedTasks?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/140#discussion_r481841329" expanded>

Comment should not state the obvious
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/140#discussion_r481975105" expanded>

Comment is missing the empty line between description and parameter.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/140#discussion_r481975797" expanded>

@return type might be good to start with String representation of the deadline. Capitalize the data type for more clarity.
</panel>

</panel>

<panel type="info" header="### 284. LIM ETHAN `@ethan-l-m-e` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/350#discussion_r481020329" expanded>

missing a JavDoc?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/350#discussion_r481025194" expanded>

'''suggestion
        boolean reachedEndOfTaskList = (num == tasks.size() - 1);
        String lineBreak = reachedEndOfTaskList ? "" : "\n  ";
'''
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/350#discussion_r481031512" expanded>

'''suggestion
        return this.taskType + " | " 
                + (this.isDone ? "1" : "0") + " | " + this.description;
'''
sry.. Break b4 operator?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/350#discussion_r481038799" expanded>

'''suggestion
        } else if (arr[0].equals("E")) {
            task = new Event(arr[2], arr[3]);
        } else {
            throw new DukeException("Save file is corrupt ┐('～';)┌")   
        }

'''
maybe include default else branch?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/120#discussion_r480956088" expanded>

I like that 'todos' does indicate multiple todo tasks by using plural form.
I think it could it be a bit better to use more distinctive names between todo and todos? But not really needed though.🦖 
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/120#discussion_r480963535" expanded>

Put TaskList and Task together? 🌮 
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/120#discussion_r480981183" expanded>

To make it clearer that it is intentionally left blank rather than accidentally?
'''suggestion
// proceed to do nothing
'''
Although I admit the name DoNothingCommand does already make it obvious.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/120#discussion_r480982809" expanded>

I don't like that there are some catch blocks are followed by a blank line while others do not.
Better if all were consistent?
</panel>

</panel>

<panel type="info" header="### 285. TAN ZHUO YAO `@tanzhuoyao-nus` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/346#discussion_r482077898" expanded>

Small typo error here. I think you meant "done" instead of "donw".
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/346#discussion_r482079298" expanded>

Correct me if I am wrong but I think "Arges" is a typo.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/346#discussion_r482083039" expanded>

I think the parameter can be taskList (in camelcase).
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/346#discussion_r482083641" expanded>

I think the parameter can be renamed to taskList (in camelcase).
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/299#discussion_r482093067" expanded>

This could have been named HORIZONTAL_LINE as a constant, which will give the reader a better idea on what it is.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/299#discussion_r482096438" expanded>

Boolean variable can be renamed to something like "isFound" or "doesExist".
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/299#discussion_r482098036" expanded>

I think this variable can be named as "description" to give the reader a better idea.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/299#discussion_r482098794" expanded>

Task object could be named as deadLine here instead of dl.
</panel>

</panel>

<panel type="info" header="### 286. HONG KUN NAN `@kunnan97` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/343#discussion_r479961629" expanded>

Maybe there is no need to state that it is an overridden method.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/343#discussion_r479962491" expanded>

Be wary when a method is longer than the computer screen, and take corrective action when it goes beyond 30 LOC (lines of code). The bigger the haystack, the harder it is to find a needle. - https://nus-cs2103-ay2021s1.github.io/website/se-book-adapted/chapters/codeQuality.html
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/343#discussion_r479964574" expanded>

Method names should contain verbs, seems like some other methods have this issue too
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/85#discussion_r479950948" expanded>

I believe operators(e.g. =) should be surrounded by 1 space? Seems like this happens at other places too. Could be because I am referring to Java's coding standard. Not sure if Kotlin follows that too.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/85#discussion_r479955134" expanded>

Packages imported should group in a better way.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/85#discussion_r479955520" expanded>

Some spacing issues here
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/85#discussion_r480039775" expanded>

oh oops I think I got confused between the java and ikura packages, ignore this please.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/85#discussion_r480040028" expanded>

Alright then all is good!
</panel>

</panel>

<panel type="info" header="### 287. WU PEIRONG `@peironggg` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/435#discussion_r481210420" expanded>

The Java coding standard does not seem to specify if "this" is recommended or not recommended so both is probably good. Personally, I also prefer to use "this" in my constructors because I like to know what fields I'm setting!
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/435#discussion_r481228718" expanded>

Would renaming the field `by` to `deadline` make this field more easily understood?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/435#discussion_r481229630" expanded>

I think it is good naming of the boolean variable as `isDone` with the emphasis instead of `done`!
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/435#discussion_r481230773" expanded>

I think the Java coding standard specifies a break between the method description and start of `@param`.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/90#discussion_r481236219" expanded>

This may just be the formatting being off on my screen, but there may be a newline between the arguments to the `Event` constructor. If all appears right on your screen, my apologies!
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/90#discussion_r481237318" expanded>

Is there a reason the program checks if the file exists when an exception is thrown?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/90#discussion_r481238083" expanded>

I like your use of enums to simplify your program and communicate your ideas more clearly!
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/90#discussion_r481240463" expanded>

Instead of spaces maybe we can use `\t`?
</panel>

</panel>

<panel type="info" header="### 288. CHEW HOA SHEN `@chshen1998` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/298#discussion_r480224178" expanded>

Should this be camel case? (e.g. listOfContents)
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/298#discussion_r480225004" expanded>

Should this be camel case? (e.g. numOfTasks)
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/298#discussion_r480226879" expanded>

Should this be camel case?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/298#discussion_r480228680" expanded>

Is it necessary to have a description for constructor?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/109#discussion_r480253373" expanded>

Is there any reason for the empty lines?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/109#discussion_r480254936" expanded>

The commented out code could maybe be placed under the code that is still relevant or be removed?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/109#discussion_r480256317" expanded>

Maybe naming the method with a verb will be more descriptive
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/109#discussion_r480257061" expanded>

Is there a way to give the method a more descriptive name?
</panel>

</panel>

<panel type="info" header="### 289. XIE YAOREN `@BILLXYR` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/470#discussion_r480158489" expanded>

From the websites it says that : "Plural form should be used on names representing a collection of objects."
So I think perhaps it should be taskLists instead of taskList.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/470#discussion_r480161129" expanded>

the websites says: "Class variables should never be declared public"
So, perhaps it should not public.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/470#discussion_r480161551" expanded>

the websites says: "Class variables should never be declared public"
So, perhaps it should not public.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/470#discussion_r480161636" expanded>

the websites says: "Class variables should never be declared public"
So, perhaps it should not public.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/470#discussion_r480161732" expanded>

the websites says: "Class variables should never be declared public"
So, perhaps it should not public.

</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/470#discussion_r480161808" expanded>

the websites says: "Class variables should never be declared public"
So, perhaps it should not public.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/251#discussion_r480171496" expanded>

The textbook says: "Distinguish clearly between single-valued and multivalued variables."
Here I assume the taskList should be many tasks inside the list?
So perhaps it should be taskLists instead of taskList
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/251#discussion_r480178427" expanded>

The book says: "A name is not just for differentiation; it should explain the named entity to the reader accurately and at a sufficient level of detail."
perhaps you can change the "name" variable to a more meaning name, such as taskName.
</panel>

</panel>

<panel type="info" header="### 290. SO WAI YEIN ETHAN `@ethanso56` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/272#discussion_r483914108" expanded>

I think you are missing a javadocs header here
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/272#discussion_r483914184" expanded>

This method is a little too long. Maybe you would like to abstract some of it out?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/272#discussion_r483914273" expanded>

Maybe you would like to remove these commented out lines?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/272#discussion_r483914343" expanded>

Maybe all warnings shouldn't be suppressed?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/266#discussion_r480144195" expanded>

I like how every message is in a constant.


</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/266#discussion_r483914581" expanded>

This public class is missing a header comment for javadocs
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/266#discussion_r483914808" expanded>

Might be better to give a plural name for arrays
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/261#discussion_r480158042" expanded>

Maybe these names could be changed to something clearer like doneNum?
</panel>

</panel>

<panel type="info" header="### 291. BALASUBRAMANIAM PRAVEEN `@pr4aveen` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/368#discussion_r481920033" expanded>

Should there be an empty line between description and parameter section?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/368#discussion_r481921651" expanded>

Perhaps you can list the imported classes explicitly here?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/368#discussion_r481924915" expanded>

Should this be named isDone instead?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/368#discussion_r481926885" expanded>

Perhaps you can remove the indentation for case clauses?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/367#discussion_r481948817" expanded>

Perhaps you can consider having this as a protected variable in the Task class?

This way, you won't be repeating yourself. Also, if you have more task types in the future, you will have to keep making copies of this file. Changes to the format style can also be made in one place instead of multiple.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/367#discussion_r481953436" expanded>

Perhaps you can abstract the process of making a storage string?

By this, I mean that you can have a method in your ToDo, Event and Deadline classes to generate the string that is going to be saved to storage.

I believe that this might make your code more readable.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/367#discussion_r481954851" expanded>

Can this line throw an exception? If so, does it need to be handled?


</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/367#discussion_r481958079" expanded>

Can I check why this method is needed?

Can't the static print method just be called directly?
</panel>

</panel>

<panel type="info" header="### 292. KOH ZHE HAO `@KOH-ZHE-HAO` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/296#discussion_r481642336" expanded>

I think no indentation is needed for the "cases" after a switch clause. 

I think the current design is nice and very easy to read because you make sure of enum, etc. Another alternative approach I can think of is to make use of polymorphism.For example, you can declare Command as an abstract parent class and let its subclasses override a common execute method. I believe this should shorten your code in your main class.  
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/296#discussion_r481655332" expanded>

I like it that you ident and organize your code neatly which makes it easy to read (no diamond shape if-else clauses). 
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/296#discussion_r481660493" expanded>

i think it is not encouraged to put dummy value like empty string as a return value cuz it might cause confusion. Maybe we can declare Task as an abstract class because there is no need to instantiate Task instance. So, in this case, we can make storageForm abstract and force the subclasses to override this method to carry out the specified behavior. 
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/190#discussion_r481568514" expanded>

I believe that your code has taken care of the situation where the description of the task is a short phrase such as "finish this" indicated in your example, but maybe you can consider using things like | to separate components as demo by the website rather than using a white space. I personally think that will be clearer. 
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/190#discussion_r481573098" expanded>

I like that you add a little comment besides code that might need extra work in the future. But should the comment be placed on top of the code instead of the right side?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/190#discussion_r481575732" expanded>

I like your approach that declares keywords as constants upfront. 
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/190#discussion_r481580694" expanded>

I like your use of Optional and Lambda here. I also like the way you specify a DateParser that is responsible for converting String to a LocalDate. 
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/190#discussion_r481626049" expanded>

Maybe it should start with a verb?
</panel>

</panel>

<panel type="info" header="### 293. NGUYEN KHANH DUY `@duynguyen24501` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/158#discussion_r480758422" expanded>

findResult sounds a bit like verb I think. Probably we change to another name such as taskListResult?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/158#discussion_r480763882" expanded>

Should we group it into javafx.scene statements above as well? 🤔 
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/158#discussion_r480774770" expanded>

'result' is quite a general name and does not show it's a list of tasks. Maybe we can consider changing it to tasksResult? 
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/23#discussion_r481104261" expanded>

Will it be clearer if we rename it to something like isValidCommand()? 🤔 
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/23#discussion_r481110011" expanded>

Will it be better if we change class name "AddTodoCommand" which sounds like a verb to TodoCommand? 
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/23#discussion_r481122255" expanded>

You can consider naming it as "parseCommand" instead of "parseAdd" to make it a bit clearer? 🤔 
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/23#discussion_r481124267" expanded>

The idea of overriding equals method is great! 👍 
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/23#discussion_r481127491" expanded>

Just a small thing, I think we should change it to "printExitMessage"? 
</panel>

</panel>

<panel type="info" header="### 294. LUCIA TIRTA GUNAWAN `@luciatirta` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/237#discussion_r482896050" expanded>

According to the module coding standard, static import statement should be placed above other import statements, and the non-static import statements should be placed in a single blocks (no blank lines separator)
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/237#discussion_r482897199" expanded>

Could perhaps rename ls to taskList to make it clearer
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/237#discussion_r482901377" expanded>

variable name index is quite unclear, perhaps could change to numberOfTasks
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/237#discussion_r482902924" expanded>

Could split the print statement into few lines (this line is more than 120 characters)
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/237#discussion_r482912026" expanded>

All the `+` sign should be at the beginning of the next line.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/63#discussion_r483028526" expanded>

Could perhaps consider using Enums for the type of commands
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/63#discussion_r483039619" expanded>

The function name printNewTask() seems like a void function. Since it returns the string representation of the new task, maybe can consider newTaskToString(). Same comment with other similar functions in this file.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/63#discussion_r483052161" expanded>

Static import statement should be placed above other import statements
</panel>

</panel>

<panel type="info" header="### 295. TAN XI ZHE `@patricktan6` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/199#discussion_r481951276" expanded>

Maybe it is better to name the object with another better name that describes the object better?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/199#discussion_r481951717" expanded>

Perhaps it is better to set isExit as a boolean attribute?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/199#discussion_r481954119" expanded>

I think it will be better to indent four spaces before the '+' as this is break of a statement.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/199#discussion_r481955136" expanded>

Maybe it is better to name the method as decideDeleteIndex as the index is the most concerned word.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/115#discussion_r481929723" expanded>

I personally think it is better to add a blank line after this import statement.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/115#discussion_r481930686" expanded>

I would prefer having a blank line after the attributes.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/115#discussion_r481932357" expanded>

I think placing the '+' in front of every line is better.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/115#discussion_r481937618" expanded>

It would be better to leave a line after the description.
</panel>

</panel>

<panel type="info" header="### 296. WAYNE TAN KIN LUN `@tanwayne890` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/469#discussion_r480810462" expanded>

I notice you are trying to mark a task as done. Would it be better if you rename your method to verb? For example, markTaskDone.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/469#discussion_r480816705" expanded>

Is there any spacing errors?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/469#discussion_r480822350" expanded>

Is it better to understand a variable or method if you use noun for variable/class and verb for methods/functions?
🤔 
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/469#discussion_r480826979" expanded>

I am glad that all of your code is maintained below the line length limit which is below 120 char, so the code view is better. 👍 
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/469#discussion_r480828295" expanded>

Would the readability improve if you break the line before operator? 🤔 
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/469#discussion_r480830482" expanded>

Would the code more readable if you use extra method to handle the conditions? 🤔  
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/145#discussion_r480709695" expanded>

I notice this method code is very long. Will it be look nicer if you handle each condition by using another method instead of putting all of them in one method? 🤔 
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/145#discussion_r480718818" expanded>

I like how you handle all Ui messages for user in Ui class 👍 
</panel>

</panel>

<panel type="info" header="### 297. SAAD HAIDER `@halcon-blanco` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/112#discussion_r479800741" expanded>

I like this! Follows the coding style guide almost to the tee 😄 
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/112#discussion_r479800879" expanded>

Not to be pedantic, but to keep in line with the coding standard, should there be a new line at the end? I've seen similar things in other files as well.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/112#discussion_r479801286" expanded>

Any reason why the class and constructor do not have javadocs? I noticed the same thing in other files too.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/112#discussion_r479801694" expanded>

Not sure I like the absence of javadocs here
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/35#discussion_r479802271" expanded>

Should the indentation be 4 spaces instead?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/35#discussion_r479802382" expanded>

Any reason why "magic numbers" were chosen over literals?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/35#discussion_r479802815" expanded>

I feel this method is too long, and too difficult for a reader to follow
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/35#discussion_r479802974" expanded>

Should the variable names be more expressive here?
</panel>

</panel>

<panel type="info" header="### 298. TAN EU ZIN `@euzintan` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/251#discussion_r483916786" expanded>

I may be mistaken, but i think the [split()](https://www.geeksforgeeks.org/split-string-java-examples/) method does this. 
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/251#discussion_r483917032" expanded>

I've noticed this is your only Exception class. I feel it would be more apt to have multiple Exception classes that extend from your DukeException, each with their own message. For example, InsufficientArgumentsException extends DukeException. 
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/251#discussion_r483917245" expanded>

Im confused about this part. You are throwing it, to catch it to throw it again without change? unless the constructors throw a different kind of Exception?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/109#discussion_r483915759" expanded>

Maybe the welcome message can be handled by the Ui?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/109#discussion_r483915883" expanded>

I'm confused about the need for this exception class. Why not just throw an Exception if there is no overriding error message
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/109#discussion_r483916094" expanded>

In relation to my comment about this exception class. Maybe overriding the toString method of this class to print the error message would be better? I understand you need the args1[0] variable also, maybe you can pass it along as an argument in the constructor of the exception?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/109#discussion_r483916191" expanded>

I may be mistaken, but if you're going to repeatedly try-catch the same exception, maybe wrap the entire if-else statement into a try-catch block?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/109#discussion_r483916366" expanded>

Good abstraction. Code is clean and it is obvious what class handles what. 
</panel>

</panel>

<panel type="info" header="### 299. ZHANG YIFAN `@theyifan` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/458#discussion_r481225105" expanded>

Perhaps you could consider re-factoring this method and make it a bit shorter so that it is more readable. 
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/458#discussion_r481227213" expanded>

I like this method's design and comments provided! A smart design for date parser. 👍 
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/458#discussion_r481228475" expanded>

I like this documentation- clearly explained the mechanism, advantages and disadvantages. 👍 
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/458#discussion_r481235258" expanded>

I like the use of stream and method chaining here- very succinct and clear.  👍 
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/67#discussion_r481211357" expanded>

It would be good if you can add a new line at the end of the file! 
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/67#discussion_r481211899" expanded>

Same goes to here, It would be good to have a new line at the end of this file! 
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/67#discussion_r481215836" expanded>

Should the first word of the Javadoc be a verb instead of a noun? Also, I believe that the first word after `@param` should have the first letter capitalised. :)
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/67#discussion_r481219379" expanded>

Perhaps a clearer naming could be used here? I feel that `foundList` sounds like a vague name that can be used for both variables and methods.
</panel>

</panel>

<panel type="info" header="### 300. VAISHAK ANAND `@VaishakAnand` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/229#discussion_r481105485" expanded>

A switch-case could make the code more elegant here :)
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/229#discussion_r481107915" expanded>

Shouldn't there be a "throws DukeException" here?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/229#discussion_r481108967" expanded>

Should add a "throws DukeException" here as well! Unless i'm mistaken
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/68#discussion_r481089906" expanded>

Agreed ^
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/68#discussion_r481092518" expanded>

This usage of if - else works for sure, but perhaps the use of switch - cases would be more appropriate in this case.
Minor issue tho xD
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/68#discussion_r481096617" expanded>

Great use of enhanced for-loop and enum to allow for multiple date formats input by the user 👍 
Did not think of this at all :)
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/68#discussion_r481098381" expanded>

^ I disagree, I think all the needed abstraction is already done. I might be wrong tho
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/68#discussion_r481098835" expanded>

This access modifier can be set to private, since there's a setter method and a getter method for the correct symbols already implemented.
</panel>

</panel>

<panel type="info" header="### 301. LOW SHU MIN SAMANTHA `@samlsm` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/401#discussion_r480940656" expanded>

Perhaps it might be better to check if` taskList.isEmpty()` at the start so as to avoid deep nesting? Or maybe it would be good to create a method that checks if the `taskList` is empty so as to avoid code duplication.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/401#discussion_r481089614" expanded>

Maybe it might be better to explicitly list the files you are importing instead of importing all the files? 
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/401#discussion_r481123928" expanded>

perhaps it would be good to have an empty line between the descriptions and parameters.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/401#discussion_r481128662" expanded>

Also, perhaps it would be great to split up this long method to shorter ones?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/238#discussion_r480718428" expanded>

Using `isExit` for the boolean looks great. Perhaps `shouldExit` would be a better name for this method?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/238#discussion_r480758354" expanded>

perhaps `FORMATTER` would be a better name for constants?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/238#discussion_r480916817" expanded>

Perhaps `ERRORMESSAGE` would be a better name?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/238#discussion_r480928587" expanded>

this variable name is clear and sounds like a boolean. Great naming
</panel>

</panel>

<panel type="info" header="### 302. TAN CHANG RI, GABRIEL `@gabztcr` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/377#discussion_r482727946" expanded>

Is the period supposed to be there?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/377#discussion_r482728860" expanded>

Is there a missing punctuation mark for the error message?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/377#discussion_r482731045" expanded>

I don't think this is grammatically correct. However, the more crucial point is regarding the method name: What is the subject being referred to here, i.e. create if _what_ does not exist? (to consider renaming)
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/377#discussion_r482731424" expanded>

Do you mean _loadSavedFile()_?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/377#discussion_r482732572" expanded>

I like how clean and straightforward this file is. Good job!
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/362#discussion_r482718130" expanded>

Does tryParseDatetime() imply that it may not be "parsable" in some cases? If yes, would you consider throwing an error? And if no, perhaps consider giving it another variable name.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/362#discussion_r482720427" expanded>

I love how you aligned the params' descriptions here and elsewhere in your code. It does improve readability 💯 
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/362#discussion_r482723013" expanded>

Huge chunk of code here but because of great coding standards, they are understandable. Good job!
</panel>

</panel>

<panel type="info" header="### 303. FOO JING YI `@foojingyi` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/444#discussion_r482802180" expanded>

You may want to change these comments to single line Javadoc comments e.g. `/** Scanner to read input */`.
This would also apply to any class members in other classes 😅 . (You can look for the example "Javadoc of class members can be specified on a single line as follows" in the [conventions page](https://se-education.org/guides/conventions/java/intermediate.html#comments)! 😄 )
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/444#discussion_r482804338" expanded>

Maybe you could add a period (".") after all sentences in longer Javadoc comments? So that punctuation is consistent and the generated Javadocs would look more complete/professional. ^^ (To be clear, this refers to other Javadoc comments as well~)
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/444#discussion_r482805906" expanded>

Maybe you could capitalise the parameter descriptions and punctuate them? Since the conventions page states that we should have "Punctuation behind each parameter description". You could also refer to the given example as reference 👍 .
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/444#discussion_r482808258" expanded>

Should "Write" be written as "Writes" instead?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/444#discussion_r482809635" expanded>

Should there be an empty line between the description and the parameter section? This styling seems to only be in certain classes and not others.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/217#discussion_r482818925" expanded>

Should there by an empty line between the description and parameter section? This also refers to other Javadoc comments 😅 .
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/217#discussion_r482822679" expanded>

Would this look clearer if the break occurred before `DateTimeFormatter`?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/217#discussion_r482825275" expanded>

Would `displayDeleted` or `displayDeletedTask` be a clearer method name?
</panel>

</panel>

<panel type="info" header="### 304. KANG SU MIN `@kkangs0226` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/271#discussion_r482174597" expanded>

I think you could use a clearer name for boolean so that we know it is a boolean value such as isDelete or shouldDelete:)
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/271#discussion_r482175449" expanded>

It would be better to name the variable "tasks" in this case as we would want to differentiate between single and multi-valued variable!!
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/271#discussion_r482176187" expanded>

I agree, using StringBuilder with append() method would improve the runtime of your code!!:)
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/271#discussion_r482181845" expanded>

I like the way you used %s %c for your string representations, ive never thought of doing this before!! It looks great:)
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/199#discussion_r482154930" expanded>

I think the recommended JavaDoc for methods with parameters is that you describe the parameter in a one-liner, so maybe "@param command command of user" would be better!
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/199#discussion_r482163962" expanded>

As above, here you could include the description of your parameter
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/199#discussion_r482166232" expanded>

I think according to coding standards they recommended that we put plural form for collections such as lists, so here maybe 'tasks' would be a better variable name!
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/199#discussion_r482167742" expanded>

I think according to coding standards it should be currName and not currname!
</panel>

</panel>

<panel type="info" header="### 305. XIN ZHE `@xz0127` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/446#discussion_r481164587" expanded>

Perhaps add a description to the parameter name in the Javadoc comments to make it clearer?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/446#discussion_r481166094" expanded>

Perhaps add a description for the return value for Javadoc comments to make it more complete? I noticed this issue in several other places as well.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/446#discussion_r481166668" expanded>

I like the way the if-else conditions are constructed. They are really clear!:) 👍 
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/446#discussion_r481171333" expanded>

Should this part be extracted out? Perhaps consider creating multiple command class to handle different commands in order to improve the readability of following command method? :)
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/100#discussion_r481124384" expanded>

Perhaps use verbs for this and the following methods' names?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/100#discussion_r481126793" expanded>

I like how you write the Javadoc comments. They are really clean and clear! 👍 
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/100#discussion_r481144123" expanded>

Perhaps it would be better if the space between the parameter name and description is consistent? 
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/100#discussion_r481152861" expanded>

Perhaps it would be clearer if the comment contains a phrase rather than a word(e.g // Handle Todo)? 
</panel>

</panel>

<panel type="info" header="### 306. CHRYSTAL QUEK WAN QI `@chrystalquek` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/459#discussion_r479929753" expanded>

Perhaps it could be indented 8 spaces more than the parent line?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/459#discussion_r479931922" expanded>

Maybe an empty line between description and param section?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/459#discussion_r479936141" expanded>

Perhaps punctuation behind each parameter description could make it look neater
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/459#discussion_r479936340" expanded>

Since this attribute is initialised for each new Ui, would it be interpreted as a constant? If it is not a constant, could the naming be improved?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/459#discussion_r480566614" expanded>

Apologies, on further thought I think the indentation adheres to the coding standards.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/459#discussion_r480575069" expanded>

I believe there is no clear guideline on this, but generally if that attribute is going to be the same for all Ui objects, my personal preference would be to initialize it when it is declared.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/121#discussion_r479941555" expanded>

Maybe it could be named as an action?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/121#discussion_r479942157" expanded>

Maybe could specify what you are loading?
</panel>

</panel>

<panel type="info" header="### 307. WILINE TAN `@wilinetan` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/119#discussion_r481281235" expanded>

I like how you used a switch statement to check for the different commands.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/119#discussion_r481282265" expanded>

I like how you abstracted away the commands into a command class
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/119#discussion_r481282572" expanded>

I like how you used an enum class to declare the commands
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/119#discussion_r481283329" expanded>

I like how you abstracted the output into different functions
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/39#discussion_r481285254" expanded>

I like how you used a switch statement to check for the type of command
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/39#discussion_r481285952" expanded>

I like how you used an enum class for the different commands
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/39#discussion_r481288875" expanded>

Perhaps the variable name can just be pos? 
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/39#discussion_r481289315" expanded>

The empty spaces might not be required?
</panel>

</panel>

<panel type="info" header="### 308. EKAM SINGH PANDHER `@EkamSinghPandher` (7 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/415#discussion_r481919437" expanded>

Really good Parser class, abstracts all unnecessary work to other classes 
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/415#discussion_r481923563" expanded>

Really nice Task classes as well.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/87#discussion_r481903245" expanded>

Styling error, no need for the this keyword. 
'''suggestion
        return usage;
'''
Additionally, I think perhaps you should shift away from the enum methodology of splitting commands as you lose alot of the functionality of having separate classes for each command. However, for the moment it seems to work well so this is only for projects where the functionality of each command is large.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/87#discussion_r481907951" expanded>

By using a Class based system for the commands rather than enums, the parser can be simplified greatly by abstracting all the exception handling as well as all the UI based responses. As the project grows it will allow the project to scale better, especially if commands have new functionalities added which is often the case with breadth first iterative approaches
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/87#discussion_r481908848" expanded>

The this keyword is not necessary and based on the style guide should just be,
'''suggestion
            File file = new File(filePath);
'''
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/87#discussion_r481910236" expanded>

The variable names are a little hard to understand when scanning through the code, try to just use date and time
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/87#discussion_r481911641" expanded>

Do you think you can abstract all the printing statements and errors for all your commands to your UI class since its purpose is to manage the user interface including all the error messages and command responses?
</panel>

</panel>

<panel type="info" header="### 309. LEE JIAN HUI `@Jaylenlee` (7 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/359#discussion_r479856187" expanded>

Add a " " after each ",". I noticed the same spacing problem for other areas.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/359#discussion_r479858529" expanded>

Perhaps you mean stringToBoolean?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/123#discussion_r479861001" expanded>

Can be more clear on method name perhaps? Like parseCommandInput for example.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/123#discussion_r479861426" expanded>

More ideal perhaps to close scanner after use.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/123#discussion_r479861839" expanded>

May be more efficient speed wise to concat every line and make it into a constant variable.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/123#discussion_r479862644" expanded>

Change the method to abstract if you intent for the child classes to set their own logic.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/123#discussion_r479862987" expanded>

Constant need to be full CAPS
</panel>

</panel>

<panel type="info" header="### 310. PHIANNE CALISTA IO `@CalistaIo` (7 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/439#discussion_r482041408" expanded>

Maybe you could consider creating a UI class that is in change of outputting messages to the user?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/439#discussion_r482042478" expanded>

Maybe not a good idea to use "listOfStuff" as a name since it's too generic, perhaps can use "tasks" instead?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/439#discussion_r482043029" expanded>

Take note of the whitespace that needs to be added after and before "{", "}"
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/439#discussion_r482044060" expanded>

In the future, I think it will be a good idea to refactor the code here into several classes (i.e. storage, ui, etc) for better readability and organisation
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/167#discussion_r482032341" expanded>

Since taskList is a collection, would it be a good idea to use a plural name like tasks instead?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/167#discussion_r482034787" expanded>

Perhaps can change the function name to include a verb e.g. getScenarios?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/167#discussion_r482035671" expanded>

Nice use of switch statement, really easy to read the code. 👍 
</panel>

</panel>

<panel type="info" header="### 311. KHOONG WEI KIT `@khoongwk` (7 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/328#discussion_r482938117" expanded>

Perhaps it would be better to initialize these members in a constructor?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/328#discussion_r482940520" expanded>

Maybe getTimeMarker should return an Optional<String>, so that you do not deal with null from Todo's getTimeMarker(). I think it's a better practice to avoid null values. Or perhaps shift the time-related members to Event and Deadline.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/328#discussion_r482946499" expanded>

The code here is very readable, good!
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/49#discussion_r482960003" expanded>

I like how you extended from DukeException to create more specific exceptions for different cases!
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/49#discussion_r482962025" expanded>

Perhaps you should set the access modifier to private instead of protected. Same for the Event Class.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/49#discussion_r482963982" expanded>

Consider a more meaningful name like "formatter"
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/49#discussion_r482964548" expanded>

I feel that f and sc could be renamed to more meaningful names as well rather than their abbreviations.
</panel>

</panel>

<panel type="info" header="### 312. KOH HAN MING `@KohHanMing` (7 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/414#discussion_r482764655" expanded>

Maybe you should delete these? It doesn't seem like you need them anymore
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/414#discussion_r482765722" expanded>

Maybe you should delete these too? If you want to keep old code maybe you can put them in a separate file as a backup instead?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/414#discussion_r482768605" expanded>

Perhaps you can throw the exceptions here rather than do it in Duke.java? It seems a bit strange OOP wise to have a command called "EMPTY_TASK_TODO". I think you can skip that and throw an exception immediately.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/173#discussion_r482771676" expanded>

Consider removing these commented lines if you no longer need them?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/48#discussion_r482138477" expanded>

Consider changing "commandArr" to "commands"? Coding standards say collections should be in plural form.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/48#discussion_r482145864" expanded>

Since you're already using "this" keyword, I think the param "done" can be changed to "isDone"?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/32#discussion_r482158696" expanded>

Maybe this should be a boolean attribute "isExitCommand" accessed by "isExitCommand" getter? I think "isExit" is a little unintuitive.
</panel>

</panel>

<panel type="info" header="### 313. CHUA SENG YONG, EUGENE `@eugene3231` (7 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/390#discussion_r481131914" expanded>

Perhaps you can be more specific on what things are on the list?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/390#discussion_r481134224" expanded>

Maybe the class names can sound better if they are singular instead of plural?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/390#discussion_r481134554" expanded>

Perhaps this can be named to sound like a boolean?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/390#discussion_r481140343" expanded>

Should the getListView() method be more clear on what it does?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/92#discussion_r481149708" expanded>

Perhaps the line can be broken before the operator '+' ? 
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/92#discussion_r481156242" expanded>

Maybe you can include javadocs for this command too?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/92#discussion_r481157272" expanded>

Perhaps this method can be more specific in what it does?
</panel>

</panel>

<panel type="info" header="### 314. LIN GEYU `@Lingy12` (7 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/152#discussion_r479889329" expanded>

Maybe capitalize the first letter and separate the description and parameter?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/152#discussion_r479891049" expanded>

Maybe reduce some redundant empty line for better readability? 
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/152#discussion_r479891358" expanded>

Small typo here.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/152#discussion_r479891809" expanded>

Maybe separate the method and javadoc? I know this is a check style issue, but I still feel that separate them makes more sense, so I suppress the warning. If I'm wrong, just correct me. Thanks. 
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/152#discussion_r479892594" expanded>

Maybe add comment and separate logical block? Eg. Add `// Parse command` here
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/152#discussion_r479892855" expanded>

Maybe the line should belong to UI?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/152#discussion_r479893012" expanded>

Maybe here should indent the line?
</panel>

</panel>

<panel type="info" header="### 315. PANG BIAO YI `@schoolex` (7 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/402#discussion_r480846120" expanded>

Should the naming of the ArrayList be more explicit? i.e Tasks or taskList
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/402#discussion_r480846551" expanded>

Should the method name be in plural form? i.e getNumOfTasks()
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/25#discussion_r480859688" expanded>

Should the method name be revised to include a verb? i.e printWelcomeMsg()
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/25#discussion_r480864266" expanded>

Should the method name be revised to include a verb? i.e getSize()
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/25#discussion_r480865585" expanded>

Should the param for this method be more explicit? i.e String msg
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/25#discussion_r480871199" expanded>

Should there be a Javadoc describing the class?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/25#discussion_r480889559" expanded>

Should this be explicitly named tasksContainingKeywords instead? 
</panel>

</panel>

<panel type="info" header="### 316. BOH CHENG HIN `@bchenghi` (7 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/426#discussion_r480192242" expanded>

This method might be a little long?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/426#discussion_r480192980" expanded>

loop as a method name, could it be a little vague?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/426#discussion_r480229429" expanded>

I think class names should be singular?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/426#discussion_r480235259" expanded>

Method name might be a little vague? Since the method returns a list.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/426#discussion_r480237751" expanded>

Perhaps method names can be verbs or actions?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/283#discussion_r480176568" expanded>

I think public methods should have comments?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/283#discussion_r480178597" expanded>

I think if else statements should have curly brace?
</panel>

</panel>

<panel type="info" header="### 317. LEE PENN HAN `@pennhanlee` (7 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/275#discussion_r480908337" expanded>

Will it be better to list out all the classes in the package following the coding standards? 
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/275#discussion_r480911214" expanded>

Maybe it will be better to put inbuilt java classes on top of custom packages to follow the coding standards
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/275#discussion_r480911860" expanded>

Would a more descriptive method name be better?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/275#discussion_r480913049" expanded>

Maybe using Initialises instead of Initialise will be better to follow the documentation practices
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/43#discussion_r481145594" expanded>

Will it be better to keep the indents to the same level for neatness?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/43#discussion_r481150011" expanded>

Perhaps it will be better to remove all these white space to improve readability
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/43#discussion_r481154331" expanded>

Might want to consider a better name eg. createToDo etc.. 
</panel>

</panel>

<panel type="info" header="### 318. DAO NGOC HIEU `@daongochieu2810` (7 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/326#discussion_r480061798" expanded>

This could be handled by a `Parser` class
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/326#discussion_r480063202" expanded>

Shouldnt different classes be put into different files ?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/326#discussion_r480064026" expanded>

I think this function name should be more expressive
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/261#discussion_r480049551" expanded>

You might want to use the low dash to separate words in this enum value.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/261#discussion_r480050432" expanded>

This chunk of code can be truncated by using a parent class of all exceptions.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/261#discussion_r480052361" expanded>

The Command class should only handle common operations among commands, specific operations like matching can be put inside subclasses.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/261#discussion_r480059329" expanded>

Testing `addTask()` and `deleteTask()` with the length of taskList might not be enough. You may want to check the newly added/deleted task also.
</panel>

</panel>

<panel type="info" header="### 319. ONG YING GAO `@StopTakingAllTheNames` (7 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/348#discussion_r483915439" expanded>

You might want to put punctuation here. According to the [coding standard](https://se-education.org/guides/conventions/java/intermediate.html#comments), the first line should be a sentence, and every parameter description (`@param` in this case) should be punctuated with a full stop.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/348#discussion_r483915767" expanded>

Instead of wildcard imports, you may want to show every `duke` class you imported. Perhaps you may want to check your IDE settings if need be, sometimes they automatically condense all your imports from the same package if they hit a certain minimum requirement.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/348#discussion_r483916120" expanded>

Normally we use this grammatical mood (e.g. starting with "Implements") to describe our Java methods, but for classes you may want your header comment to focus on what it is, rather than what it does. For this example perhaps we could call it "Implementation of a Duke called Wyre." and then apply it to all the other classes. For example, you could refer to the JavaDoc headers for `MainController` and `DialogBox`.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/348#discussion_r483916260" expanded>

Aside the previous comment where I suggested adding punctuation, you might also wish to consider putting a blank line between the description and the parameters.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/337#discussion_r481068662" expanded>

Is there a reason for having `keepApplicationRunning`? Perhaps you could consider simply using `sc.hasNext()` instead. On that note, you might want to rename it to `isRunning` as in accordance with the coding standard.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/337#discussion_r481071605" expanded>

"bye" could technically be treated as a command. Having the "bye" command case here instead of in line 42 might cause both an inconsistency in abstraction levels and deep nesting. Perhaps you could change the `Parser.parseCommands()` method to also factor in the "bye" case, in which it would call `sc.close()`? 
This would also set `sc.hasNext()` to `false`, which naturally breaks the loop and ties in with the earlier comment.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/337#discussion_r481073720" expanded>

This is pretty deep nesting, perhaps you might want to split this off into its own private method?
</panel>

</panel>

<panel type="info" header="### 320. LEE EN HAO `@LeeEnHao` (7 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/422#discussion_r481882095" expanded>

Maybe you could elaborate a little more on the ui parameter? It appears to be abit unclear about how the ui will reply the user.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/422#discussion_r481890321" expanded>

For the separation, you could put inplace dividers as comments to 'prettier' your code. Maybe like a form of comments with format. I have found it helpful when I pick up anothers' person script to work on when they have extremely beautiful comments to make the code readable. I find that extremely easy to read as compared to just if and elses.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/366#discussion_r480034163" expanded>

Perhaps you could try adding a more elaborate description of each instruction for future reference?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/316#discussion_r480036108" expanded>

Nit: not much but I think the linebreak here is unintentional?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/215#discussion_r480040226" expanded>

This could be a typo that may throw gradle errors
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/215#discussion_r480042628" expanded>

Perhaps you could add some elaborate documentation for each instruction for future reference?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/215#discussion_r481878585" expanded>

I think this linebreak could be removed to make the code more succinct? 
</panel>

</panel>

<panel type="info" header="### 321. KIM SOL `@solkim-83` (7 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/292#discussion_r479867420" expanded>

Perhaps may be better to change the name of the method to be of more explicit verb form? :)
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/292#discussion_r479868152" expanded>

Hey I like the structure of your code here 👍 clean and easy to understand :)
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/292#discussion_r479870150" expanded>

Hey maybe it should be i++ for the for loop increment? - Not sure if this is against the coding rule, but according to the coding rule page, i++ seems to be the recommended form :) 
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/292#discussion_r479871358" expanded>

The coding rules were generally well-followed! The variable names and method names were clear/ easy to understand as well :)
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/196#discussion_r479897096" expanded>

Hey I like the structure/ design of the code for Parser! 
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/196#discussion_r479897805" expanded>

Perhaps, would it be better to create separate class for each error ("Oops" statement) that inherits from this DukeException class? Such that it displays the error message instead in the handleUserInput() method. - Just a suggestion! But it still looks good 👍 
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/196#discussion_r479897910" expanded>

I meant this kind of error statement in the first comment! 
</panel>

</panel>

<panel type="info" header="### 322. YEOH HUI QING `@yeohhq` (7 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/172#discussion_r480151856" expanded>

Maybe you can have a new empty line indentation after your package line before your import statements?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/172#discussion_r480154528" expanded>

I like how you return your output as an ArrayList<Task> to be processed later instead of immediately returning a processed string since this could improve adaptability and extensibility of your program! 👍 
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/172#discussion_r480155833" expanded>

Perhaps it would be more readable if you had the for-loop in the form of:
for (int i = 1; i < foundTasks.size() + 1; i++) ?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/146#discussion_r480167949" expanded>

If you are using IDEs such as IntelliJ, perhaps you can consider setting your preferences to not auto-optimise the import statements to avoid the IDE from replacing you import statements which seems to show you were previously aware not to use the wildcard import statement! :)
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/146#discussion_r480168670" expanded>

Is there a particular reason you decided to convert ArrayList<Task> to Task[] before returning?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/146#discussion_r480169582" expanded>

I like how you have a string output to indicate that no tasks were found :)
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/146#discussion_r480171345" expanded>

Perhaps you can add fullstops at the end of your method descriptions?
</panel>

</panel>

<panel type="info" header="### 323. KEANE CHAN JUN YU `@keanecjy` (7 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/406#discussion_r481193783" expanded>

Breaks should be done after the + operator here.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/406#discussion_r481194913" expanded>

You might have accidentally missed out the javadoc for this public method.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/406#discussion_r481195837" expanded>

Small issue here - the spaces should be avoided.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/406#discussion_r481197694" expanded>

There should be an empty line after the description of javadoc comments. Noticed a couple of this.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/406#discussion_r481200210" expanded>

You might have missed out this javadoc for the return statement. 
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/96#discussion_r481206595" expanded>

You might have missed out some javadoc comments in this java file.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/96#discussion_r481213355" expanded>

Missing some javadoc comments here in the public methods.
</panel>

</panel>

<panel type="info" header="### 324. Lim Jin Hao `@JinHao-L` (7 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/457#discussion_r481068239" expanded>

The "done" case should end with a break; statement. You might have unintentionally shifted the "done" case into the "delete" case.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/457#discussion_r481069706" expanded>

A break statement should be included for the default case too.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/253#discussion_r481092713" expanded>

Should it be "Creates a Deadline object" instead?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/253#discussion_r481095993" expanded>

I think that the {@inheritDoc} might be helpful here if the JavaDoc of the overridden method is the same.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/253#discussion_r481098375" expanded>

Should there be whitespace before the curly braces?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/253#discussion_r481108358" expanded>

Perhaps a more intuitive variable name here? For example, taskDetails
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/253#discussion_r481115517" expanded>

Just a thought of mine but perhaps these implementations could be handled by their respective command and Ui could purely be in charge of printing out the String outputs given by the execution of the commands
</panel>

</panel>

<panel type="info" header="### 325. XIA LIYI `@XIA-LIYI` (6 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/263#discussion_r482098555" expanded>

Hi, is there any special meaning you choose protected here.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/263#discussion_r482101167" expanded>

Hi, I am not sure whether it is unnecessary to check whether the length is equal to 2.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/263#discussion_r482103431" expanded>

Hi, I think it is better to name this method as getNoOfTasks.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/162#discussion_r482090293" expanded>

Hi, is there too much space here?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/162#discussion_r482092749" expanded>

Hi, some minor grammar mistakes here may make the comment not readable. Perhaps you may correct it.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/162#discussion_r482093535" expanded>

Perhaps you may include @return in JavaDoc.
</panel>

</panel>

<panel type="info" header="### 326. CHLOE LEE KE ER `@chloelee767` (6 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/372#discussion_r481086377" expanded>

Would it be better to name this method using a verb instead?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/372#discussion_r481089060" expanded>

Would it be clearer to spell out "Number" in the method name instead?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/142#discussion_r481050700" expanded>

Would it be better to list the imported classes separately?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/142#discussion_r481056147" expanded>

Would it be better to include the function parameter in the JavaDoc?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/142#discussion_r481057785" expanded>

Should this class be documented?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/142#discussion_r481061827" expanded>

Would it be better to document this method (as well as getDukeDialog below)?
</panel>

</panel>

<panel type="info" header="### 327. SONG QIFENG `@davidsqf` (6 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/64#discussion_r481756004" expanded>

the naming of a collection should be in the plural form, in this case, tempEvents
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/64#discussion_r481762023" expanded>

nice try using enum!
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/64#discussion_r481775229" expanded>

Can this expression be shortened?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/64#discussion_r481775741" expanded>

can this expression be shortened?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/64#discussion_r481778161" expanded>

why should the length of dataTimeSplit be 2? maybe you can add a comment to explain it
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/64#discussion_r481782702" expanded>

how would it handle the case when type does not equal T, D, or E? perhaps an else block would help!
</panel>

</panel>

<panel type="info" header="### 328. SEAN CHAN DING CHAO `@dcchan98` (6 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/251#discussion_r481878538" expanded>

Should UI be named in caps as it does not change?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/251#discussion_r481878991" expanded>

Can this be a more meaningful identifier?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/251#discussion_r481880373" expanded>

You may want to indicate that it is list for inputs?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/174#discussion_r481885482" expanded>

Would adding java docs be useful in clarifying where this components may be used?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/174#discussion_r481886500" expanded>

Would splitting up lines in this function be better for clarifying the nests?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/174#discussion_r481888537" expanded>

Is this a good way to name your method? It may be clearer to specify getTaskAtIndex instead. This is so that it would not be confused with find
</panel>

</panel>

<panel type="info" header="### 329. MICHAELIA TAN TONG `@Michaeliaaa` (6 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/254#discussion_r481241380" expanded>

There should be no indentation for case clauses.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/166#discussion_r481127845" expanded>

Line 15: minor typo "taskManger"
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/166#discussion_r481129441" expanded>

Good job in following the coding standard for wrapped lines!
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/166#discussion_r481129929" expanded>

The ordering of import statements is really consistent for all the classes so far, keep up the good work!
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/166#discussion_r481130889" expanded>

Line 27: Minor typo "taskManger"
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/166#discussion_r481132305" expanded>

Good job in following the coding standard for switch statements!
</panel>

</panel>

<panel type="info" header="### 330. LIN ZHENGYANG `@Nauw1010` (6 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/311#discussion_r479951541" expanded>

Perhaps the boolean should be "isValidInput" instead to sounds like a boolean I think?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/95#discussion_r481255295" expanded>

Perhaps this kind of multivalued variable can be named as "tasks" instead of "list of tasks" I thought?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/95#discussion_r483178472" expanded>

Perhaps here the "lastGreeting" variable is a constant and should be named as a constant?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/95#discussion_r483180997" expanded>

Perhaps the class name should be consistent with the "DeadlineTask", like "EventTask"?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/95#discussion_r483181784" expanded>

I thought maybe the name of the description of tasks is a bit confused.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/95#discussion_r483182103" expanded>

Perhaps the class name should be consistent with the "DeadlineTask", like "TodoTask"?
</panel>

</panel>

<panel type="info" header="### 331. PANG WAI KYE `@pangpuncake` (6 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/270#discussion_r479880033" expanded>

You could use Switch-case statements for cleaner code and perhaps you could separate certain portions of code into helper functions to increase readability. 
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/34#discussion_r479875466" expanded>

This is implied if you do not write it as well!
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/34#discussion_r479876674" expanded>

Looking at this class, correct me if I'm wrong but if you would like Deadline and Event to inherit from DatedTask without DatedTask being instantiated, you could make DatedTask abstract and inherit from Task.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/34#discussion_r479877619" expanded>

Maybe list instead of tasks would be clearer?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/34#discussion_r479878154" expanded>

Implied if not present but nothing wrong too!
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/34#discussion_r479972025" expanded>

Sure that sounds good! 
</panel>

</panel>

<panel type="info" header="### 332. LIM SHAO KIAT `@shaokiat` (6 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/395#discussion_r479996534" expanded>

Have you run checkstyle?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/395#discussion_r479999527" expanded>

Perhaps can split into Parser and Command classes?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/395#discussion_r480000715" expanded>

extra spacing
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/288#discussion_r479980366" expanded>

Good use of stream!
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/288#discussion_r479980972" expanded>

Good use of varags
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/288#discussion_r479987001" expanded>

Maybe could try out SimpleDateFormat as alternative
</panel>

</panel>

<panel type="info" header="### 333. TAI WEN LE LUCAS `@lucastai98` (6 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/208#discussion_r482226781" expanded>

I think you can add a line in between the parameters and the description of the method


</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/208#discussion_r482227062" expanded>

I think you can add a line in between the parameters and the description of the method



</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/208#discussion_r482227197" expanded>

I think you can add a line in between the parameters and the description of the method



</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/208#discussion_r482227352" expanded>

I think you can add a line in between the parameters and the description of the method



</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/208#discussion_r482227388" expanded>

I think you can add a line in between the parameters and the description of the method



</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/208#discussion_r482228136" expanded>

I think you can add a line in between the parameters and the description of the method


</panel>

</panel>

<panel type="info" header="### 334. YONG MING YANG `@yongmingyang` (6 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/347#discussion_r481240305" expanded>

Hi! As this is a constant, i'm not too sure if the name should be "filename" instead of "FILE_NAME"? Although checkstyle does point it out as an error on my case but I'm not too sure.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/347#discussion_r481242026" expanded>

perhaps the naming of the LocalDateTime object could be more specific?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/347#discussion_r481242434" expanded>

Naming of 'at' could be more specific too in my opinion
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/126#discussion_r481221555" expanded>

Hi, I think the naming for the variable filepath should be filePath instead
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/126#discussion_r481224479" expanded>

may want to import duke.TaskList above so that you can just refer to it as TaskList, not a major thing though!:)
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/126#discussion_r481230129" expanded>

Hi, same thing here regarding the naming of filepath
</panel>

</panel>

<panel type="info" header="### 335. CHAN WA WAI `@wayne987` (6 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/231#discussion_r483625726" expanded>

Maybe name this to taskList instead of using tasks to avoid using plural form since there is only one taskList?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/231#discussion_r483629719" expanded>

Perhaps you can add a space between imports from different packages to makes it easier to browse the list and determine the dependencies when there are many imports
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/231#discussion_r483631267" expanded>

maybe use the full word description instead of desc for easier understand?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/84#discussion_r483636349" expanded>

Perhaps can break up this method into shorter methods?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/84#discussion_r483638785" expanded>

Maybe rename reached to reached[Something] so that it will be easier to understand?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/84#discussion_r483642521" expanded>

I am not sure tho but is the use of final necessary?
</panel>

</panel>

<panel type="info" header="### 336. ANTHONY LIE `@Anthony6401` (6 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/425#discussion_r481666446" expanded>

Maybe delete the else statement to avoid deep nesting?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/425#discussion_r481671984" expanded>

Can the numTasks++ put in here instead since every if else statement has numTasks++?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/425#discussion_r481678428" expanded>

Maybe use date instead of at to be more descriptive?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/247#discussion_r480853448" expanded>

Should this be create method instead of setter?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/247#discussion_r480926452" expanded>

Should the stringarr be in camelCase?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/247#discussion_r480927870" expanded>

Can the method's name be an action?
</panel>

</panel>

<panel type="info" header="### 337. LEONG JIN MING `@jmleong666` (6 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/398#discussion_r480086011" expanded>

Should there be header comments for all public classes and methods? (See Java coding standard -> Comments)
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/398#discussion_r480086907" expanded>

Should the comment be indented relative to the next line rather than the previous? (See Java coding standard -> Comments)
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/398#discussion_r480090373" expanded>

Should the wrapped line be indented 8 spaces relative to the parent line (line 20) rather than the previous line (line 21)? I've noticed the same issue in other parts of the code as well. (See Java coding standard -> Layout)
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/398#discussion_r480092268" expanded>

Should imports be listed explicitly? (See Java coding standard -> Statements -> Package and Import Statements)
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/398#discussion_r480093005" expanded>

Should constant names be all uppercase with underscore as word separators? (See Java coding standard -> Naming)
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/221#discussion_r480103083" expanded>

Might be a little nitpicking, but should the method name be more detailed (e.g. convertCommandToEnum)? (See Week 4 -> Topics -> W4.6d)
</panel>

</panel>

<panel type="info" header="### 338. TAN LE YANG `@TanLeYang` (6 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/268#discussion_r479895002" expanded>

Perhaps it would be better to use explicit import statements. It can serve as a form of documentation regarding the dependencies a class has
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/268#discussion_r479896554" expanded>

Would it be better if the indentation of the case statements follow that of the coding standard?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/268#discussion_r479897951" expanded>

Not sure if I like the style of the JavaDoc comments. You can consider following the style set out in the coding standard: Start off the summary immediately with a verb like "Returns, Reads, Adds... etc". Additionally, should the text in the return annotation, specifically the part on "reads the txt file", be part of the method summary instead?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/268#discussion_r479900152" expanded>

Is this method too long and hard to understand? Perhaps the logic related to parsing the user input can be abstracted out into the Parser class
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/63#discussion_r479880356" expanded>

Perhaps you could consider leaving some blank lines in between imports from different sub-packages to improve readability! Noticed that you did so in some cases but not all. Maybe it would be better to be consistent throughout! 
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/63#discussion_r479885763" expanded>

Could this nesting of the if statement be replaced with a && operator?
</panel>

</panel>

<panel type="info" header="### 339. PRESTON TOH YONG RUI `@PrestonTYR` (6 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/160#discussion_r480255614" expanded>

Quite an interesting way of setting up the command that I wouldn't have thought of. Is there a reason why you did it this way instead of putting them all in the constructor?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/160#discussion_r480257692" expanded>

Minor nitpick, but you could have just use "\n" to continue printing on the next line instead of calling println twice
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/160#discussion_r480260049" expanded>

I like how there are comments in the middle of the code to explain why it's done that way. Makes it easier to understand while reviewing 👍 
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/160#discussion_r480261346" expanded>

Minor nitpick, but I believe this string can be set to private as it is only called within Duke. But it doesn't really affect the code and is more about code presentation
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/160#discussion_r480262374" expanded>

Is there a reason why this boolean check is repeated twice?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/52#discussion_r480058923" expanded>

Hey, minor nitpick, but I believe that according to the coding standard, imports should all be listed explicitly. I noticed the same issue in the other classes as well
</panel>

</panel>

<panel type="info" header="### 340. CHU YI-TING `@chuyiting` (6 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/308#discussion_r483016810" expanded>

I really like how you lower the cases of the command before matching them. 
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/308#discussion_r483020957" expanded>

Maybe leave the javadoc right above the method declaration would make it look nicer.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/308#discussion_r483023946" expanded>

Perhaps a @see tag would make the documentation look a little bit more organised.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/308#discussion_r483031337" expanded>

The name Option might seem to be a little bit vague, maybe a more specific name would make the code a bit easier to read.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/176#discussion_r483036066" expanded>

Execute1 and execute2 can be a little bit vague, maybe a more specific name can make this part easier to understand, even the name can speak for itself. 👍
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/176#discussion_r483039142" expanded>

These two layers are catching different exceptions, perhaps rearrange them in a single try-catch can make it look more beautiful.
</panel>

</panel>

<panel type="info" header="### 341. CHEOK SU ANNE `@cheoksuanne` (6 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/407#discussion_r482132805" expanded>

I think you could add a full stop to the end of the statements?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/407#discussion_r482133481" expanded>

I think there should be a space between try and {, and in lines 139 and 143 for the for loop
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/407#discussion_r482136733" expanded>

i think you can remove this line
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/407#discussion_r482138685" expanded>

i think there should be a line between the description and the return value
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/15#discussion_r482164514" expanded>

Good OOP implementation here!
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/15#discussion_r482167971" expanded>

Code is clear and easy to read :)
</panel>

</panel>

<panel type="info" header="### 342. TAN ZHONG HONG MARCUS `@MarcTzh` (6 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/205#discussion_r480135414" expanded>

Perhaps you can standerdise the use of 'this'
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/205#discussion_r480135634" expanded>

Perhaps you can use String.format
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/205#discussion_r480136562" expanded>

Ryan Tan from 1231 says hi
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/77#discussion_r480122767" expanded>

Perhaps you could use String.format instead of manually concatenating the strings.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/77#discussion_r480123676" expanded>

it would be good to standerdise the usage of this
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/77#discussion_r480125133" expanded>

perhaps you could split the appends into individual lines for better readibility
</panel>

</panel>

<panel type="info" header="### 343. JOE TEDDY YOSUA SANJAYA `@cupofjoee` (6 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/274#discussion_r481084945" expanded>

I think `this.text = text` is missing in the constructor code block. 
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/274#discussion_r481087694" expanded>

I think defining the type of a generic class e.g. `ArrayList<Task>`  here would be better. 
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/274#discussion_r481089286" expanded>

Any reason using `store` instead of the plural form of task e.g. `tasks` ? I feel `tasks` would be more intuitive, just a suggestion.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/274#discussion_r481090229" expanded>

i feel generally a camelCase of the class name would be more intuitive than coming up with another name for the class itself. 
'''
Storage storage
TaskList taskList
Scanner scanner
'''

</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/7#discussion_r481073009" expanded>

Perhaps the `? new Deadline(nameDateTimeStrings.get(0), taskDate)`  can be on a new line to maintain consistency and neatness.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/7#discussion_r481078984" expanded>

perhaps `totalTaskSize()` would be more verbose.
</panel>

</panel>

<panel type="info" header="### 344. TOH HAI JIE JOEY `@JoeyToh` (6 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/108#discussion_r481549430" expanded>

I don't think there is supposed to be indentation for case clauses for switch statements so perhaps you could configure your IDE to follow the style in the Java coding standards?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/108#discussion_r481554366" expanded>

I noticed that all the classes that inherited from the Command class did not include Javadocs, especially for the public methods like the execute method. Your method name is quite intuitive but perhaps you could include Javadocs for better clarity?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/108#discussion_r481555581" expanded>

Line 31 seems quite long so I think it would be good if you could do some line wrapping.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/108#discussion_r481557224" expanded>

I think your code looks very clean here!
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/76#discussion_r481568682" expanded>

Very minor style violation here, but I think there should be an empty line between the description and parameter.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/76#discussion_r481573906" expanded>

Line 171 and 172 seem a bit long so perhaps you could do some line wrapping?
</panel>

</panel>

<panel type="info" header="### 345. GABRIELLA TEH JIA YI `@GabriellaTeh` (6 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/305#discussion_r480173950" expanded>

The purpose of the method would be clearer with javadoc comments for each method.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/305#discussion_r480176066" expanded>

This line should be indented with 8 spaces.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/305#discussion_r480177352" expanded>

"task" should be indented with 8 spaces.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/305#discussion_r480177641" expanded>

This should be indented with 8 spaces.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/305#discussion_r480217919" expanded>

This line should be indented with 8 spaces.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/305#discussion_r480220057" expanded>

These two lines should be indented with 4 more spaces.
</panel>

</panel>

<panel type="info" header="### 346. XU ZHIZHI `@zhizhizhizhizhi` (6 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/155#discussion_r481106705" expanded>

Try not to use .* imports.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/155#discussion_r481110064" expanded>

Perhaps you can include a default case for switch statements.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/155#discussion_r481111776" expanded>

Perhaps it should be "Shows all...". This is seen in the javadocs comments for other methods in this file and other files too.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/155#discussion_r481113406" expanded>

There should be whitespace before '{'. This is seen in other block statements too.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/65#discussion_r481141198" expanded>

Perhaps you can try to keep this method shorter by abstracting the code for string splitting and comparing to the Parser class. 
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/65#discussion_r481147861" expanded>

This method does similar things to the load() method in Storage. Maybe you can extract the logic into a new method in this class and apply it in both classes so the code can be shortened.
</panel>

</panel>

<panel type="info" header="### 347. JIM VINCENT ANDES ENGAY `@jimvae` (6 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/348#discussion_r481017225" expanded>

Good job writing your code. It looks readable and clean
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/348#discussion_r481022583" expanded>

Perhaps you can split out the import statements for java.io.*
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/348#discussion_r481038172" expanded>

Perhaps you can change the name of this attribute to a proper boolean name.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/8#discussion_r481042568" expanded>

As a person taking the same project, I easily got the context and logic of your code. Perhaps you can improve readability by adding more abstractions or comments to guide other users into understanding your parse method.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/8#discussion_r481043715" expanded>

I think your UI is very personalised and it is very interesting that your bot revolves around this theme.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/8#discussion_r481046694" expanded>

Despite the sophisticated function of this class, you have made your code readable and clean.
</panel>

</panel>

<panel type="info" header="### 348. HOU RUI `@Hou-Rui` (6 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/75#discussion_r481076134" expanded>

I think the usage of public instance variables should be avoided, especially when the constructors do not initialize them all. They could be accidentally accessed before initialization or modified by an irrelevant object.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/75#discussion_r481079269" expanded>

I like how you have a String fallback for the time of a task! That gives the user more liberty when inputting time. However, I think maybe you can give more descriptive names to these two variables and leave some comments to explain your design.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/75#discussion_r481083418" expanded>

I think the name "lists" is a bit misleading here, because it's a list of task rather than a list of lists. Maybe it's better to change to a name related to "tasks".
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/75#discussion_r481085070" expanded>

May I know why you represent all commands with one class instead of one class for one command?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/49#discussion_r481059174" expanded>

I like how you abstract Command as a class. It looks nice and clear and makes adding a command easy.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/49#discussion_r481062882" expanded>

I like how you covered a wide range of possible formats.
</panel>

</panel>

<panel type="info" header="### 349. NEW JUN JIE `@jetnew` (5 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/468#discussion_r479861299" expanded>

As per iP task on code quality, should the JavaDoc contain descriptions on the input parameter?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/468#discussion_r479861469" expanded>

As per iP task on code quality, should this function be accompanied with a JavaDoc?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/277#discussion_r479854675" expanded>

Commenting on coding standard as per iP task, should there be a space after 'if', before the open parenthesis?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/205#discussion_r479861002" expanded>

As per iP task on code quality, should this test be documented?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/77#discussion_r479855795" expanded>

Commenting on coding standard as per iP task, should the JavaDoc for the function be specified here?
</panel>

</panel>

<panel type="info" header="### 350. BEC KYUNG HUHN `@Lysire` (5 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/374#discussion_r480876825" expanded>

I think you can use a switch statement (and perhaps Enums as well) to make your code more elegant.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/374#discussion_r480877924" expanded>

I think you should try to avoid arrowhead code over here.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/374#discussion_r480879527" expanded>

I think it is a good idea to park your toDatabaseStringRepresentation method under each of the Task classes (and with Task being an abstract class that the other subtasks can inherit from) to prevent the check for instanceof's. (Let Java polymorphism do the work for you).
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/19#discussion_r480869353" expanded>

Shouldn't the Javadoc for this function be completed?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/19#discussion_r480870628" expanded>

Good job on the regex, but I think "\\\s|\\\s" will be more elegant
</panel>

</panel>

<panel type="info" header="### 351. XIAO CHENGXIN `@cx0810` (5 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/422#discussion_r481898866" expanded>

Perhaps a more descriptive name such as "atDateTime" could be used here.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/422#discussion_r481901794" expanded>

Perhaps can have isExit() to returns false in Command and only override the method in ExitCommand 
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/422#discussion_r481910287" expanded>

Perhaps can use Enum for all the command words 
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/419#discussion_r481916531" expanded>

Perhaps can simplify this or use another way to express it? Looks very complicated.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/419#discussion_r481926848" expanded>

Perhaps the variable name could be atDateTime instead
</panel>

</panel>

<panel type="info" header="### 352. CHAN JUN DA `@chan-j-d` (5 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/337#discussion_r481148385" expanded>

Consider avoiding the use of unnecessary "this." to refer to an attribute unless it is shadowed by a parameter with a similar name.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/337#discussion_r481161993" expanded>

Consider following this naming convention for test methods:
"Underscores may be used in test method names using the following three part format <code>featureUnderTest_testScenario_expectedBehavior()</code>" 
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/82#discussion_r481192115" expanded>

Have you considered making this method private? Seems like it is already invoked in the constructor and the client likely won't need it
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/82#discussion_r481198537" expanded>

Perhaps a argument name like <code>remainderString</code> would fit better to tell a reader immediately what the argument is
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/82#discussion_r481200288" expanded>

Consider only using of <code>this.</code> when referencing attributes that have been shadowed by method/constructor parameter names
</panel>

</panel>

<panel type="info" header="### 353. LI GANGWEI `@nuovonatura` (5 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/134#discussion_r482109517" expanded>

Should this be named with anchorPane instead of ap to be consistent with the naming above and below this line. 
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/134#discussion_r482116442" expanded>

I really like the existence of this class. 
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/53#discussion_r482085132" expanded>

According to the module's coding standard, should the import statements be arranged in a consistent order or their dependencies? This suggestion applies to other import statements as well. 
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/53#discussion_r482092868" expanded>

Should this Scanner be named scanner as it is in the scope of the whole class? I refer to the point below in the module's coding standard:
"Variables with a large scope should have long names, variables with a small scope can have short names. "
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/53#discussion_r482094264" expanded>

According to the module's coding standard, should this be named with a noun?
</panel>

</panel>

<panel type="info" header="### 354. CHAN SIN TENG, TIFFANY `@nottiffchan` (5 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/388#discussion_r480703614" expanded>

Should the classes in main.java be imported explicitly instead of a wildcard import?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/388#discussion_r480704045" expanded>

Is giving your enum a noun name a better idea?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/84#discussion_r480714469" expanded>

Maybe you could order the imports by their type? i.e. all the imports from duke.io together and duke.task together
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/84#discussion_r480718975" expanded>

A plural form name could be used instead for names representing a collection of objects
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/84#discussion_r480719424" expanded>

I like how the case statements are not indented :)
</panel>

</panel>

<panel type="info" header="### 355. LIU XINYI `@Liu-2001` (5 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/313#discussion_r481995735" expanded>

Should there be no indentation after switch case?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/313#discussion_r482003347" expanded>

Tt would be better if you could declare class variables as private or protected instead of public.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/313#discussion_r482906772" expanded>

This constructor may also need a javadoc?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/148#discussion_r482931460" expanded>

Since error messages follow a similar format, maybe you could have another method e.g. createErrorMessage(String) to create the string? 
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/148#discussion_r482932724" expanded>

Should there be no indentation after switch case?
</panel>

</panel>

<panel type="info" header="### 356. TAN YU LI, JAMES `@iamjamestan` (5 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/430#discussion_r480167868" expanded>

Perhaps it might be cleaner if you delete dead code instead of commenting them out? Since you could always retrieve old code from previous commits.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/430#discussion_r480170201" expanded>

Perhaps it might be cleaner to abstract this while loop into a separate class/method?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/430#discussion_r480173432" expanded>

Perhaps Parser could have been completed before pushing to github? If not, some reviewers might be confused at the empty class implementation.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/263#discussion_r480152994" expanded>

Perhaps it is better to rename "splitTime" to "periods"? Since according to the java coding standards, collection variables should be in plural form.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/263#discussion_r480155831" expanded>

Perhaps it may be more intuitive to rename the variable "terminated" to "isTerminated"?
</panel>

</panel>

<panel type="info" header="### 357. WU BANGYI `@bangyiwu` (5 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/123#discussion_r481197047" expanded>

I think in general some of your javadoc formats may be a bit off, maybe add a fullstop after the first sentence?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/123#discussion_r481197394" expanded>

Maybe a javadoc for this public method?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/123#discussion_r481205041" expanded>

Love your usage of enums for action type!
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/14#discussion_r481223587" expanded>

maybe a better function name here would be better, something like parseCommand
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/14#discussion_r481225456" expanded>

if possible, best to avoid arrowhead coding here
</panel>

</panel>

<panel type="info" header="### 358. WU LICHENG `@Licheng-Wu` (5 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/245#discussion_r482933771" expanded>

Perhaps having a more easily understandable variable name to make it sound more like a boolean?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/245#discussion_r482939475" expanded>

Perhaps consider using a final int to store the value 4 as a constant with a comprehensible variable name, to avoid the use of "magic numbers".
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/41#discussion_r482944281" expanded>

Perhaps having a more easily understandable variable name to make it sound more like a boolean?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/41#discussion_r482948496" expanded>

Consider using switch statements for better multi-way branching
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/41#discussion_r482950055" expanded>

Perhaps using a more intuitive variable name for tests,in the following format: featureUnderTest_testScenario_expectedBehavior()
</panel>

</panel>

<panel type="info" header="### 359. FARRELL NAH JUN HAO `@boundtotheearth` (5 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/269#discussion_r479860356" expanded>

Should this method be called updateFile instead?
"update" alone may be too vague and can be confused with updating the class' state or updating individual task data
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/269#discussion_r479860705" expanded>

Should this method just be called "equals"?
This method already belongs to the CommandKey enum, so it would be called as CommandKey.equalsCommandKey, which might be redundant.
Just having "equals" would also match the equals method for other data types like Strings
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/269#discussion_r479861643" expanded>

Would it be better to name these as "LINE_XXX_XXX" instead?
Should these variables be final?
They appear to be constants and prefixing them with the same word will make them appear together when sorted alphabetically (see coding standard document)
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/96#discussion_r479856328" expanded>

Should there be JavaDoc comments for this method?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/96#discussion_r479857419" expanded>

Should this method be named getTasks_normalFile_getCorrectly instead?
</panel>

</panel>

<panel type="info" header="### 360. KWAN ZHI KAI NOEL `@kwannoel` (5 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/151#discussion_r480027627" expanded>

statics should be in CAPS
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/151#discussion_r480027752" expanded>

as above
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/151#discussion_r480027850" expanded>

as above
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/151#discussion_r480027910" expanded>

as above
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/52#discussion_r480038747" expanded>

'''suggestion
                                    taskData.getDateTime(), Parser.TASK_DATA_DATE_TIME_FORMATTER);
'''
</panel>

</panel>

<panel type="info" header="### 361. LEE WEI MIN `@leeweiminsg` (5 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/452#discussion_r481224354" expanded>

Not sure whether you really need a getter when you can make the isDone boolean public
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/449#discussion_r481228022" expanded>

Perhaps you can move the description to the class file itself? To reduce clutter
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/449#discussion_r481229044" expanded>

Maybe instead of declaring isExit, how about while(True)... and break/return when condition is reached?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/449#discussion_r481230172" expanded>

Maybe it's more readable to put it in a single line instead
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/449#discussion_r481231328" expanded>

Not sure whether you really need this, Java has default constructors
</panel>

</panel>

<panel type="info" header="### 362. LI XUPENG `@pongzers` (5 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/207#discussion_r481783221" expanded>

Maybe a more representative name could be used to represent the splited string Array? eg splitStringParts
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/207#discussion_r481784060" expanded>

Perhaps a more specific name such as startDate instead?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/207#discussion_r481785523" expanded>

Maybe a comment should be used to explain what n represents, and why 2 is used (magic number)
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/173#discussion_r481742845" expanded>

Your variable name used to refer to the TaskList varies by using list here and taskList in other places, would it be better to use one name throughout to maintain consistency and reduce confusion? e.g. using name taskList throughout to refer to the variable TaskList
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/173#discussion_r481745104" expanded>

Perhaps a more descriptive variable name for LocalDate instead of d1 could be used? (eg localDate) Noted this issue in several other places too
</panel>

</panel>

<panel type="info" header="### 363. ZHAO JINGJING `@zhaojj2209` (5 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/303#discussion_r480139242" expanded>

Perhaps this nested if-else statement can be combined with the parent if-else statement to reduce nesting?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/170#discussion_r480119596" expanded>

Perhaps the name here could be changed to something that sounds more like a boolean variable? The same applies to some of the other methods in this file.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/170#discussion_r481237060" expanded>

This line seems to be one space off?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/170#discussion_r481239555" expanded>

Perhaps this constant value can be in all caps?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/170#discussion_r481240730" expanded>

Since the formatter is used multiple times, you can perhaps consider declaring it outside of the if-else statement. Also, since it is a constant, it might be good to name it in all caps.
</panel>

</panel>

<panel type="info" header="### 364. LIU CHUYUE `@ramenmen` (5 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/344#discussion_r481088717" expanded>

Maybe imports can be listed explicitly?


</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/344#discussion_r481091579" expanded>

Maybe you could add a line break after each case to increase readability?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/344#discussion_r481093779" expanded>

Should a line be left between the description and @param?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/344#discussion_r481094834" expanded>

Maybe this method name could be written as a verb, like convertCompletedToNumber or something?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/118#discussion_r481172279" expanded>

not a violation but - i saw that you used format later but just wanted to remind that DateTimeFormatter can format the output string so there is no need to format manually!
</panel>

</panel>

<panel type="info" header="### 365. YONG SHAN RONG `@ysr25` (5 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/295#discussion_r480689775" expanded>

Maybe you can name this method showTaskAdded? I think it is clearer this way.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/295#discussion_r480690930" expanded>

Similarly, this method can be named showTaskDeleted instead.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/295#discussion_r480692666" expanded>

Should this variable just be called file instead?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/295#discussion_r480698132" expanded>

Maybe you can name your tests according to the featureUnderTest_testScenario_expectedBehavior() format?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/20#discussion_r480634163" expanded>

I think the indentation for these lines should have 4 more spaces. I noticed the same issue in several other places too.
</panel>

</panel>

<panel type="info" header="### 366. TAN JING YI JACE `@jacetjy` (5 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/78#discussion_r482193828" expanded>

Maybe you could separate this (eg. by assigning String.format to a variable first), so the line wouldn't be too long.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/61#discussion_r482129693" expanded>

Perhaps you could name it "addTodo" to show that you are adding a todo task to the tasklist, same goes for adding deadline and event tasks. I was reading the "DeleteCommand" file before this and got a little confused by the tasks.deadline method call.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/61#discussion_r482131647" expanded>

I think you could rename it to "toBeDeleted" or "taskToDelete" to differentiate it from the method call. Same for the other classes.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/61#discussion_r482145202" expanded>

I think this variable name is a little confusing as well, it has the same name as the method from TaskList. Perhaps you could change it to something more intuitive? 
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/61#discussion_r482155405" expanded>

Agreed, List is more intuitive that Ls.
</panel>

</panel>

<panel type="info" header="### 367. BU WEN JIN `@Nijnxw` (5 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/323#discussion_r480948546" expanded>

Perhaps you could list the imported commands from this package explicitly?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/323#discussion_r480954788" expanded>

Should the naming for line be in uppercase since it is a constant? I noticed the same issue in several other files too.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/323#discussion_r480966929" expanded>

Perhaps you could add line breaks in lines 64 and 65 to improve readability of your code?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/117#discussion_r481103237" expanded>

Should there be an additional indentation here?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/117#discussion_r481106426" expanded>

Perhaps you can abstract this logic (and other related logic) to another function (eg. handleDone, handleFind)? This could build better abstraction and improve readability.
</panel>

</panel>

<panel type="info" header="### 368. FOONG SIQI `@foongsq` (5 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/180#discussion_r481890764" expanded>

Perhaps you could add some Javadocs for the exception classes to explain when each exception is triggered?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/180#discussion_r481902722" expanded>

Perhaps an empty line should be added here?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/180#discussion_r481904751" expanded>

Maybe this empty line could be removed?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/142#discussion_r481911289" expanded>

Perhaps parts of this function could be abstracted out into other functions to make the code more readable?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/142#discussion_r481915168" expanded>

I like how you made the test names very descriptive.
</panel>

</panel>

<panel type="info" header="### 369. YU BOWEI `@bowei-yu` (5 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/420#discussion_r483040756" expanded>

Perhaps we can rename this boolean variable `keepGoing` to follow the coding standard style? However in this case, would it be better to use `while (true) { ... }` and use a `break;` statement instead?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/420#discussion_r483042631" expanded>

Should we add a Javadoc comment here?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/420#discussion_r483045848" expanded>

I like the usage of enumerations here, as it lists out the cases that corresponds to commands and return them. This provides a realistic OOP view of what a parser does in the real world, where it parses the inputs and obtains the commands.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/420#discussion_r483057169" expanded>

Perhaps we can create new tasks to be added at the `AddCommand` class, and pass the task to `TaskList`, that way, it would only need to add it to the `taskList`?  
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/420#discussion_r483058195" expanded>

Perhaps we can add a Javadoc comment here? Or use `{@inheritDoc}` to inherit parent Javadocs. Think this goes for other overriden methods as well!
</panel>

</panel>

<panel type="info" header="### 370. LIU YUXI `@liuyxxy` (5 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/279#discussion_r480798405" expanded>

Shouldn't the method name be a verb? 
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/279#discussion_r480801987" expanded>

If this is a constant name, shouldn't it be in all uppercase letters? 
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/279#discussion_r480805744" expanded>

Should this be in PascalCase? ie. TaskList 
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/279#discussion_r480817772" expanded>

Should the method name be a verb? 
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/169#discussion_r480775450" expanded>

Perhaps the variable name could be more explicit? Same issue for other initiated collection types as well. 
</panel>

</panel>

<panel type="info" header="### 371. ADITHYA NARAYAN RANGARAJAN SREENIVASAN `@AdithyaNarayan` (5 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/309#discussion_r480982648" expanded>

A clear idea of method intent is conveyed. However, it would be more coherent with the rest of the names if it was a verb. Maybe something along the lines of `getErrorForCommand`?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/309#discussion_r480983546" expanded>

I feel that the class name is a bit ambiguous.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/20#discussion_r480987550" expanded>

If argument is a single string, maybe this method could be renamed to `getArgument`?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/20#discussion_r480988405" expanded>

Consider changing to `isPrinted`
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/20#discussion_r480989107" expanded>

Consider changing the name to better reflect the intent of the variable. Something along the lines of `tasks`.
</panel>

</panel>

<panel type="info" header="### 372. WANG QIAN `@Persdre` (5 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/58#discussion_r480083668" expanded>

I love here you changed the indentation of 'case'! Perfect!
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/58#discussion_r480084941" expanded>

Very good you changed readme!
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/58#discussion_r480093396" expanded>

Here I think you can write private final String TASK_TYPE = "T".
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/32#discussion_r480097989" expanded>

I guess these comments may influence reading code :)
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/32#discussion_r480100140" expanded>

Very good you changed here to match your repository!
</panel>

</panel>

<panel type="info" header="### 373. KHOO DE HUI `@khoodehui` (5 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/417#discussion_r480885364" expanded>

Would it be better to implement the logic for each case inside helper methods, and call the helper methods over here, instead of implementing all of the logic in this method itself?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/417#discussion_r480892651" expanded>

Perhaps it would be better to spell "Parameter" in full to enhance code readability?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/417#discussion_r480894199" expanded>

Would it be better if a more descriptive name like "writeToFile" is used?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/417#discussion_r480896036" expanded>

Perhaps it will be clearer to name this test as "load_nonExistingFile_exceptionThrown"
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/205#discussion_r480868363" expanded>

Would it be better to name this isDone?
</panel>

</panel>

<panel type="info" header="### 374. WOO JIAN ZHE `@jzwoo` (4 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/105#discussion_r480243174" expanded>

Deep nesting here. Avoid more than 3 levels of indentation.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/105#discussion_r480244125" expanded>

Deep nesting here. Maybe can simplify it a little to increase readability?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/105#discussion_r480245257" expanded>

Maybe can use a line spacing once in awhile to improve readability?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/45#discussion_r480214085" expanded>

C could be named more explicitly here, maybe just "command".
</panel>

</panel>

<panel type="info" header="### 375. YOU YINGFENG `@youyingfeng` (4 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/341#discussion_r482162771" expanded>

Is the catch statement supposed to be empty here? If so, perhaps a comment explaining why this is empty would help.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/341#discussion_r482168000" expanded>

I like the explanation on the usage of the method in Javadocs!
However, perhaps adding a short summary of what the method does would be better, to comply with coding standards. (I also noticed this problem in many places elsewhere, in similar methods)
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/42#discussion_r482230771" expanded>

Perhaps try to shove some code into separate methods? This method seems way too long (although many others do the same).
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/42#discussion_r482232736" expanded>

You might want to put this in a separate else clause, to show that this only happens if the file does not exist.
</panel>

</panel>

<panel type="info" header="### 376. BHUVANESWARAN VIGNESH `@vigneshbhuvan-nus` (4 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/192#discussion_r481968540" expanded>

Very good usage of JavaDocs in all of your methods and classes. However, it could be even better if you had a comment explaining the purpose of that particular class. This would help the reader understand what each of the class does to get a better idea, as not everyone uses the same class name to carry out the same function. Very neat comments and javadocs though
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/192#discussion_r481969588" expanded>

Maybe you could have other exceptions extending from DukeException, such as DukeInvalidTaskException, DukeInvalidCommandException. Although in this case, it is not very important, it might become important later on when the code is evolving.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/192#discussion_r481970151" expanded>

Very good usage of abstraction in order to let one method take care of converting a date. I realise I should have done that as well haha. Good idea!
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/183#discussion_r482060392" expanded>

Very good piece of code, good use of abstraction. But perhaps the naming of certain methods could be a bit more short?. Hahha i'm really scraping the bell here because I can't find anything wrong 
</panel>

</panel>

<panel type="info" header="### 377. TIAN FANG `@T-Fang` (4 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/213#discussion_r481104079" expanded>

When we want to import more than three components from the same package, is it better to use "import dukeclass.*"?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/213#discussion_r481215867" expanded>

Sorry, I think I have remembered it wrongly :( Thanks!
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/27#discussion_r481100125" expanded>

Is it better to use "import java.io.*" since there are more than three import under "java.io"?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/27#discussion_r481216207" expanded>

Sorry, I think I have remembered it wrongly :(. Thanks!
</panel>

</panel>

<panel type="info" header="### 378. WONG PENG XIANG `@pengxiangg` (4 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/428#discussion_r482059462" expanded>

Perhaps a couple of line breaks in this function will improve readability?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/428#discussion_r482063476" expanded>

Perhaps a more intuitive variable name here, such as a noun like date?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/83#discussion_r482042846" expanded>

I like how you a ReversibleCommand to allow users to undo their commands.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/83#discussion_r482053459" expanded>

I like the use of streams
</panel>

</panel>

<panel type="info" header="### 379. GOH WEN HAO `@wenhaogoh` (4 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/269#discussion_r480897290" expanded>

Should this be renamed as isDone?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/241#discussion_r480879040" expanded>

Should the java imports be at the top? I noticed the same issues in several other places too.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/241#discussion_r480881374" expanded>

Should there be an access modifier? I noticed the same issue in several other places too.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/241#discussion_r480891759" expanded>

Should the case block have 4 less indentation spaces? I noticed this issue in several other places too.
</panel>

</panel>

<panel type="info" header="### 380. Jian Fanmin `@fanminj` (4 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/388#discussion_r480258717" expanded>

Perhaps the variable name could be a little more intuitive? 
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/388#discussion_r480260389" expanded>

Maybe a noun would be better here?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/12#discussion_r480250091" expanded>

Perhaps you can use plural form for names representing a collection of objects?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/12#discussion_r480251603" expanded>

I like how you did not indent the case clauses
</panel>

</panel>

<panel type="info" header="### 381. NICHOLAS YEO YOCK LENG `@nicholasyeo` (4 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/71#discussion_r481409147" expanded>

Perhaps these variable names could follow the format for naming constants? 
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/71#discussion_r481418920" expanded>

I noticed that similar header comments have been written for this method in the other classes that implement this interface. Not sure if its just me but, I feel that it suffices to write a general description of this method here and omit the comments in the other classes!
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/58#discussion_r481430393" expanded>

Looks like indentation is slightly off here!
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/58#discussion_r481434472" expanded>

Perhaps a general header comment can be written for this execute method? That way, comments can be omitted for the execute method in the other command classes implementing this interface! 

Also, I noticed the header comments of this method in the other command classes do not have the @ return line!
</panel>

</panel>

<panel type="info" header="### 382. LIM JIA RUI RYAN `@ryanlimjr` (4 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/340#discussion_r483634626" expanded>

> Perhaps can break up this method into shorter methods?

I agree with @xxzz-tt. Perhaps you could abstract away lines 24 - 28 to be in the respective task commands?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/118#discussion_r483617070" expanded>

Perhaps you could rename the variable `c` to `command` instead? to make line 43 and 47 clearer
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/118#discussion_r483619087" expanded>

Would it be clearer to name this variable as `commandAndArgs` ?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/118#discussion_r483624131" expanded>

I like how you use `at` as a variable name here, similarly for `deadline` class
</panel>

</panel>

<panel type="info" header="### 383. LE MINH GIANG `@mgiang2015` (4 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/468#discussion_r481689638" expanded>

You can use `assert(!event.getStatus());` here as well, just to make the code slightly cleaner, similar comment for line 20. The rest looks good, great job!
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/70#discussion_r481725141" expanded>

Should this class be named as Main? I personally feel a bit confused as you have classes MainWindow, Ui and Duke as well and I expected main() method to be in this class. Would you consider something like DukeGUI?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/70#discussion_r481728820" expanded>

Should the Ui class be implementing these methods? As these are "response messages", I think they might be better implemented in the DialogBox class. 

I like how clean the code here is, good job on that!
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/16#discussion_r481708918" expanded>

Following the naming convention, should the method name be a verb instead of a noun? A few suggestions from me would be markComplete, getMarkCompleteString, getMarkCompleteMsg. I spot this for a few other methods in this class as well.
Cleanliness-wise I like how clean the code is! Very readable. Good job!
</panel>

</panel>

<panel type="info" header="### 384. SHI HUI LING `@porkeypine` (4 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/353#discussion_r481247587" expanded>

The comments in this part are a little confusing -- there are two "Step/part 3. Add functionality to handle user input.", which makes it look a bit like you accidentally duplicated your code or forgot to delete one of them 😢 Perhaps make these comments more descriptive?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/353#discussion_r481248680" expanded>

Really minor cosmetic suggestion -- the empty lines for your if / else if blocks are perhaps not necessary? I think it's up to you, but in some sections (including earlier in your code), you forget to leave an empty line at the end of the block :")
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/353#discussion_r481251000" expanded>

You could leave a space between 'else if' and '('!
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/353#discussion_r481251236" expanded>

You could leave a space between 'else if' and '('!
</panel>

</panel>

<panel type="info" header="### 385. MELANIE NG PEI SEE `@IlyaRin` (4 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/417#discussion_r483921565" expanded>

Perhaps to improve code readability, there could be a separate method which composes the string to be written to the file?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/136#discussion_r482097528" expanded>

Very good use of command abstractions. Clear, organized and easy to understand!
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/136#discussion_r482109609" expanded>

Perhaps you could have exceptions extending from DukeException? (Such as DukeInvalidDateFormatException). This may help to distinguish between different types of DukeExceptions thrown.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/81#discussion_r483390344" expanded>

Perhaps the method name could be more specific? E.g viewAllOnDate
</panel>

</panel>

<panel type="info" header="### 386. OLIVIA JULIANI JOHANSEN `@oliviajohansen` (4 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/208#discussion_r481097002" expanded>

Nice that the constants are properly labelled: public static final followed by an all caps name.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/208#discussion_r481100112" expanded>

Nice job on the switch case indentation 
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/198#discussion_r481104185" expanded>

Nice work on the switch case indentation
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/198#discussion_r481106595" expanded>

Maybe you could add description for less understandable param names  
</panel>

</panel>

<panel type="info" header="### 387. BEN-HANAN CHOONG SEE KAAY `@Ben-Hanan` (4 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/405#discussion_r479880029" expanded>

Since the logo and the greeting is constant maybe they should be static instead? And since they are static then the names should adhere to the naming conventions!
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/405#discussion_r479880717" expanded>

Maybe the type of the event represented by the "E" here should be static since it's a constant?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/405#discussion_r479880950" expanded>

Maybe the type of the event represented by the "T" here should be static since it's a constant?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/397#discussion_r479912762" expanded>

Maybe the D representing the task type can be a represented as a constant instead i.e TASK_TYPE? This applies to the other tasks as well.
</panel>

</panel>

<panel type="info" header="### 388. ILLIO SUARDI `@fyshhh` (3 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/194#discussion_r481366809" expanded>

i believe operators should be surrounded by a space character!
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/194#discussion_r481367473" expanded>

perhaps consider separating the java and javafx imports?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/194#discussion_r481367591" expanded>

similarly, add some space characters!
</panel>

</panel>

<panel type="info" header="### 389. PHOON JUN HUI `@junhui-phoon` (3 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/240#discussion_r481221237" expanded>

Maybe you could rename 'noArgs' to 'hasNoArguments' or 'hasArguments' &gt;--[you might have to rewrite some code if you change to this :(]
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/23#discussion_r481184866" expanded>

Perhaps you could change 'found' to 'foundTasks' etc? Plural form should be used to represent a collection of objects :)
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/23#discussion_r481197415" expanded>

Maybe you could rename 'taskDoneState' to 'isTaskDone'?
</panel>

</panel>

<panel type="info" header="### 390. CHEN XINGJIAN `@ChenXJ98` (3 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/392#discussion_r482072934" expanded>

Will it be better if this method is documented by javadocs?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/314#discussion_r482152066" expanded>

Maybe can just name this method as isExit or getIsExit. Personally I feel its more clear that way 👍 
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/128#discussion_r482144058" expanded>

Might not be necessary to indicate all the command types in javadocs.
</panel>

</panel>

<panel type="info" header="### 391. CHU KIM GUAN `@soaza` (3 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/234#discussion_r480169861" expanded>

Might want to leave an empty line here for better clarity.


</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/13#discussion_r480177985" expanded>

Maybe leave a line here for better clarity?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/13#discussion_r480179247" expanded>

Leave a line here for better clarity.


</panel>

</panel>

<panel type="info" header="### 392. ROYCE HO SHOU YEE `@TheSpaceCuber` (3 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/397#discussion_r479912695" expanded>

Perhaps can consider using a verb for the method name? (E.g. CombineAllTasks etc)
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/397#discussion_r479913613" expanded>

Bye might be a little confusing haha. Consider including the fact that it writes data.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/104#discussion_r479920746" expanded>

Just a small reminder to leave a line after the header for Javadoc to follow the coding standard! 
</panel>

</panel>

<panel type="info" header="### 393. LAW WEI MENG BOBBY `@zeranium97` (3 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/206#discussion_r480012701" expanded>

Should there be a header comment since the accessibility is public? (line 58)
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/195#discussion_r480025391" expanded>

"task" should be private and accessed with getters
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/195#discussion_r480027371" expanded>

It seems like it should be "tasks" instead of "tasksList" and i believe you should use a getter method to get the description instead.
</panel>

</panel>

<panel type="info" header="### 394. KIM TAE KWON `@ktaekwon000` (3 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/348#discussion_r481126046" expanded>

I agree with this. I noticed this issue in other files too, perhaps your IDE is not configured correctly.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/348#discussion_r481127073" expanded>

Perhaps this variable could be renamed to tasks?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/348#discussion_r481132605" expanded>

This isn't really a comment on code style, but there seems to be a lack of tests implemented for your PR. Maybe a few tests to check your program could be implemented.
</panel>

</panel>

<panel type="info" header="### 395. CHANG RUI FENG `@RuiFengg` (3 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/264#discussion_r479850954" expanded>

You could try leaving a line between the description and parameters in the javadocs for your constructors, might have missed out that small statement in the coding standards 😅 
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/264#discussion_r479851516" expanded>

Consider extracting out the lines of code into a function for the case statements to make the code look cleaner 😃 
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/125#discussion_r479849728" expanded>

You might have forgotten to leave an empty line between the description and the parameter section for the constructors 😨 
</panel>

</panel>

<panel type="info" header="### 396. JEREMY TAN KOON WEE `@koonweee` (3 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/204#discussion_r479722597" expanded>

Could separate logical units within a block by a blank line
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/125#discussion_r479723615" expanded>

Great idea to use HashMap to store commands
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/125#discussion_r479723682" expanded>

Could perhaps add a more descriptive sentence eg. "An error was thrown: " since the user will be seeing the error
</panel>

</panel>

<panel type="info" header="### 397. MOON GEON SIK `@gsmoon97` (3 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/336#discussion_r481147018" expanded>

Shouldn't the 'if condition' and the 'following {' be separated by a single whitespace?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/336#discussion_r481148365" expanded>

Perhaps the relevant Task libraries could be listed and imported explicitly instead of using a wildcard import?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/133#discussion_r481154781" expanded>

Perhaps you could add some line breaks to improve readability?
</panel>

</panel>

<panel type="info" header="### 398. REUBEN TENG `@theyellowfellow` (2 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/178#discussion_r481106261" expanded>

Would be nice to have one line/brief description! I know that you describe in the return what its returning, but would be useful to maybe include which represents what?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/92#discussion_r481116666" expanded>

Missing javadoc, but also since minimal is only half of public methods to have javadocs all is good
</panel>

</panel>

<panel type="info" header="### 399. CHONG JIA LE `@chiabs` (2 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/189#discussion_r481301192" expanded>

Should this be Runs instead of Run?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/189#discussion_r481305062" expanded>

Did you accidentally leave a space here between "time" and "the"?
</panel>

</panel>

<panel type="info" header="### 400. ETHAN NOAH ROZARIO `@EthanTheGoondu` (2 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/289#discussion_r479975862" expanded>

Full caps naming is for immutable constants, you should perhaps include "final" to make these values immutable.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/289#discussion_r479980345" expanded>

Maybe you should make this task private since it's not going to be accessed outside this class.
</panel>

</panel>

<panel type="info" header="### 401. LIM DEWEN, ALOYSIUS `@pooty3` (2 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/460#discussion_r481931342" expanded>

switch case should not have an indentation as per the coding standards
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/460#discussion_r481934462" expanded>

Perhaps you can add a validation check to check if the input is completely empty.
</panel>

</panel>

<panel type="info" header="### 402. HWANG YONG KANG `@hyngkng` (2 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/451#discussion_r482610409" expanded>

Perhaps the method name could have been a verb instead? Eg. parseCommand.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/426#discussion_r482600323" expanded>

Shouldn't there be a space between the description and param section?
</panel>

</panel>

<panel type="info" header="### 403. LIM ZE WEI DENNIS `@LimZeWeiDennis` (2 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/15#discussion_r480311216" expanded>

Would you name all your static variables in capital letter?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/15#discussion_r480312435" expanded>

would you name all your static variables in capital letter?
</panel>

</panel>

<panel type="info" header="### 404. NG SI QIANG `@siqiang-ng` (2 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/433#discussion_r479726682" expanded>

The parseCommand is very clean and neat! 
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/433#discussion_r479727505" expanded>

Perhaps command.strip() could be used to remove the empty spaces after "deadline"? Was thinking how the code will work if someone input "deadline    "
</panel>

</panel>

<panel type="info" header="### 405. HAZEL TAN `@Hazel1603` (1 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/307#discussion_r483403841" expanded>

Maybe you can consider modifying the javadoc for this method or checkUserInput? The purpose of the functions seems very similar to me. 
</panel>

</panel>

<panel type="info" header="### 406. NAUMAN SAJID `@Nauman-S` (1 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/264#discussion_r482650968" expanded>

could it be written as getId(...) since acronyms should not be uppercase when used as part of name? 🤔 
</panel>

</panel>

<panel type="info" header="### 407. NG JIA XIN `@jiaax` (1 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2103-AY2021S1/ip/pull/157#discussion_r482244881" expanded>

I like the naming of your method "startsWith" for input as it sounds very intuitive.
</panel>

</panel>

<panel type="info" header="### 408. CHEN YONGYAN `@Raymond0212` (0 comments)"  collapsed>


</panel>

<panel type="info" header="### 409. LEBEN CHEW WEN BIN `@lebencwb` (0 comments)"  collapsed>


</panel>

<panel type="info" header="### 410. QU MINGSI `@e0316059` (0 comments)"  collapsed>


</panel>

<panel type="info" header="### 411. MOHAMAD NURHAKIEM BIN MOHAMD RASID `@hakiem526` (0 comments)"  collapsed>


</panel>

<panel type="info" header="### 412. MAXX CHAN YUHANG `@maxxyh` (0 comments)"  collapsed>


</panel>

<panel type="info" header="### 413. CHAN QIN LIANG `@qlchan24` (0 comments)"  collapsed>


</panel>

<panel type="info" header="### 414. HO PIN XIAN `@hopinxian` (0 comments)"  collapsed>


</panel>

<panel type="info" header="### 415. LEE GEORGIE `@geoboom` (0 comments)"  collapsed>


</panel>

<panel type="info" header="### 416. MUHAMMAD SYAFIQ BIN ABAS `@mhdsyfq` (0 comments)"  collapsed>


</panel>

<panel type="info" header="### 417. NGUYEN DINH QUANG MINH `@nguyendqminh` (0 comments)"  collapsed>


</panel>

<panel type="info" header="### 418. CAO QIN `@Ringo1225` (0 comments)"  collapsed>


</panel>

<panel type="info" header="### 419. AUNG THUYA OO `@athuyaoo` (0 comments)"  collapsed>


</panel>

<panel type="info" header="### 420. LEONG EN ZE, HOPE `@hoperawr` (0 comments)"  collapsed>


</panel>

<panel type="info" header="### 421. NG WENG FAI `@wengfaing` (0 comments)"  collapsed>


</panel>

<panel type="info" header="### 422. HENDEY FAN HAOCHEN `@LinkedInk` (0 comments)"  collapsed>


</panel>

<panel type="info" header="### 423. ZHANG XIN YUE `@xyzhangg` (0 comments)"  collapsed>


</panel>

<panel type="info" header="### 424. LIM EN SHENG MERLIN `@MerlinLim` (0 comments)"  collapsed>


</panel>

<panel type="info" header="### 425. JERRY HO JIA JIE `@printinghelloworld` (0 comments)"  collapsed>


</panel>

<panel type="info" header="### 426. RACHEL GINA ABELARDE `@rgabelarde` (0 comments)"  collapsed>


</panel>

<panel type="info" header="### 427. TAN YAN LYN `@yanlynnnnn` (0 comments)"  collapsed>


</panel>

<panel type="info" header="### 428. LIN YINGQI `@yingqi0607` (0 comments)"  collapsed>


</panel>

<panel type="info" header="### 429. CHENG JIYUQING `@ChengJiyuqing` (0 comments)"  collapsed>


</panel>

<panel type="info" header="### 430. EK CHIN HUI `@EkChinHui` (0 comments)"  collapsed>


</panel>

<panel type="info" header="### 431. ZHAO LINGSHAN `@zhaolingshan` (0 comments)"  collapsed>


</panel>

<panel type="info" header="### 432. NIGEL NG YONG SHENG `@vanGoghhh` (0 comments)"  collapsed>


</panel>

<panel type="info" header="### 433. CHEONG YING YI CLARA `@claracheong4` (0 comments)"  collapsed>


</panel>

<panel type="info" header="### 434. RACHEL NG MIN YEE `@rnmy` (0 comments)"  collapsed>


</panel>
