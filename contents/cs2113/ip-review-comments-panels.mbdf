
<panel type="info" header="### 1. LAM ..ROLD `@jerroldlam` (32 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/190#discussion_r483381518" expanded>

it should have been 
if(taskCommandArr[1].contains("/by")) {

A space after the last ")"
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/190#discussion_r483381594" expanded>

A space after the last ")"
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/190#discussion_r483381619" expanded>

A space after the last ")"
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/190#discussion_r483381655" expanded>

A space after the last ")"
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/190#discussion_r483381683" expanded>

A space after the last ")"
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/190#discussion_r483381700" expanded>

A space after the last ")"
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/190#discussion_r483381730" expanded>

A space after the last ")"
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/190#discussion_r483381953" expanded>

A space after the last ")"
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/190#discussion_r483381974" expanded>

A space after the last ")"
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/190#discussion_r483382017" expanded>

A space after the last ")"
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/190#discussion_r483382045" expanded>

A space after the last ")"
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/190#discussion_r483382071" expanded>

A space after the last ")"
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/190#discussion_r483382075" expanded>

A space after the last ")"
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/190#discussion_r483382103" expanded>

A space after the last ")"
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/190#discussion_r483382119" expanded>

A space after the last ")"
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/190#discussion_r483382132" expanded>

A space after the last ")"
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/190#discussion_r483382148" expanded>

A space after the last ")"
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/190#discussion_r483382174" expanded>

A space after the last ")"
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/190#discussion_r483382185" expanded>

A space after the last ")"
</panel>

<panel  header="**20 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/190#discussion_r483382215" expanded>

A space after the last ")"
</panel>

<panel  header="**21 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/190#discussion_r483382241" expanded>

A space after the last ")"
</panel>

<panel  header="**22 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/180#discussion_r483384523" expanded>

Should this blank line be removed in order to collect all the import statements together?
</panel>

<panel  header="**23 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/180#discussion_r483384800" expanded>

I think this blank line can be removed to make the code more elegant
</panel>

<panel  header="**24 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/180#discussion_r483385057" expanded>

I think this blank line can be removed to make the code more elegant
</panel>

<panel  header="**25 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/180#discussion_r483385527" expanded>

Should this be split out into methods instead? It might make the code more readable?
For eg maybe a function named userEnteredDeadline or userEnteredEvent 
</panel>

<panel  header="**26 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/180#discussion_r483385807" expanded>

I think this blank line can be removed to make the code more elegant
</panel>

<panel  header="**27 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/180#discussion_r483385967" expanded>

Should this be refactored out to reduce the arrow head structure?
</panel>

<panel  header="**28 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/180#discussion_r483386037" expanded>

I think this blank line can be removed to make the code more elegant
</panel>

<panel  header="**29 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/180#discussion_r484041488" expanded>

I feel the comment was sufficient in showing what u2713 and u2718 meant.
</panel>

<panel  header="**30 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/180#discussion_r484041645" expanded>

Slightly unreadable as it is hard to tell what you mean by this. Perhaps refactoring out into methods would be a good idea.
</panel>

<panel  header="**31 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/180#discussion_r484041790" expanded>

A few common lines of code can be refactored out to reduce duplication. The lines are :
arrayOfTasks.add(newTask);
setNumberOfTasks(getNumberOfTasks()+1);
printAddTaskMessage(newTask);
Perhaps they could go in a method and call that method instead?
</panel>

<panel  header="**32 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/180#discussion_r484041889" expanded>

Should taskToBeDone be taskNumberToBeDone
</panel>

</panel>

<panel type="info" header="### 2. ONG .. ZHI `@OngDeZhi` (27 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/227#discussion_r484034027" expanded>

Variables should be initialized where they are declared to ensure that it is valid at any time, consider moving it to line 16 so it's "String text = in.nextLine();".
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/227#discussion_r484034124" expanded>

Variables should be initialized where they are declared to ensure that it is valid at any time so consider moving them to when you are gonna assign them values.

</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/227#discussion_r484034216" expanded>

Variables should be initialized where they are declared to ensure that it is valid at any time so consider moving them to when you are gonna assign them values.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/227#discussion_r484034499" expanded>

Variables should be initialized where they are declared to ensure that it is valid at any time so consider moving it to line 48, so it's "String todoDescription = text.substring(5);".
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/227#discussion_r484034937" expanded>

There should be whitespace within a statement, so consider "public static void addTodoTask(String text) {".
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/227#discussion_r484034963" expanded>

There should be whitespace within a statement, so consider "public static void addDeadlineTask(String text) {".
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/227#discussion_r484035009" expanded>


There should be whitespace within a statement, so consider "public static void addEventTask(String text) {".

</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/227#discussion_r484035052" expanded>

There should be whitespace within a statement, so consider "public static void printTask(Task task) {".
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/227#discussion_r484035157" expanded>

There should be whitespace within a statement, so consider "public class Todo extends Task {", similarly for line 6 and 10.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/227#discussion_r484035226" expanded>

There should be whitespace within a statement, so consider "public void taskDone() {", similarly for line 19.

</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/227#discussion_r484035294" expanded>

There should be whitespace within a statement, so consider "public class Event extends Task {", similarly for line 6, 9 and 13.

</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/227#discussion_r484035550" expanded>

There should be whitespace within a statement, so consider "this.byDate = byDate", similarly for line 10 and 14.

</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/227#discussion_r484035603" expanded>

Might wanna consider using a line break for this as it's pretty lengthy.
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/215#discussion_r483384983" expanded>

Try using a constant variable for "100" so it does not appear to be a magic number.
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/215#discussion_r483385442" expanded>

Consider using a case-insensitive comparison method as that can simplify the expression, a boolean variable to store the validity checks result would also be good too to simplify it further.
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/186#discussion_r483387361" expanded>

Consider using a constant variable to represent "100" so it isn't a magic number.
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/186#discussion_r484037505" expanded>

Try to avoid complication expressions such as this, maybe use a task variable to store the "list[taskNumInt - 1]" and also do use whitespaces to separate it out, it can improve the readability.
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/186#discussion_r484037533" expanded>

Consider using a constant variable named "TICK_SYMBOL" for "\u2713" otherwise it is a magic value in the code (same for "\u2718").
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/186#discussion_r484037928" expanded>

Try to avoid complication expressions like "((NUM_OF_TASKS==1?"":"s"))", maybe use a String variable to store the result first, then use that variable for printing.
</panel>

<panel  header="**20 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/186#discussion_r484037997" expanded>

Try to avoid complication expressions like "((NUM_OF_TASKS==1?"":"s"))", maybe use a String variable to store the result first, then use that variable for printing.
</panel>

<panel  header="**21 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/186#discussion_r484038015" expanded>

Try to avoid complication expressions like "((NUM_OF_TASKS==1?"":"s"))", maybe use a String variable to store the result first, then use that variable for printing.
</panel>

<panel  header="**22 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/186#discussion_r484038476" expanded>

Consider using a better variable name like 'task' or 'newTask' instead of 't', similarly in line 102 and 117.
</panel>

<panel  header="**23 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/186#discussion_r484039435" expanded>

Try to avoid complication expressions such as this, consider using the toString() function in the Task class to simplify the expression.

</panel>

<panel  header="**24 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/186#discussion_r484039874" expanded>

Very similar chunks of code (line 97 to 120), consider generalizing with a createTask method (also with todo if possible)? 
</panel>

<panel  header="**25 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/186#discussion_r484040218" expanded>

You might want to minus 1 at line 146 ("int taskNumInt = Integer.parseInt(taskNumString);") so you don't have to repeat minus 1 every time you need to access it, that would also help to simplify your code further.
</panel>

<panel  header="**26 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/186#discussion_r484040650" expanded>

You may wanna set the access modifier to private to limit the scope of these methods if they are not gonna be used outside of the Duke class. Similarly for the other methods in Duke.
</panel>

<panel  header="**27 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/165#discussion_r483382109" expanded>

The curly braces for the if statement is missing, it is needed even if it's a one-liner (K&R bracket style).
</panel>

</panel>

<panel type="info" header="### 3. LI B..ZHAO `@TomLBZ` (24 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/174#discussion_r484082432" expanded>

Boolean variables should sound like a boolean, for example. isQuittingLoop.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/174#discussion_r484082669" expanded>

Bug here. If command does not contain any spaces, it falls through all the branches and commandDetails is still null.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/174#discussion_r484082755" expanded>

Is an else if missing?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/174#discussion_r484082885" expanded>

Good spacing! Very pleasant to read 👍 
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/174#discussion_r484083004" expanded>

The spacing in this file is inconsistent with other files...
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/160#discussion_r482716497" expanded>

The todo, deadline and event commands are indented on a different level from the Done command. Try to put them on the same indentation level, or bring the handling of these commands to another method and call that method on the same indentation level as other commands.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/160#discussion_r484080788" expanded>

This class follows coding standard well, good job!
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/160#discussion_r484080968" expanded>

Consider adding in comments for the branched portion
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/160#discussion_r484081060" expanded>

Consider declaring this variable before you declare greeting, and make use of it.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/160#discussion_r484081128" expanded>

Consider moving "deadline" to the same indentation level as your "todo".
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/160#discussion_r484081180" expanded>

Consider creating a boolean value to replace this long condition.
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/38#discussion_r484083368" expanded>

Spacing should be consistent around operators.
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/38#discussion_r484083530" expanded>

Method name should be a verb. For example, printStartMsg() or showStartMsg().
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/38#discussion_r484083661" expanded>

Unreadable variable name detected. What is dsc? The string name should be more readable.
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/38#discussion_r484083752" expanded>

Method name should be a verb. For example, printByeMsg() or showByeMsg().
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/38#discussion_r484083903" expanded>

Spacing should be either on both sides of the equal sign or neither. Having a space only on one side is inconsistent.
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/38#discussion_r484083944" expanded>

Too many empty lines between statements.
</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/22#discussion_r482718419" expanded>

Name of methods should be verb followed by action. For example, printLineSeparator() instead of lineSeparator()
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/22#discussion_r484081390" expanded>

Consider using "/*...*/" for multiple-line comments
</panel>

<panel  header="**20 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/22#discussion_r484081580" expanded>

Variable name should be a noun to differentiate from methods. For example, userText instead of storeUserText which sounds like a method.
</panel>

<panel  header="**21 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/22#discussion_r484081713" expanded>

Boolean names should sound like a boolean. For example, "isExitting", "isRunning", etc, instead of "doExit" which sounds like a method.
</panel>

<panel  header="**22 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/22#discussion_r484081826" expanded>

Method name should be a verb followed by a noun, for example, getLineSeparator() or printLineSeparator()
</panel>

<panel  header="**23 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/22#discussion_r484081936" expanded>

Everything inside a try...catch block should be indented. They cannot be on the same level of indentation as "try" itself.
</panel>

<panel  header="**24 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/22#discussion_r484082051" expanded>

Cases without a "break" should be followed by a comment saying that this is intentional.
</panel>

</panel>

<panel type="info" header="### 4. NEIL..RJEE `@neilbaner` (19 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/221#discussion_r482703539" expanded>

Could this be named a bit more descriptively? As it stands I'm not entirely sure what this variable is for. 
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/221#discussion_r482703738" expanded>

Ditto for here, perhaps the name could be more descriptive about the function/use of the variable rather than the content?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/221#discussion_r482703783" expanded>

Same as above.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/221#discussion_r482703961" expanded>

Might it be a good idea to extract this out as a constant so you call that, instead of repeating this line of code over and over?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/221#discussion_r482705102" expanded>

Would a for loop be appropriate here? 
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/221#discussion_r482705344" expanded>

Perhaps this variable could be named more clearly so it's more obvious what it's for?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/221#discussion_r482707732" expanded>

Not sure if this is a violation of any standards per se, but would this method be better as a non-static method that modifies the specific instance? It might clean up some of the code where you call it too. Is there any reason this is static?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/221#discussion_r482707860" expanded>

I like this, an ingenius solution in my opinion. 
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/221#discussion_r482708201" expanded>

Not sure if this is a standards violation, but OOP best practice as far as I am aware is to grant as little access as necessary. Should this perhaps be private instead of protected? 
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/202#discussion_r482700788" expanded>

Perhaps this would be better as a constant (final, with appropriate naming style)?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/202#discussion_r482700946" expanded>

Same here, perhaps it would be appropriate to make this a constant. 
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/77#discussion_r482711132" expanded>

Not sure if this violates any standards in the "code quality" guidelines, but OOP best practice as far as I am aware is to only allow as much access as strictly necessary. Perhaps this should be private instead of protected?
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/77#discussion_r482711378" expanded>

Nice use of SLAP :)
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/77#discussion_r482711538" expanded>

I'm not sure of the purpose of this line. Perhaps clearer variable naming or a comment would be appropriate here?
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/77#discussion_r482711859" expanded>

Not sure if this blank line is necessary? Is it for readability? I think it would be fine without, personally.
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/77#discussion_r482712108" expanded>

Could this be simplified (perhaps with some SLAP) to avoid the dreaded "arrowhead code"?
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/77#discussion_r482712544" expanded>

Perhaps this (and the conditions above) would be a good section of code to SLAP?

</panel>

<panel  header="**18 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/77#discussion_r482713016" expanded>

Could this be made a constant to avoid code duplication?
</panel>

<panel  header="**19 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/77#discussion_r482713740" expanded>

Could this be private?

</panel>

</panel>

<panel type="info" header="### 5. DANI..OONG `@daniellimws` (17 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/170#discussion_r481685567" expanded>

Consider assigning `input.split("todo")[1].trim()` to a variable (for example `description`) that represents the purpose of this argument?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/170#discussion_r481685855" expanded>

Consider assigning `input.split("event")[1].trim()` to a variable (for example `eventDetails`) that represents the purpose of this argument?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/170#discussion_r481688697" expanded>

Consider assigning `input.split("event")[1].trim()` to a variable (for example `deadlineDetails`) that represents the purpose of this argument?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/125#discussion_r481665702" expanded>

Need a space before `time`.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/125#discussion_r481665810" expanded>

Need a space before `time`.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/125#discussion_r481666375" expanded>

Need a space before `tasks`.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/125#discussion_r481666773" expanded>

Can drop the `this.`
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/125#discussion_r481667875" expanded>

Drop the `this.`
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/125#discussion_r481668200" expanded>

Drop the `this.`
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/125#discussion_r481668286" expanded>

Drop the `this.`
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/125#discussion_r481668377" expanded>

Drop the `this.` Method block should be in a new line.
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/125#discussion_r481669218" expanded>

Drop the `super.`
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/125#discussion_r481669812" expanded>

Add a space before `{`.
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/125#discussion_r481672648" expanded>

Remove the `super.`.
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/125#discussion_r481672849" expanded>

Unused import.
</panel>

<panel  header="**16 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/125#discussion_r481673290" expanded>

Remove the `super.`.
</panel>

<panel  header="**17 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/125#discussion_r481673505" expanded>

Drop the `this.`.
</panel>

</panel>

<panel type="info" header="### 6. JOHA..RDJI `@johanesrafael` (15 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/187#discussion_r482722079" expanded>

Perhaps, you should name a class with PascalCase manner as stated in Coding Standard(for example: ToDo)
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/187#discussion_r484082291" expanded>

Pay attention to the naming of variable so todo should be toDo
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/187#discussion_r484082560" expanded>

Hey! just an advise: you can use a constant for the array like MAX_LIST_SIZE
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/187#discussion_r484083217" expanded>

perhaps, the naming should be addedToDo
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/116#discussion_r481529749" expanded>

Hey I like how you created a method for the output format!
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/70#discussion_r482718468" expanded>

Hello! Perhaps, you can add comment on this one for signifying a conversion (for example: // convert taskIndexString into an integer)
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/70#discussion_r484081289" expanded>

Hello! you may pay attention to above. the ); is better in line 55 or you can use what you've done before in printing message(Egyptian style)
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/70#discussion_r484081931" expanded>

Hello! you may pay attention to above. the ); is better in line 33 or you can use what you've done before in printing message(Egyptian style)
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/70#discussion_r484083005" expanded>

Hello again! perhaps, you can make this in line 115 such that it is not redundant like "String userInput = input.nextLine(); and also can comment it as //scan user input
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/48#discussion_r484083611" expanded>

Hello! perhaps, you should pay attention to the naming (camelCase style) like commandTxt
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/48#discussion_r484083740" expanded>

Again, the naming  should be in camelCase like if just one word, it would be "message" for such
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/48#discussion_r484084098" expanded>

Hey! you can reformat each conditional to do specific method like if (Message[0].equals("done")) { done();}
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/48#discussion_r484084251" expanded>

perhaps, you should name the variables in camelCase
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/48#discussion_r484084444" expanded>

perhaps, after +, there should be spacing to increase readability
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/48#discussion_r484084671" expanded>

you can make it with just one System.out.println("...\n"). perhaps, use "\n" after each sentence
</panel>

</panel>

<panel type="info" header="### 7. CHAN.. HAO `@ChanJianHao` (15 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/217#discussion_r483381355" expanded>

Variable `line` might not be very descriptive? 
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/217#discussion_r483381559" expanded>

Perhaps there is an extra newline here?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/217#discussion_r483381610" expanded>

Could there be an unnecessary newline here?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/217#discussion_r483381797" expanded>

Maybe you want to cleanup comments like these? 
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/217#discussion_r483382384" expanded>

Variable `in` is not might not be very descriptive 
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/217#discussion_r483383794" expanded>

Please add a space between `else if` and statement. 
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/183#discussion_r483384857" expanded>

Consider adding classes like `Task` into a separate file
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/183#discussion_r483385767" expanded>

Please consider adding comments to your methods to explain them.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/183#discussion_r483386289" expanded>

Consider having `space` between conditions?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/183#discussion_r483386531" expanded>

Variable names like `position` could be ambiguous
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/183#discussion_r483387331" expanded>

Variable `in` might be ambiguous
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/183#discussion_r483388894" expanded>

You might want to consider reducing code reuse. I noticed how `substring` is being used multiple times for event/deadline etc. You could implement a method for this.
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/134#discussion_r484049008" expanded>

You could consider making a method that returns both `taskToFinish.getStatusIcon() + " " + taskToFinish.description`
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/134#discussion_r484049119" expanded>

Consider making constant for magic numbers/literals. 
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/134#discussion_r484049175" expanded>

I like how you used constant for line, could be used for others too.
</panel>

</panel>

<panel type="info" header="### 8. TAN ..ELIA `@AmeliaTYR` (15 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/171#discussion_r484035221" expanded>

Avoid magic numbers! extract it as a constant like MAX_TASKS to be clearer!
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/171#discussion_r484035310" expanded>

This if-else block is a bit long. Refactoring it into extracted methods would make the code clearer!
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/171#discussion_r484035351" expanded>

Printed messages should be extracted as constant strings for easy editing (and localisation)
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/171#discussion_r484035613" expanded>

Best to use \u???? instead of the symbol so it can be saved properly when testing
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/20#discussion_r484034024" expanded>

This if else block is a bit long. You could extract methods for the individual commands to improve readability :D
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/20#discussion_r484034136" expanded>

The printed logo, and the greeting message could be extracted and printed using a single method eg printIntroMsgs() so it appears as 1 line in main
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/20#discussion_r484034325" expanded>

For the classes you could add setters and getters as part of encapsulation?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/20#discussion_r484034511" expanded>

printed messages could be extracted as constants to the top of the code for easy editing (and localisation if needed)
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/20#discussion_r484034546" expanded>

Magic number 100 could be extracted as MAX_TASKS for clarity
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/10#discussion_r484032112" expanded>

Maybe the function names can be a bit more descriptive like for this one what prints the full task list it could be printTaskList or something?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/10#discussion_r484032308" expanded>

you could create setters and getter functions as part of encapsulation? (i think)
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/10#discussion_r484032541" expanded>

This may count as excessive use of the this word?
https://se-education.org/guides/conventions/java/index.html#variables 
https://github.com/nus-cs2113-AY2021S1/forum/issues/27
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/5#discussion_r481615568" expanded>

Could break up this long function into smaller parts for better readability
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/5#discussion_r481621531" expanded>

Maybe you can try refactoring your statements as a constant if you need to print a few lines at the same time.

(eg GREETING for this block) and only need 1 line of code to print it (ie System.out.println(GREETING);)
</panel>

<panel  header="**15 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/5#discussion_r481629173" expanded>

You could state the function description for the listTasks as a comment if you want to be super clear.
</panel>

</panel>

<panel type="info" header="### 9. YEOW..NDON `@brandonywl` (14 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/208#discussion_r482720625" expanded>

Good code quality!
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/208#discussion_r482721177" expanded>

Consider using switch statements for user-readability.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/208#discussion_r482721421" expanded>

Consider using constants instead to reduce number of magic literals.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/208#discussion_r482722879" expanded>

Consider encapsulating the handling of Tasks under a new class called TaskManager to handle add, get, sets, mark done. This allows for better abstraction of data and functions. This will allow Duke to handle more of the CLI matters such as printing and handling user inputs.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/208#discussion_r482723933" expanded>

So every task has a reference to the taskList? Then it is irrelevant to store a Task[] in Duke. Instead, static setters and getters could be used. 
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/148#discussion_r482716882" expanded>

Good! Follows all basic coding standards laid out in the syllabus. In the case of actionType, you can consider using constants to reduce magic literals.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/148#discussion_r482717559" expanded>

Unnecessary to use "this" in reference to the properties isDone and category when there are no similarly named arguments passed into the method.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/148#discussion_r482718555" expanded>

"this" keyword should be used when the arguments passed in into the constructor is similarly named to the properties of the object.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/148#discussion_r482718689" expanded>

Similar issue observed in Event as well as Deadline
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/148#discussion_r482718902" expanded>

Similar to all the subclasses of Task
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/135#discussion_r482725448" expanded>

"this" keyword should be utilised when the arguments are named similarly to the properties
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/135#discussion_r482726566" expanded>

Consider refactoring to use more constants and reduce the number of magic literals.
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/135#discussion_r482727835" expanded>

Consider abstracting Task, Todo, Deadline and Event to separate files rather than nesting them as a static class.

This allows for better encapsulation of functionality and data to the relevant classes, improving user readability.
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/135#discussion_r482730982" expanded>

Consider creating 2 functions to improve abstraction here: 

1. "Add the new task into the "items" array and to +1 to itemCount"
2. "Obtain due/at based on indexDivider and obtain the input".
</panel>

</panel>

<panel type="info" header="### 10. EYO ..CHIN `@EyoWeiChin` (14 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/153#discussion_r483381459" expanded>

Should the case statements be on the same indentation with the switch statement?

</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/153#discussion_r483382308" expanded>

I think this could be changed to a constant variable by using 'final'?
example: 
public static final INDENT_SPACE = "     ";
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/153#discussion_r484035582" expanded>

Should this 'else' be on the same line as the closing brace of the 'if' statement?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/153#discussion_r484035800" expanded>

The Task name newObj is not very obvious later on, perhaps it could benefit code readability if it was changed to newTask?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/153#discussion_r484036187" expanded>

To add on to what Zhi-You have pointed out, perhaps this line could be refactored out as a method? This would help the code adhere closer to SLAP
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/153#discussion_r484036462" expanded>

I like how this was method was formatted, very nice!
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/108#discussion_r483386375" expanded>

I feel that your code is well-written and easy to understand!
One comment I have though is whether the magic string literal and magic number such as "/by" and "4" could be extracted out as a constant variable to improve code quality?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/108#discussion_r484032972" expanded>

Should the variable 'i' be renamed to something more descriptive?
example: totalTaskAdded

</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/108#discussion_r484034298" expanded>

I feel the code's readability can be benefited more with an '@Override' comment for overridden methods, even though it is only optional.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/108#discussion_r484037336" expanded>

Perhaps these two lines could be refactored out as a method? It could help ensure that processCommands() adhere to SLAP more closely.
e.g. getUserInput(), splitCommand().
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/15#discussion_r484038246" expanded>

Perhaps this code block could be extracted into a new method? It will help improve code readability by following SLAP. It could be similar to your goodbye() method.
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/15#discussion_r484038491" expanded>

Should this method be removed? It does not seem to be in use.
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/15#discussion_r484038797" expanded>

Perhaps this list Task could be removed? It does not seem to be in use.
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/15#discussion_r484039436" expanded>

I think the variable name 'sum' could be replaced with something more descriptive, as it will help code readability!
example: totalTasks
</panel>

</panel>

<panel type="info" header="### 11. MATT..GANI `@matthewgani` (14 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/191#discussion_r482176717" expanded>

'deadline' may be confusing, maybe could change to deadlineDate?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/191#discussion_r482182981" expanded>

Maybe you could change executeCommand to accept no parameters and start accepting the userInput inside the top of the while loop of the method for clarity? 
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/191#discussion_r482217454" expanded>

Not sure but java.util.Arrays may be unused, you should remove if it is unused
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/191#discussion_r482703813" expanded>

Good SLAP in this method!
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/38#discussion_r481953522" expanded>

Variable name like echo_msg should be in camelCase and not have an underscore
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/38#discussion_r481958764" expanded>

I think the brackets for case are unnecessary but it's up to you if you want to keep them
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/38#discussion_r481959014" expanded>

variable should be camelCase
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/38#discussion_r481961190" expanded>

Nice job with indentation for wrapped lines to make sure line length isnt too long
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/38#discussion_r481963386" expanded>

Good job with the case formatting when using switch
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/38#discussion_r481963851" expanded>

Correct format for try-catch statement
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/38#discussion_r481964115" expanded>

I think you should add break; for default
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/38#discussion_r481980557" expanded>

Good job on the explicit imported class
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/38#discussion_r482700947" expanded>

I think you should have a spacebar after the brackets in printTask() to keep consistency, there are a few methods  that does not have this too like your addNewTodo, addNewDeadline etc.
</panel>

<panel  header="**14 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/38#discussion_r482701950" expanded>

I think space bar is needed after the if and between the bracket for consistency throughout, some other instances of these in your code
</panel>

</panel>

<panel type="info" header="### 12. ANDR.. HUA `@AndreWongZH` (13 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/166#discussion_r481679006" expanded>

I would suggest using camel case for variables. How about timeFrame?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/166#discussion_r481680514" expanded>

I do not really understand this number 2. Maybe you can convert this into a named constant for better readability?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/166#discussion_r481685655" expanded>

Since this is a collection of tasks, may I suggest using a plural form of the variable such as tasks?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/110#discussion_r481662860" expanded>

Plural form should be used when naming collection of arrays. Maybe this can be named as lists instead.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/110#discussion_r481666066" expanded>

Maybe you need to re look at the correct form of if-else statements similar to the coding standards.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/110#discussion_r484103753" expanded>

Maybe have a spacing between the parameters for readability.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/110#discussion_r484103906" expanded>

Maybe the if - else statement can follow the Java convention.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/110#discussion_r484104455" expanded>

Maybe have a spacing between the round brackets and curly brackets.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/110#discussion_r484104612" expanded>

Maybe consider method to have a verb name such as printGoodbyeMessage.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/11#discussion_r481932949" expanded>

I think there should be a space between the round and curly brackets
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/11#discussion_r481935779" expanded>

Maybe you can convert the number 100 into a named constant for better understanding. I suggest naming it as MAX_TASK_SIZE
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/11#discussion_r481937422" expanded>

Maybe consider changing the name of the method to be more of a verb, such as describeTask.
However if the purpose if to print out information about the object, maybe using a toString method would be useful
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/11#discussion_r481941138" expanded>

You can consider replacing the string literals with enums for more readability.
</panel>

</panel>

<panel type="info" header="### 13. CHAN..LING `@chocomango` (13 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/134#discussion_r483973145" expanded>

I like how you used the System.lineSeparator() for newline so that it would not be platform dependent.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/134#discussion_r483973416" expanded>

Is there a reason to use if else statement? I personally think that a switch statement would slightly improve the code's efficiency when dealing with multiple choices. It would also make it easier to read and edit in the future.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/134#discussion_r483973641" expanded>

the addTask method's if else statement could perhaps merge with this if else statement?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/51#discussion_r483373500" expanded>

Good job on your indentation for switch statement.

</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/51#discussion_r483374583" expanded>

A better naming convention in plural form for this variable would help in code readability.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/51#discussion_r483975913" expanded>

Is there a reason to put this possible method as a whole class on its own?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/51#discussion_r483979942" expanded>

No problem! I am actually referring to the String array “split” as I thought since it is an array, it may be better to be named “parts” “words” or “commands”, generally in plural form for more meaning. 
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/51#discussion_r483979944" expanded>

No problem! I am actually referring to the String array “split” as I thought since it is an array, it may be better to be named “parts” “words” or “commands”, generally in plural form for more meaning. 
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/44#discussion_r483372722" expanded>

Good indentation for the the switch statement.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/44#discussion_r483974280" expanded>

I like how all the constants are named and used in the code. Really improved the code's readability.
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/44#discussion_r483974578" expanded>

Just curious if the name _LS_ would be confusing as NEWLINE seems to be more intuitive.
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/44#discussion_r483975040" expanded>

Is there a reason to include _this.toString()_ in the constructor?
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/44#discussion_r483975519" expanded>

Since this enum is limited to the Task class, it may be better to declare it in the class to limit its scope.
Also, since enum is a group of constants, it is better to use all uppercase.
</panel>

</panel>

<panel type="info" header="### 14. TRA ..HONG `@Promethees` (13 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/200#discussion_r482145271" expanded>

Need a 'space' before the curly bracket
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/200#discussion_r484053682" expanded>

Can omit this at this.isDone to make the code neater
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/170#discussion_r482147798" expanded>

Space before the curly bracket
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/170#discussion_r482148116" expanded>

Space before curly bracket
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/170#discussion_r482148459" expanded>

Space before curly bracket
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/85#discussion_r481613456" expanded>

Good work!
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/85#discussion_r481613869" expanded>

Well done!
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/85#discussion_r481889995" expanded>

The line should be assigned as a constant for convenience
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/85#discussion_r484063079" expanded>

Can diversify the commands adapting the different forms of the same commands(ie cases with capitalized letters
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/85#discussion_r484063262" expanded>

need additional space after the "if"s
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/85#discussion_r484063365" expanded>

the horizontal bar should be called as a constant for convenience
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/41#discussion_r481614852" expanded>

Good work!
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/41#discussion_r481624765" expanded>

Should use constants for assigning to these => enhance readability and facilitate coding
</panel>

</panel>

<panel type="info" header="### 15. YEN ..FANG `@pinfang` (13 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/192#discussion_r483421236" expanded>

You may want to list out the Scanner only instead of all the java util?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/192#discussion_r483421909" expanded>

Shouldn't the naming be camelCase?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/192#discussion_r483422435" expanded>

Is there any other better naming instead of 'in'?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/192#discussion_r483423063" expanded>

This naming is clear, good.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/120#discussion_r480983732" expanded>

Shouldn't these be all capital letters? (TODO, EVENT, ... )
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/120#discussion_r480985085" expanded>

Is "in" a good naming?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/120#discussion_r480987743" expanded>

Should there be a space after Task ?
I noticed the same issue in several other places too.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/120#discussion_r483404910" expanded>

You have separated a class to handle the commands. I like it.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/120#discussion_r483415625" expanded>

This is good.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/120#discussion_r483416542" expanded>

I like how clean this bit of code is.
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/120#discussion_r483417209" expanded>

The naming are good and easy to understand.
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/120#discussion_r483417699" expanded>

Should there a spacing after the command.isEmpty()?
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/120#discussion_r483418056" expanded>

This is good.
</panel>

</panel>

<panel type="info" header="### 16. ZHAO..IANG `@e0426051` (13 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/120#discussion_r483368483" expanded>

Good readable code, no deep nesting/arrowhead style
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/120#discussion_r483369430" expanded>

In general the expressions are relatively simple. Also no magic numbers
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/120#discussion_r483370197" expanded>

The code is also largely KISS compatible, easy for readers
SLAP is also implemented appropriately
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/120#discussion_r484033055" expanded>

Good SLAP implementation to de-clutter the main function.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/61#discussion_r483362471" expanded>

Constants should be in UPPER_CASE format
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/61#discussion_r483363050" expanded>

Constant should be UPPER_CASE
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/61#discussion_r483363426" expanded>

UPPER_CASE
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/61#discussion_r483364624" expanded>

correct indentation for comment
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/61#discussion_r483364708" expanded>

correct array format x[] y
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/61#discussion_r483364805" expanded>

correct mention of lack of break statement in comment
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/61#discussion_r483364879" expanded>

correct indentation for for case statements
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/61#discussion_r483364960" expanded>

correct naming of functions
</panel>

<panel  header="**13 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/61#discussion_r483365038" expanded>

correct boolean naming
</panel>

</panel>

<panel type="info" header="### 17. NG W..IONG `@weisiong24` (12 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/223#discussion_r482627034" expanded>

Nice! You add conditions and behaviors where there is no task done
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/212#discussion_r482700612" expanded>

Good quality of code to make the line that are printed over and over into method so that it improves readability of codes.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/211#discussion_r482715455" expanded>

Great Job! Your code adhere to the coding standards.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/210#discussion_r482703000" expanded>

There should be spacing between } and else if for this loop (Coding standards)  
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/192#discussion_r482631269" expanded>

Shouldn't this task class be its own class file? But overall, the coding is neat and easy to understand. Good job .
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/172#discussion_r482704786" expanded>

Switch Case : For each case statement no indent is need (Coding Standard)
switch (condition) {
case ABC:
    statements;
    // Fallthrough
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/109#discussion_r484038276" expanded>

Single statement conditionals should still be wrapped by curly brackets.
Suggestion:
if (stream != null) {
    readFile(stream);
}
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/109#discussion_r484038470" expanded>

Form of The if-else class of statements is incorrect.
Suggestions: 
if (condition) {
    statements;
} else if (condition) {
    statements;
} else {
    statements;
}
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/109#discussion_r484038619" expanded>

Too Much space is added.
Suggestion: Remove unnecessary spacing to improve readability of codes
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/62#discussion_r484036950" expanded>

isExited is grammatically incorrect
Suggestion:maybe you could use isExit as this will sound more like a question and it fits the English grammar better
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/62#discussion_r484037836" expanded>

Great Job. It follows the coding standards for loops and indentation.
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/62#discussion_r484038026" expanded>

Naming of variable is abit unclear here.
Suggestion: Make this variable to be name more to its function , more towards what it is being used.
</panel>

</panel>

<panel type="info" header="### 18. TANG..TING `@t170815518` (12 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/105#discussion_r482713954" expanded>

Maybe this section could be refactored into a sub-method to make it shorter?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/105#discussion_r482714586" expanded>

I would use a getter for the attributes of subclasses of Task. :)
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/105#discussion_r482715861" expanded>

I like your way to refactor the `printSeparator()` function
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/105#discussion_r482716526" expanded>

How about using a constant `MAX_TASK_NUM` for the array length.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/105#discussion_r482716949" expanded>

I like this refactoring :) BTW, how about giving a more intuitive name such as `printSuccessfullyAddedMessage()`?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/101#discussion_r482717497" expanded>

Is there any reason for you using `print()` instead of overriding `toString()`? 
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/101#discussion_r482717648" expanded>

I like your treatment for this special case. 
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/101#discussion_r482717986" expanded>

Maybe this part could be refactored to a sub-method? 
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/101#discussion_r482718583" expanded>

I like the `startsWith()`, which is a neat method to detect the command 
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/101#discussion_r482718807" expanded>

I would set a getter for attributes of subclasses of Task :)
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/101#discussion_r482719008" expanded>

I like your way to refactor the messages :)
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/101#discussion_r482719463" expanded>

I like how you treat `TaskList`
</panel>

</panel>

<panel type="info" header="### 19. TAN ..HONG `@TanJunHong` (12 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/208#discussion_r482812485" expanded>

Looks Good, but you could declare this as a constant?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/208#discussion_r484054757" expanded>

Avoided deep nesting. Well done!
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/208#discussion_r484054847" expanded>

I like that you used comments to explain the code, but perhaps the comment could be placed on top of the code itself?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/208#discussion_r484054917" expanded>

I like how you declare a constant to avoid magic number!
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/208#discussion_r484055234" expanded>

I like how you made your code very easy to understand by having only functions in main!
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/63#discussion_r482804726" expanded>

Followed constant naming conventions. Nice!
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/63#discussion_r484043348" expanded>

Nice that you use a function to set tick, but perhaps this function should be named setCompleted() or setTick()?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/63#discussion_r484043373" expanded>

Nice that you use a function to set tick, but perhaps this function should be named setIncomplete() or setCross()?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/63#discussion_r484043561" expanded>

Nice that you used Egyptian style brackets, but perhaps there should be a space before the bracket so that it looks more standardized?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/63#discussion_r484043781" expanded>

Good that you list the imported class explicitly. Well Done!
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/63#discussion_r484043805" expanded>

Nice that you used Egyptian style brackets, but perhaps there should be a space before the bracket so that it looks more standardized?
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/63#discussion_r484043949" expanded>

Comments are indented relative to their position in the code. Well Done!
</panel>

</panel>

<panel type="info" header="### 20. TANG.. YOU `@Zhi-You` (12 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/153#discussion_r483391202" expanded>

Perhaps a more intuitive variable name here for 'desc'?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/153#discussion_r483392536" expanded>

Perhaps these can be extracted out if not in use? You can consider storing these comments somewhere accessible if you want to refer to it in future, but I think it would be better to extract them out now to make the commits in your pull request more readable!
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/153#discussion_r483393637" expanded>

Should the tick be made into a constant to avoid having magic literals in your code? I noticed that there are a few more occurrences of this in your code elsewhere. 
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/153#discussion_r483394935" expanded>

Perhaps you can use a more intuitive name for "descArr"? I noticed the same issue in several other variables too.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/153#discussion_r483395703" expanded>

Perhaps you can consider refactoring some parts over here? Considering this is the main method, I think it would be better if it could be made more readable such that readers can quickly understand what behaviour the code will give when the program is ran. 
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/153#discussion_r483396039" expanded>

Should the case statements be indented to the same extent as the switch () statement? 
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/153#discussion_r483396570" expanded>

Should this be @override instead? If you think so too, then it would be applicable to the other overridden methods that you have!
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/153#discussion_r483398063" expanded>

Perhaps you might want to create a variable for inputArr[0], such that it would be clearer for the readers and yourself as to what you are checking in your switch statement?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/103#discussion_r483382949" expanded>

I think the names you are using for your methods are good and intuitive! You have also named them in camelCase too which follows the coding practices! 
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/103#discussion_r483384981" expanded>

I like that the naming you used for this (in particular taskType) is intuitive, despite passing in 'command' in processUserInput.
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/103#discussion_r483386232" expanded>

I think it would be better if comments are added to the methods to explain what they do. I noticed the same issue in the other methods that you declared too.
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/103#discussion_r483390733" expanded>

Should this be split into two lines? 
</panel>

</panel>

<panel type="info" header="### 21. VISH..RORA `@wish2023` (12 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/146#discussion_r481677914" expanded>

It may be neater to refactor this into another method
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/146#discussion_r481678146" expanded>

Same here. Refactor :) 
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/146#discussion_r481678367" expanded>

And here :) 
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/146#discussion_r481679651" expanded>

Yup refer to https://se-education.org/guides/conventions/java/basic.html for coding standards
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/146#discussion_r481681476" expanded>

I like how you used toString()
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/146#discussion_r481681963" expanded>

This looks really neat! good job
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/133#discussion_r481660925" expanded>

Will it be better to use toString() instead of printTask()
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/133#discussion_r481663720" expanded>

Would it be better to have the function name as isDone() ?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/133#discussion_r481665792" expanded>

I like how you've made a different method for every different command 👍 
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/133#discussion_r481666707" expanded>

Nice idea to detect errors :)
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/133#discussion_r481668101" expanded>

Not sure if you should use magic numbers, maybe try declaring a constant?
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/133#discussion_r481669484" expanded>

Not sure if methods should be named in continuous tense
</panel>

</panel>

<panel type="info" header="### 22. ZHAN..IAYI `@gua-guargia` (12 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/165#discussion_r483372720" expanded>

Perhaps can change the 100 to a constant "MAX_TASK" to avoid the magic numbers
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/165#discussion_r483373724" expanded>

Perhaps can name the Task array to "tasks" instead of "list", this name probably will be easier to understand by other developers
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/165#discussion_r483374191" expanded>

Perhaps can extract this to a method outside of the while loop so that the level of abstraction inside the while loop is consistent.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/165#discussion_r483374521" expanded>

I like how you add an additional comment here to annotate the function of this code block.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/165#discussion_r483375424" expanded>

Perhaps can add a few more variables to store the processed message before this line of code. This can decrease the complexity of the expressions and improve the readability.  I noticed the same issue in several other parts too.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/165#discussion_r483376215" expanded>

Similar to the above line of code where you created new tasks, i.e. "list[count] = new Deadline", perhaps can try to avoid the complicated expression
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/165#discussion_r483377016" expanded>

Perhaps name this class to "Todo"? so that it is more similar to the related subclasses (i.e. Event, Deadline)
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/165#discussion_r483377901" expanded>

Perhaps can refactorize this part of the if statement to avoid deep nesting
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/26#discussion_r483364744" expanded>

I like how you have no indentation for case clauses.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/26#discussion_r483365627" expanded>

Perhaps can declare the maximum size of the array list?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/26#discussion_r483369290" expanded>

Perhaps can change the "[D]" to a constant so that other developer knows it is for deadline type. I noticed the same issue in other subclasses too.
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/26#discussion_r483369815" expanded>

Should this either be a cross/tick?
</panel>

</panel>

<panel type="info" header="### 23. VISH..NJAN `@sevenseasofbri` (12 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/200#discussion_r484035495" expanded>

Good use of SLAP, the main() method is very neat and readable.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/200#discussion_r484036440" expanded>

Since all classes in Java inherit from the Object class (directly/indirectly) it would be a better practice to include @\Override annotation when overriding the toString() method because the default toString method of the Object class prints [ObjectName] + Hex Code.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/200#discussion_r484036751" expanded>

Remember to put curly brackets to wrap any number of statements in an if-else block. Even if it is just 1 statement.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/125#discussion_r481747197" expanded>

Perhaps this could go under a function called addTask(). Will make the program more readable and modular.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/125#discussion_r484037379" expanded>

Since all these values are immutable and basically constant in the program- they can be declared as 'final.'
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/125#discussion_r484037476" expanded>

This part could be refactored to a function to check for validity of operation.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/125#discussion_r484037568" expanded>

The println() lines are quite long, consider line wrapping the code.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/125#discussion_r484037696" expanded>

if-else blocks should ideally have brackets wrapping the text even if it is one statement only
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/18#discussion_r481737459" expanded>

Should be defined as a constant using 'final.'
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/18#discussion_r484032367" expanded>

The name of this integer could be more descriptive. 
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/18#discussion_r484033488" expanded>

This variable could perhaps have a different name - because it stores the number tasks. The name 'size' is a little less descriptive in the terms of the purpose of the variable.
</panel>

<panel  header="**12 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/18#discussion_r484034067" expanded>

Since these functions are creating Task objects, it would be better to name them according to the their purpose. That is, something like createEvent() or addEvent().
</panel>

</panel>

<panel type="info" header="### 24. MUHA..WALA `@MuhammadHoze` (11 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/151#discussion_r482744929" expanded>

It would be better if you could be more specific on the names of variable such as index and index2. 
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/147#discussion_r484039454" expanded>

Consider creating a function for the line "____________________"  so that it will improve code clarity and readability 
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/147#discussion_r484039637" expanded>

I like the way you specify each import class 
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/147#discussion_r484039738" expanded>

I would suggest if you could create this into a function as well as it will improve the readability 
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/147#discussion_r484040076" expanded>

To add on, i suggest you rename your objectname to something more descriptive/readable such as "task" 
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/99#discussion_r482738662" expanded>

It will more appropriate if you could indent this line into 2 separate lines 
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/99#discussion_r482741380" expanded>

Recommended to have the else-if on the next line 
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/99#discussion_r484038551" expanded>

Well done in writing individual import statements 
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/99#discussion_r484039048" expanded>

Consider elaborating your variable name to something more specific such as taskindex 
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/54#discussion_r484041363" expanded>

Nice way of displaying these messages by just calling a function 
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/54#discussion_r484041475" expanded>

Do take note of the "{" spacing after the for loop () 
</panel>

</panel>

<panel type="info" header="### 25. HUYN..RANG `@alwaysnacy` (11 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/157#discussion_r482705656" expanded>

Code Quality: are there more than 4 levels of indentation?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/157#discussion_r482706264" expanded>

Code standard (Naming): should greeting() (the method's name) be a verb?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/157#discussion_r482706832" expanded>

Naming: not very descriptive names
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/157#discussion_r482707045" expanded>

Coding standard:  should there be spaces in between?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/157#discussion_r482707168" expanded>

Coding standard: should there be spaces before '=' and '(true)'?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/157#discussion_r482707485" expanded>

Coding Quality: maybe it can be explained why 5 is there
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/157#discussion_r482708136" expanded>

Coding Quality: is this method used anywhere? 
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/127#discussion_r482698550" expanded>

Readability (magic number): maybe you could explain why it is 9?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/127#discussion_r482699085" expanded>

Coding standard: should else if be right after the above bracket?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/127#discussion_r482699187" expanded>

should else be right after the above bracket?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/127#discussion_r482704330" expanded>

is the line quite long (>120 characters)?
</panel>

</panel>

<panel type="info" header="### 26. KING..IANG `@kstonekuan` (11 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/167#discussion_r483384797" expanded>

Maybe this icon can be a named constant to be more descriptive
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/167#discussion_r483384960" expanded>

I like how this function captures all the welcome messages
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/167#discussion_r483385080" expanded>

I think the case statements should be at the same indentation as the switch word
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/167#discussion_r483385379" expanded>

Maybe these print statements could be refactored into a function as they seemed to be used a few times
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/167#discussion_r483385913" expanded>

I noticed this issue in a few other places too
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/167#discussion_r483386254" expanded>

These indexes might be a little hard to understand as magic numbers so you may want to make a constant to describe them better
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/167#discussion_r483386372" expanded>

Same thing for some of messages that are printed, might be better to make them constants?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/16#discussion_r483382306" expanded>

Maybe this variable can be described a bit more?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/16#discussion_r483383373" expanded>

I like how this boolean is named
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/16#discussion_r483383701" expanded>

Maybe this can be task instead of t, what do you think?
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/16#discussion_r483383933" expanded>

I think we should try not to use arr as it may be too general, maybe something like commandWords instead?
</panel>

</panel>

<panel type="info" header="### 27. ZHAN..ILIN `@Zhangyilin0203` (11 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/222#discussion_r484047720" expanded>

It will be better to create another method called donetask and put your code inside the method
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/222#discussion_r484047924" expanded>

it will be better to create a todo class and put the behavior of todo inside the class
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/222#discussion_r484048147" expanded>

could you let the use of temp2 be clearer by changing its name?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/194#discussion_r482707238" expanded>

It's very good to set TaskList() as another class so that can avoid Duke class being too long.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/37#discussion_r484046187" expanded>

Besides set the border as a constant string, it is also okay to create a printline() method, it might also be easier for you to add \n at the end of constant string if java allows
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/37#discussion_r484046613" expanded>

for the methods which has only one line, it will be also okay to directly include it in the if statement, because I find it a little bit hard to read if we need to switch to different methods frequently.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/37#discussion_r484047253" expanded>

for the methods which has only one line, it will be also okay to directly include it in the if statement to make it easier to read.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/37#discussion_r484047397" expanded>

Overall the coding standard is great!
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/8#discussion_r482702239" expanded>

Will it be better to give the constant 100 a constant name like MAX_TASK_NUMBER?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/8#discussion_r482703746" expanded>

The else if need to be in the same line as the end bracket "}" so that you can meet the requirement of coding standard
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/8#discussion_r484048501" expanded>

it could be clearer for the code by keeping your format consistent, the upper line could be [taskNumber - 1]
</panel>

</panel>

<panel type="info" header="### 28. ONG .. BIN `@n3wsoldier` (11 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/78#discussion_r483386329" expanded>

Applying SLAP would make main function more readable.
An example is you could refactor the switch into a method call executeCommand().
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/78#discussion_r483387028" expanded>

Is it possible to remove magic number, try declaring  "/by" as a constant DELIMIT_DEADLINE.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/78#discussion_r484041952" expanded>

Perhaps you can refractor the number 100 to show the meaning of it since its a constant?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/78#discussion_r484042230" expanded>

The description can be changed to follow the standard coding format.
Use this for reference: https://se-education.org/guides/conventions/java/basic.html#comments
And a quick tip within Intellij "/***" + enter will help with the description formating.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/78#discussion_r484042310" expanded>

Perhaps the method meant printInvalidCommand(), as suggested by the function of the method. 
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/78#discussion_r484042476" expanded>

I think the naming of the method can be improved, as the exit program would suggest the method ran System.exit(0);
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/51#discussion_r483381531" expanded>

Please use all caps for Constant (final). e.g. SCAN
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/51#discussion_r484038155" expanded>

A reminder to change "\n" to System.lineSeparator() which is more appropriate. If you find it hard to use consider making it a constant. Example: private static final String LS = System.lineSeparator(); and printing LS when line separator is needed.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/51#discussion_r484038870" expanded>

I'm not sure if makin a class for printing greeting is actually needed. Consider just putting it in the main as constant and using a method to print it.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/51#discussion_r484039618" expanded>

Try using class level members to store the number of tasks and the remaining number of tasks.
Do refer to the textbook: https://nus-cs2113-ay2021s1.github.io/website/book/cppToJava/classes/classLevelMembers/
Perks of doing this, you can increase the number of tasks within the constructor and the remaining task can be computed when you make a task as done.
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/51#discussion_r484040065" expanded>

The naming of the class usually will not be an action. I think such a class can be simplified into a method within the main.
</panel>

</panel>

<panel type="info" header="### 29. LIU ..FENG `@LIU-YiFeng-1` (11 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/144#discussion_r482703110" expanded>

Coding standard violation: the else if should be in the same line as the end brackets.
You may refer to the link below:
  https://se-education.org/guides/conventions/java/basic.html
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/144#discussion_r482703678" expanded>

Hi, I think there is some extra empty line here. You might want to edit it.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/144#discussion_r482704619" expanded>

Avoid unnecessary use of this with fields.
Refer to: https://se-education.org/guides/conventions/java/index.html#variables
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/144#discussion_r484142979" expanded>

I think this is a coding standard violation. Please refer to the following example from: https://se-education.org/guides/conventions/java/basic.html
E.g:
while (!done) {
    doSomething();
    done = moreToDo();
}
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/144#discussion_r484143256" expanded>

Same here, please refer to the following example, (i think there should always be a space before and after the parameter) :

if (condition) {
    statements;
}
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/144#discussion_r484143665" expanded>

well done, no coding standard violation
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/35#discussion_r482718342" expanded>

Hi, is this considered unnecessary use of this with fields? Correct me if I am wrong.

</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/35#discussion_r484144129" expanded>

The spacings between the methods are not consistent.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/35#discussion_r484144364" expanded>

perhaps the 100 can be made into a constant? So that it is more meaningful instead of just having 100 as a magic number
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/35#discussion_r484144615" expanded>

It would be good to convert the 100 into a constant, make it more meaningful instead of just having a magic number
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/35#discussion_r484144878" expanded>

good job on having the consistent layout for Task.numberOfTasks - 1
</panel>

</panel>

<panel type="info" header="### 30. KWEK.. HAO `@Speedweener` (11 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/136#discussion_r481665506" expanded>

Consider using a constant for the max number of task?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/136#discussion_r481668591" expanded>

Maybe consider separating code to different functions done(), list() to improve readability
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/136#discussion_r481671194" expanded>

I think you can afford to be more descriptive for the variable tmp. I understand what is echo but tmp is a bit ambiguous.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/136#discussion_r481673579" expanded>

Maybe consider trimming also in the case that the user inputs an extra space between the event and the description
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/136#discussion_r481676392" expanded>

All of the other classes (Task, Events, Todos Deadlines) are all very readable and within coding standards. Great Job!
Perhaps considering renaming classes to either all plural (Tasks) or all singular (Todo, Event, Deadline) for more uniformity
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/52#discussion_r481636662" expanded>

Maybe consider using string.format to reduce the amount of concatenations required?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/52#discussion_r481645631" expanded>

Great Job at coding standards over here! Although maybe consider moving the public final constants to main and making them private.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/52#discussion_r481646546" expanded>

I think this variable is a bit ambiguous. Maybe replace with remain or stay, to avoid confusion with the EXIT constant
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/52#discussion_r481648341" expanded>

I think the line spacing between the statements can be removed
do {
    statements;
} while (condition);
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/52#discussion_r481655107" expanded>

Nice separation of the if statement to improve readablity!
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/52#discussion_r481657391" expanded>

I think these two final ints/constants should be capitalized with underscores 
</panel>

</panel>

<panel type="info" header="### 31. WAMI..ALIK `@wamikamalik` (11 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/185#discussion_r483417324" expanded>

Perhaps a more intuitive variable name here? for example: itemNo
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/185#discussion_r483424981" expanded>

I really like how you divided the tasks here! Good Job 💯 
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/185#discussion_r484033402" expanded>

Maybe this comment and similarly line 40 can be removed, since they do not really explain the context.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/185#discussion_r484033671" expanded>

Maybe the initialization variable could be shorter, for example int i, as this is allowed for _for loops_
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/185#discussion_r484033864" expanded>

should this be written in the following form instead?
for (initialization; condition; update) {
    statements;
}
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/185#discussion_r484034089" expanded>

Any reason why this package is included here?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/24#discussion_r483427864" expanded>

Maybe these can be put in different functions for different types of inputs by refactoring the code? It might help to make the code more readable. 
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/24#discussion_r483428672" expanded>

Nice! I like how you have used white spaces to enhance readability. 😄 
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/24#discussion_r484037285" expanded>

Should the sub string be stored in a separate variable instead, to avoid reusing the variable "line" for a different purpose? I noticed a similar issue in other places as well.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/24#discussion_r484037831" expanded>

Maybe, this be separated out in a function to follow the SLAP principle. I found similar instances in other places as well.
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/24#discussion_r484038377" expanded>

Perhaps a more intuitive variable name here?
</panel>

</panel>

<panel type="info" header="### 32. ARIN..ATHI `@arindamshivatrip` (11 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/214#discussion_r481668754" expanded>

Great Organization of the code.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/214#discussion_r481669172" expanded>

Good job explaining the commands
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/214#discussion_r481670808" expanded>

Modular code is more readable. Nicely done!
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/152#discussion_r481699728" expanded>

Variable name could be less ambiguous
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/83#discussion_r484043999" expanded>

Great use of error handling and making the program as user friendly as possible. Perhaps in future iterations this could be made using exception handling to improve code structure.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/83#discussion_r484044036" expanded>

Great addition to the code on your end.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/83#discussion_r484044268" expanded>

A switch case statement might have been better suited to help make the code a little more readable
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/83#discussion_r484044437" expanded>

Good job making this a separate function.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/83#discussion_r484044487" expanded>

Could consider making task and abstract class?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/58#discussion_r481680790" expanded>

Consider removing this space
</panel>

<panel  header="**11 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/58#discussion_r481703271" expanded>

Consider removing extra lines here
</panel>

</panel>

<panel type="info" header="### 33. ZOU ..FENG `@teachyourselfcoding` (10 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/178#discussion_r482714888" expanded>

A placeholder for a first review
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/178#discussion_r484066558" expanded>

Great job capitalising constants!
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/178#discussion_r484067034" expanded>

instead of line,task list is suggested to be more clear about where this list belong to
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/178#discussion_r484067087" expanded>

Command might not be clear enough that this comes from user. Perhaps something like "userInput" will be clearer
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/178#discussion_r484067329" expanded>

if-else used correctly, but a switch statement might be clearer in showing the consequence of different inputs
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/131#discussion_r484068799" expanded>

methods are generally abstracted, which will improve readability further down the road. good job
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/131#discussion_r484068924" expanded>

Just commenting that the use of a switch over if-else statements means that each case is more readily shown upon review. good job
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/9#discussion_r484084133" expanded>

function name greeting should be imperative such as "drawHorizontalline" instead of "Horizontalline"
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/9#discussion_r484085840" expanded>

methods used are generally abstracted, which improves readability later on. Great job!
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/9#discussion_r484090469" expanded>

Using a case instead of else if helps improve readability further down the road, good job!
</panel>

</panel>

<panel type="info" header="### 34. LIU ..ORAN `@yuqiaoluolong` (10 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/212#discussion_r482734653" expanded>

Since the ListOfInputs is a variable name, it should be in camelCase.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/212#discussion_r482736034" expanded>

The if-else statement generally follows the standard except there are extra lines between } and else.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/150#discussion_r482743002" expanded>

The statement seems to be a little bit too long and complicated. You can consider shortening it by defining new variables to hold some values
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/150#discussion_r482743042" expanded>

It's wise to define constants in a separate class clearly.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/150#discussion_r482743703" expanded>

The statements here are also a little bit too complicated.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/150#discussion_r482744907" expanded>

nice nested if statement
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/58#discussion_r482711032" expanded>

Here you should leave a space between ) and {
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/58#discussion_r482711212" expanded>

a space between ) and {
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/58#discussion_r482711444" expanded>

I like your nicely structured nested if statement
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/58#discussion_r482711631" expanded>

You should leave a space between ) and {
</panel>

</panel>

<panel type="info" header="### 35. LOOI.. WEN `@kaiwen98` (10 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/198#discussion_r484064270" expanded>

May I suggest 9 to be refactored as a constant? If I am not interpreting the code wrongly, I suppose it can be refactored as MAX_ARG_NUM or MAX_ARG_COUNT.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/198#discussion_r484064323" expanded>

I would like to suggest changing listTasks() to showTaskList()! I believe this alternative is clearer on task function since list can refer to both list (noun) and list (verb).
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/198#discussion_r484064359" expanded>

Good implementation of the switch statement to handle individual states of operation!
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/191#discussion_r482819157" expanded>

Correct me if I am wrong, but I think the spacing on both ends of the sign is not necessary. Otherwise I will suggest it to be standardized with the rest of the mathematical expressions.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/191#discussion_r482819435" expanded>

I appreciate the naming conventions for the functions. It helps me get a strong general idea on what the function does  before I dive into the code!
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/191#discussion_r483448530" expanded>

Yes Randy. Its is a minor formatting issue that I have found, if it is at all an issue in the first place.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/191#discussion_r484031991" expanded>

Another suitable control flow alternative would be the switch statement! 
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/191#discussion_r484063934" expanded>

I think it is possible to simplify this even further by applying the condition to whether to append an "s" or a "\0" following the task word and reducing it to a single line of code, but that's just my preference!
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/191#discussion_r484063983" expanded>

i< tasks.size() ------ the spacing surrounding the '&gt;' operating seems to be different from the '-' operator. Perhaps it is a good idea to standardize the spacing!
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/191#discussion_r484064021" expanded>

Since the eventTag is associated with all tasks, perhaps we can put that as a private attribute associated with the subclasses of Tasks? I would suggest you introduce it as a class attribute of Task and assign it with the corresponding tag in the constructors of the subclasses.
</panel>

</panel>

<panel type="info" header="### 36. CHEN.. JUN `@iamchenjiajun` (10 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/39#discussion_r482745067" expanded>

Consider using constants to store the commands.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/39#discussion_r484080382" expanded>

I like the use of constants to refactor these magic strings!
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/39#discussion_r484080802" expanded>

The use of switch statements for commands makes the code look very neat! 👍 
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/39#discussion_r484081024" expanded>

Consider changing the indentation here to follow the coding standards regarding wrapped lines (i.e. "Indentation for wrapped lines should be 8 spaces more than the parent line.").
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/39#discussion_r484081291" expanded>

Consider changing the variable name to follow this naming guideline: "Plural form should be used on names representing a collection of objects".
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/39#discussion_r484081441" expanded>

Good job following the SLAP principle in your main method!
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/35#discussion_r482737970" expanded>

Consider adding spaces between the + operator here, it seems to be inconsistent with the rest of the code.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/35#discussion_r484079769" expanded>

Consider adding spaces between the + operator here, which seems to be inconsistent with the rest of the code.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/35#discussion_r484079971" expanded>

Consider renaming this function to printSeparator() to follow the guideline that methods should be verbs.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/35#discussion_r484080118" expanded>

Consider using a more descriptive method name, for example listTasks() to show what you are listing.
</panel>

</panel>

<panel type="info" header="### 37. TEOH..IANG `@zhixiangteoh` (10 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/222#discussion_r482745044" expanded>

Perhaps declare a final variable for the maximum number of tasks, as follows:
`static final int MAX_LIST_COUNT = 100` ?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/222#discussion_r484058791" expanded>

Maybe extract this as a constant, like so:

`public static final String BORDER = "____________________________________________________________\n"`?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/222#discussion_r484058995" expanded>

Perhaps extract this as a greeting method or constant to better align with SLAP paradigm?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/222#discussion_r484059045" expanded>

Maybe this need not be declared here, since you don't use it outside of the main while loop?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/222#discussion_r484059197" expanded>

Perhaps "command" is not the best name for this variable, since in your main while loop command is assigned to the whole line from `read.readLine()`; would it be better to name it something like `userInput` or `userInputLine` instead?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/222#discussion_r484059426" expanded>

Apart from extracting as method and overall improving readability, would it be better if `Integer.valueOf(arrOfStr[1]-1` is assigned to a variable before accessing it twice, on lines 38 and 41 as such? I think it would improve readability, especially if the variable is named appropriately.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/194#discussion_r482740366" expanded>

Perhaps can declare a final variable for COMMAND_BYE and the other similar commands, as in
`static final String COMMAND_BYE = "bye"` ?

Otherwise, clean code!
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/194#discussion_r484057945" expanded>

Might this be better/easier to follow if not a fall-through? Like 

`case COMMAND_DEADLINE: if (!line.contains("/by") { throw new DukeException("☹ OOPS!!! Missing or incorrect /by statement"); }`,

and similar for the COMMAND_EVENT, then followed by the fall-through case of

`return line.substring(line.indexOf(' ') + 1, line.indexOf('/') - 1);`

Otherwise, super good code and readable, easy to follow, and very logical.


</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/194#discussion_r484058135" expanded>

Perhaps can extract as method for these two lines, to better align with SLAP paradigm?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/194#discussion_r484058381" expanded>

Maybe can separate the printing done in `addToList` method with the action of adding to the TaskList? Like one call to add task to TaskList data structure, and another to print that the task has been added to list?
</panel>

</panel>

<panel type="info" header="### 38. LYU ..AWEN `@JiawenLyu` (10 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/144#discussion_r482712834" expanded>

Should the size 100 be extracted out as a constant?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/144#discussion_r482713183" expanded>

Perhaps the condition statement should be the input line begins with done, not contains done? 
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/144#discussion_r484057246" expanded>

Is 5 considered a magic number here?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/144#discussion_r484057848" expanded>

Is 9 considered a magic number here? A similar problem also happens in the next else if part.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/144#discussion_r484057976" expanded>

Does e seem to be meaningless as a variable name?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/144#discussion_r484058105" expanded>

Is a meaningless as a variable name?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/144#discussion_r484058500" expanded>

I like the way you distinguish different commands!
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/117#discussion_r482705562" expanded>

Should the size 100 be extracted as a constant?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/117#discussion_r482707768" expanded>

Perhaps use the name "words" rather than "word"? 
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/117#discussion_r482710104" expanded>

I like the way of judging the conditions of "done" command!
</panel>

</panel>

<panel type="info" header="### 39. DANZ..HERN `@dojh111` (10 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/193#discussion_r481751683" expanded>

You can consider refactoring your strings as constant instead, such as MESSAGE_GREETING, would make the code more readable and better for UI/UX design in the future.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/193#discussion_r481752141" expanded>

I would suggest your brackets follow the K&R style brackets (Egyptian style) to follow with the Java Coding standards
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/193#discussion_r481756153" expanded>

Maybe you could add some Javadoc comments to improve code readability
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/193#discussion_r481758018" expanded>

I would suggest changing the Tasklist array name to follow the Java coding conventions of naming, - camel case and arrays should show that they contain multiple elements, such as tasks
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/193#discussion_r481758793" expanded>

Suggest to use egyptian style brackets instead
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/193#discussion_r481759839" expanded>

I would suggest to follow the Java coding standards for white spacing, where there is white space after each operation
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/83#discussion_r481767046" expanded>

Hi, I would suggest refactoring the strings into a constants, such as MESSAGE_INVALID_COMMAND, instead of putting the string directly into the printline statements. This would improve readability and improve the UI/UX design experience.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/83#discussion_r481767304" expanded>

Maybe you could change the name from myObj to something else, such as myCommand
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/83#discussion_r481770481" expanded>

Maybe you can put the long if/else chain into a switch statement? May improve the code quality
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/83#discussion_r484045101" expanded>

Maybe you can refactor this into a separate method, so you can reuse the code for both event and deadline methods. This may improve the code quality
</panel>

</panel>

<panel type="info" header="### 40. JOSE..AHAM `@josephhhhhhhhh` (10 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/215#discussion_r483235788" expanded>

Can try changing all the quotes of underscores into a predefined constant, to ensure no magic literals kind of thing?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/215#discussion_r483382924" expanded>

Note that your case should be in line with the word switch (I think)
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/86#discussion_r483477822" expanded>

Correct coding standard, no violations as such! 
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/86#discussion_r484044449" expanded>

Correctly indented, with capitalisation requirements followed where needed.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/86#discussion_r484045454" expanded>

Coding standard followed well in this error handling portion of the function! Nice.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/86#discussion_r484046354" expanded>

The blank line may not be necessary, but noted that you did this once in another add function. Also noted other functions with print lines don't have the blank line between the print section and the rest of the function. Maybe can standardise no blank line?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/45#discussion_r483462949" expanded>

Meticulous commenting, and proper indentations and spacing. No coding violations, very high readability. Nice!!
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/45#discussion_r484046986" expanded>

Indented really well, which really helps in fluid reading and comprehension of your code! Nice.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/45#discussion_r484047107" expanded>

Solid comments that clearly indicate what the function intends to do, and also neatly indented. Readability wise, all good! Naming convention adhered to as well!
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/45#discussion_r484047247" expanded>

Neat indentation, and informative commenting that explains function use well. Naming conventions all followed! Good job!
</panel>

</panel>

<panel type="info" header="### 41. NEO ..JOEL `@yAOwzers` (10 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/174#discussion_r482699660" expanded>

Import Statements are listed explicitly, which is a good practice! 
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/174#discussion_r482700972" expanded>

Consistent Indentations and spacing, good job! Simple to read and understand
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/174#discussion_r482701350" expanded>

Excellent practice on having consistent coding standards across the different class files
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/174#discussion_r482701746" expanded>

There is no content inside this method, maybe there was an oversight on this? Perhaps a removal of this method might reduce confusion
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/174#discussion_r482702925" expanded>

Maybe you might want to remove these empty line spacings that are found in your methods? It might allow easier flow of readability by the reader.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/38#discussion_r482704778" expanded>

Inconsistent spacing and indentations make it difficult for readability. Maybe altering it to be consistent will help with over flow.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/38#discussion_r482705128" expanded>

Good work splitting the lines to make it easier for readers to view your code
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/38#discussion_r482707480" expanded>

Do use K&R bracketing style, even if it is only one line of code under the _if_ statement
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/38#discussion_r482898111" expanded>

Try to eliminate all these empty spaces as it makes reading the code difficult
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/38#discussion_r482898684" expanded>

Try to keep all your spacings consistent, even with normal statements.
</panel>

</panel>

<panel type="info" header="### 42. ZEON..EIYI `@CFZeon` (10 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/190#discussion_r484037801" expanded>

Maybe you can shorten this line? The hard character limit is 120 characters. It seems like it occurs other times too.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/190#discussion_r484037955" expanded>

It seems like your comments have inconsistent indentation!
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/190#discussion_r484038033" expanded>

Why is the break here commented out?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/180#discussion_r483369066" expanded>

Very nice! Proper formatting of if-else statements here.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/180#discussion_r483369926" expanded>

Maybe find a way to shorten this line? It seems too long.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/86#discussion_r483370947" expanded>

Perhaps you could declare a constant for the line?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/86#discussion_r483371612" expanded>

Maybe give the task array a clearer name?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/86#discussion_r484036994" expanded>

It would be very helpful to have a comment here to explain this line!
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/86#discussion_r484037186" expanded>

Maybe declare the variable inside the for loop itself?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/86#discussion_r484037541" expanded>

Maybe refactor these print message lines across your multiple add task methods?
</panel>

</panel>

<panel type="info" header="### 43. JOHN..IANG `@JohnNub` (10 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/185#discussion_r484070776" expanded>

Should these be declared as constants instead?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/185#discussion_r484070895" expanded>

Should the formatting here be modified such that there is an extra space between the end of the parenthesis and the opening brackets `){` vs `) {` , as well as between the end of the bracket and the start of an `else if`?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/185#discussion_r484071091" expanded>

Is this import being used?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/185#discussion_r484071184" expanded>

I noticed you use the optional `@Override` for every single overridden function except for this one. Should there be one here too for consistency?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/185#discussion_r484071342" expanded>

Should `taskCount++;` be put in the update as the 3rd parameter for the `for` loop since its the iterator for this loop?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/185#discussion_r484071545" expanded>

Should there be an extra space between `while` and the opening parenthesis and then another space after the `||`?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/71#discussion_r484070012" expanded>

Maybe you should consider making this a static constant? It would help tidy up the repetition in the code.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/71#discussion_r484070034" expanded>

This line is 122 characters long, should this be split into two lines instead?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/71#discussion_r484070225" expanded>

Again, should this be a static constant instead to help tidy the code up?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/71#discussion_r484070298" expanded>

I like the use of UTF-8 encoding here since it addresses an obvious issue in the output files
</panel>

</panel>

<panel type="info" header="### 44. HUBE..AWAN `@adhy-p` (10 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/85#discussion_r481613164" expanded>

The indentation seems a bit different from the Duke.java file. Did you use 8 spaces instead of 4 for this file?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/85#discussion_r481617130" expanded>

I like how you separated the cases between one task and multiple tasks
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/85#discussion_r481622036" expanded>

Should this be extracted out? I notice the same issues below.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/85#discussion_r481628032" expanded>

Can this line (120) be replaced with addTask method from line 43?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/64#discussion_r484067503" expanded>

I think you can consider splitting the string, e.g. TASKNAME -> TASK_NAME to improve readability.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/64#discussion_r484067688" expanded>

This return statement can be removed.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/64#discussion_r484068064" expanded>

Are these strings going to be modified during runtime? If not then you can consider changing this array of String to a constant.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/64#discussion_r484068256" expanded>

Shouldn't this part be extracted to a method under Task class?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/64#discussion_r484068601" expanded>

I think you can consider using switch() instead of multiple if statement to improve readability.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/64#discussion_r484069254" expanded>

a small typo here
</panel>

</panel>

<panel type="info" header="### 45. CHUA..ANDA `@amanda-chua` (10 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/145#discussion_r481706165" expanded>

Can add functions to do printing to make the main shorter.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/145#discussion_r484080325" expanded>

Can remove redundant code here.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/145#discussion_r484080598" expanded>

Maybe can name as markDone instead?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/107#discussion_r481671442" expanded>

Looks good! 
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/107#discussion_r481675209" expanded>

Maybe "at" instead of "At"
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/107#discussion_r484033914" expanded>

Maybe instead of "Message" can use "Description".
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/107#discussion_r484033965" expanded>

Same for this.  Maybe instead of "Message" can use "Description".
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/107#discussion_r484034189" expanded>

Maybe instead of "temp" can use other words?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/30#discussion_r481684106" expanded>

Good job on the refactoring!
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/30#discussion_r481685344" expanded>

Instead of state maybe can use "command"?
</panel>

</panel>

<panel type="info" header="### 46. YE Y..TONG `@yeyutong811` (10 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/217#discussion_r483424991" expanded>

Seems to have an extra line here?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/95#discussion_r483418681" expanded>

Would be good to include a space after the "for"
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/95#discussion_r483419124" expanded>

A space after "if"
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/95#discussion_r483419338" expanded>

space after "if"
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/95#discussion_r483419498" expanded>

space after "else if"
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/95#discussion_r483419604" expanded>

space after "else if"
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/95#discussion_r483419839" expanded>

Space after "else if"
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/95#discussion_r483419950" expanded>

Space after "else if"
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/95#discussion_r483420336" expanded>

Space after "if"
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/95#discussion_r483421520" expanded>

Would be good to include a space after "for". 
</panel>

</panel>

<panel type="info" header="### 47. CHON.. LIN `@czlin98` (10 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/98#discussion_r481667222" expanded>

I like how you declare your messages as constants with appropriate naming practices.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/98#discussion_r481677704" expanded>

I like your naming of the various methods
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/98#discussion_r481679236" expanded>

I like your indentation on the case statements
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/98#discussion_r481680179" expanded>

I like your usage of parenthesis
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/98#discussion_r481681948" expanded>

Should you declare these strings as constants?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/98#discussion_r481682706" expanded>

Should these be extracted as a separate method to initialize the variables?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/98#discussion_r481683182" expanded>

I like your use of SLAP
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/98#discussion_r481684256" expanded>

I like that you named the icons
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/98#discussion_r481686705" expanded>

Since you declared the icon as a constant already in the other class, should the icon here not be used as a constant a well?
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/98#discussion_r481688472" expanded>

Can the separation of the description and the date be done together in a different method?
</panel>

</panel>

<panel type="info" header="### 48. NGUY..KHOA `@tienkhoa16` (10 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/197#discussion_r483369401" expanded>

Should this number 4 be refactored to a constant to avoid magic number?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/197#discussion_r483370274" expanded>

Perhaps this part can be refactored to enhance readability.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/197#discussion_r483370775" expanded>

Perhaps this number 4 can be refactored to a constant to avoid magic number.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/197#discussion_r484036453" expanded>

I noticed the same 4 space strings are used to indent your output in the terminal in several other places too. Perhaps you can consider introducing a constant to enhance readability and ease future code maintenance.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/197#discussion_r484036595" expanded>

I like how you created another `getTypeIcon()` method.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/114#discussion_r483368193" expanded>

Should this else if statement be on the same line with the brace above to follow coding standard?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/114#discussion_r483368733" expanded>

Perhaps a space between switch and (command) here?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/114#discussion_r484033395" expanded>

Should the opening brace after case LIST_COMMAND: and the closing brace after that be removed to follow coding standards? 
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/114#discussion_r484033614" expanded>

Perhaps the opening and closing braces of the default clause should be removed also to follow coding standards.
</panel>

<panel  header="**10 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/114#discussion_r484034050" expanded>

Should the comment `//return tick or X symbols` be moved to a new line before return (isDone ? "\u2713" : "\u2718"); and changed to `// Return ...` to follow [this convention](https://se-education.org/guides/conventions/java/basic.html#comments)?
</panel>

</panel>

<panel type="info" header="### 49. ZHAN..MING `@snowbanana12345` (9 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/157#discussion_r482735281" expanded>

function name greeting should be imperative such as "greet" instead of "greeting"
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/157#discussion_r482735711" expanded>

instead of naming it list, name it "taskList" so that when you create multiple lists, it is clear what each list is for. 
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/157#discussion_r482736183" expanded>

instead of line, i suggest "userInput" to let people understand that the line variable is suppose to contain the user input.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/157#discussion_r482736869" expanded>

num should be more descriptive as to what number is it refering to. 
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/157#discussion_r482738735" expanded>

function name: Status is still too ambiguous. The icon is specifically refers to if  the task is done or not. 
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/131#discussion_r482741210" expanded>

These 3 lines are not on the same level of abstraction. 
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/131#discussion_r482741657" expanded>

This still involve lower level details, the only part that is being abstracted is adding the ToDo to the task list. 
Should abstract the creation of the ToDo object and the splicing up of the inputCommand.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/131#discussion_r482741936" expanded>

Same comments. The function addTask has not adequately abstracted away the details of the whole process.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/131#discussion_r482744448" expanded>

This function does 2 things. Mark task as done, and print out a bunch of messages. It improves readibility if you could
abstract these 2 functions. 
</panel>

</panel>

<panel type="info" header="### 50. GUO ..O AI `@GuoAi` (9 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/220#discussion_r482742772" expanded>

I like how you defined a constant variable instead of using magic literals.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/220#discussion_r482745155" expanded>

I like how you followed "SLAP" (single level of abstraction per function) in your main function. All the methods in your main function have the same level of abstraction.


</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/220#discussion_r482746698" expanded>

I like how you used switch here and that you had "break" after each case statement.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/220#discussion_r482747290" expanded>

I like how you made your method private to prevent other classes from calling it.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/220#discussion_r482748859" expanded>

Should variables be named using camelCase?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/89#discussion_r482737181" expanded>

Should the word "else" be put at the same line as the "}" for if-part?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/89#discussion_r482738539" expanded>

I like how you commented for the method.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/89#discussion_r482740998" expanded>

I like how you separated one long sentence into two lines. 
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/89#discussion_r482743649" expanded>

I like how you listed the classes imported explicitly, instead of using "import java.util.*"
</panel>

</panel>

<panel type="info" header="### 51. DUAN..HANG `@Artemis-Hunt` (9 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/150#discussion_r482820138" expanded>

Consider having a space between () and {
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/150#discussion_r484079997" expanded>

Good naming of boolean variables. Alternatively, consider using shouldAddTodo etc.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/150#discussion_r484080347" expanded>

Good use of indentation for long line
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/150#discussion_r484080535" expanded>

Consider renaming to goodbyeMessage, as goodbyeWords may sound like it's referring to an array of words
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/101#discussion_r482825584" expanded>

Consider removing the Messages. prefix, as it is not needed for a method in the same class
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/101#discussion_r484081402" expanded>

Consider wrapping the whole if-else block in a try...catch and then use case/if-else to handle the various exceptions. This reduces repetitive try..catch blocks for the same error.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/101#discussion_r484081623" expanded>

Consider creating String lowerCaseInput = input.toLowerCase() to reduce toLowerCase() method calls
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/101#discussion_r484081752" expanded>

Consider renaming to markAsDone
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/101#discussion_r484082054" expanded>

Consider renaming to getTaskArray or getTaskList, to make it clear that the return of type ArrayList
</panel>

</panel>

<panel type="info" header="### 52. ADI ..NATA `@adinata15` (9 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/187#discussion_r482720470" expanded>

Good use of comments to explain what the program is achieving!
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/187#discussion_r482720760" expanded>

Second line of wrapped line can be indented 8 spaces in compared to the first line
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/187#discussion_r482803087" expanded>

The second line of a wrapped line should be indented by 8 spaces
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/187#discussion_r482803824" expanded>

Good use concept of abstraction!
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/48#discussion_r482716875" expanded>

For wrapped lines, it is recommended to have 8 indented spaces for the second line onwards
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/48#discussion_r482717107" expanded>

Can make the bool variable more like adjective words (eg: isEndConvo)
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/48#discussion_r482719045" expanded>

Can add comments to explain what each function is doing 
Eg: to set the meeting time of the Events
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/48#discussion_r482719389" expanded>

Have the second wrapped line being indented in by 8 spaces
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/48#discussion_r482719676" expanded>

Can further reformat this
Eg: put this in another method
</panel>

</panel>

<panel type="info" header="### 53. WANG..YING `@WYing333` (9 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/221#discussion_r482832007" expanded>

This statement is quite long, maybe could use some refactors to make it shorter.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/221#discussion_r482832984" expanded>

Maybe this could be refactored with some other print statements to a function so that do not need to write this long statement everytime.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/221#discussion_r482834119" expanded>

I think these methods fullfill the requirement quite well.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/202#discussion_r482822095" expanded>

I like this switch statement since it makes the code clean and short.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/202#discussion_r482828610" expanded>

I think your this class has fullfilled the requirement quite well.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/202#discussion_r482828689" expanded>

Maybe this could be declared as constant or maybe could be refactored with some other print statements to a method.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/101#discussion_r482819938" expanded>

Maybe toString() is a more suitable method than print().
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/101#discussion_r482819990" expanded>

Maybe these addSomething can be refacored to make these shorter. But the naming style is easily understood by others.
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/101#discussion_r482820093" expanded>

I like these refactorings which make the code quite clean.
</panel>

</panel>

<panel type="info" header="### 54. THEO..INTO `@theopin` (9 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/207#discussion_r484042100" expanded>

Try splitting your main() method into more methods to improve readability - makes the code look less chunky
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/207#discussion_r484042239" expanded>

Try using more explicit variable names so that readers can identify them in the code better
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/195#discussion_r484039930" expanded>

Perhaps you could refactor the main method into a few more smaller methods to make it less chunky
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/195#discussion_r484040005" expanded>

Try using your printLine method here instead
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/195#discussion_r484041079" expanded>

Try to use more explicit variable names to improve readability
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/107#discussion_r484041379" expanded>

Try splitting the horizontal line as a method to improve readability
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/107#discussion_r484041647" expanded>

Maybe can use other words than temp to name variables
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/6#discussion_r481616140" expanded>

Perhaps you could split the main() method into more methods to increase readibility
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/6#discussion_r481618802" expanded>

Maybe you could use a more specific name than line 
</panel>

</panel>

<panel type="info" header="### 55. KHEN..IANG `@Khenus` (9 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/173#discussion_r483385313" expanded>

It would be better if there was spaces between i = 0 and i < taskcounter
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/96#discussion_r483386334" expanded>

Adding some empty lines here allows for better readability
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/96#discussion_r483386556" expanded>

You may want to use String.format to allow for better formatting of output
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/96#discussion_r483386852" expanded>

Comments should be in the same indentation as the line below
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/43#discussion_r483382801" expanded>

I think it would be better if there is no empty new line here
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/43#discussion_r483383644" expanded>

I think it will be better if there was no empty new line here
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/43#discussion_r484050052" expanded>

There is another empty line that can be removed here
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/43#discussion_r484050287" expanded>

Might want to consider printing the stack trace to handle this exception
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/43#discussion_r484050320" expanded>

Name of error can be slightly more descriptive
</panel>

</panel>

<panel type="info" header="### 56. TOH ..NDON `@brandontoh` (9 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/138#discussion_r481612786" expanded>

I think you could initialize as "ArrayList\<Task\> taskArraylist = new ArrayList\<Task\>();" to be more clear.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/138#discussion_r481616028" expanded>

I feel that this part could be broken into different function/class for better abstraction
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/138#discussion_r481620295" expanded>

Perhaps you could use different name to better differentiate command and commandSubject
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/138#discussion_r481624026" expanded>

Maybe replace "line" with something like "userInput" ?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/115#discussion_r484052219" expanded>

Instead of multiple else if, you can consider using switch case to replace it
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/115#discussion_r484052513" expanded>

I realised you have declared "int divider = line.indexOf(" ")" multiple times in different else if blocks. Perhaps you can declared only once at the top 
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/115#discussion_r484052742" expanded>

I think this if else block is doing the same thing in both cases
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/115#discussion_r484052886" expanded>

I feel that breaking some parts into smaller functions will improve readability
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/115#discussion_r484053010" expanded>

you might want to use taskList instead of list when there are more lists in the future
</panel>

</panel>

<panel type="info" header="### 57. VO Q..HUNG `@hungvo0603` (9 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/111#discussion_r481641726" expanded>

I think you should define constants like "list" or "done" in an enumeration.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/111#discussion_r481642231" expanded>

I think you should define constants like "list" or "done" or "bye" in an enumeration
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/111#discussion_r484053453" expanded>

Should the variables be named something like "deadlineDescription" and "deadlineTime" instead of "what" and "when"? The naming is quite hard to understand. Thank you.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/111#discussion_r484053709" expanded>

Should this be named "taskList" instead just "list"? "taskList" seems to be in sync with your counter "taskCount" and so on.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/111#discussion_r484054182" expanded>

Should the variables be more descriptive by being named something like "eventDescription" and "eventTime" instead of "what" and "when"? 
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/111#discussion_r484054359" expanded>

Should the variables be named "taskDescription" and "taskTime" rather than "what" and "when"?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/27#discussion_r481614779" expanded>

Should command words like "bye", "list", "done" be defined in an enumeration?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/27#discussion_r481618758" expanded>

Should command words like "todo", "deadline", "event" be defined in an enumeration?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/27#discussion_r481621827" expanded>

Should this variable mention something about time? eventAt may have two meanings 1) location of the event 2) time of the event.
</panel>

</panel>

<panel type="info" header="### 58. NUR ..SANI `@amalinasani` (9 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/189#discussion_r482673923" expanded>

Perhaps these 4 lines can be combined for conciseness?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/189#discussion_r482674378" expanded>

if-else statements may be changed to switch statements
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/189#discussion_r482675065" expanded>

Maybe at variable can be more descriptive? e.g.  eventDate, atDate
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/189#discussion_r482675269" expanded>

"[" + "D" + "]" can be combined to be "[D]"
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/189#discussion_r482675955" expanded>

Any reason why you created a new Task instance instead of changing the isDone attribute to true? 
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/189#discussion_r482676219" expanded>

"["+"T"+"]" can be combined to be "[T]"
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/189#discussion_r482676448" expanded>

"[" + "D" + "]" can be combined to be "[D]"
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/189#discussion_r482676714" expanded>

Should this be [E] for event instead of [D]?
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/9#discussion_r482671783" expanded>

Perhaps horizontalLine() method can be named such that it is a verb? (e.g. printHorizontalLine())
</panel>

</panel>

<panel type="info" header="### 59. LIM ..G LE `@limgl1998` (9 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/210#discussion_r484074839" expanded>

Hi, your code looks neat and easy to read!
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/210#discussion_r484075838" expanded>

This number "4" is a magic number and should be converted into a constant.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/210#discussion_r484075950" expanded>

The same goes for the magic numbers following below.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/210#discussion_r484076223" expanded>

There's quite a few occurrence of this line of code. Perhaps it could be refactored out into a separate method.  
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/192#discussion_r483388777" expanded>

Hi, your main code looks really neat and easy to read
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/192#discussion_r483389274" expanded>

You might want to shift some of the message codes into another class called messages so that there would not be too many function in a single class. I think this would help greatly with code readability
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/167#discussion_r483383047" expanded>

Hi, your code looks good and easy to read
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/167#discussion_r483384360" expanded>

I think this line should be should be wrapped into 2 different parts instead of being in one line
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/167#discussion_r483387251" expanded>

I dont thinks the use of "this" for this.isDone is necessary and can be replaced with just isDone = false as isDone is not shadowed by anything
</panel>

</panel>

<panel type="info" header="### 60. KWA ..MOND `@DesmondKJL` (9 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/134#discussion_r483383678" expanded>

I like how you created constants for these Strings. The naming convention for these constant variables are also correct and consistent. Good job!
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/134#discussion_r484074061" expanded>

I like how you created constants for these Strings. The naming convention for these constant variables are also correct and consistent. Good job!
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/134#discussion_r484074197" expanded>

Perhaps for this magic number change it to a constant that you can edit easily
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/134#discussion_r484074265" expanded>

The spacing of { brackets are inconsistent here.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/129#discussion_r483391885" expanded>

Im not too sure what the 0 and 1 is referring to in argArr array. Perhaps refactoring away this magic number might improve code readability. 
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/129#discussion_r483392135" expanded>

Great use of comments!
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/129#discussion_r484073718" expanded>

Good job importing only what is needed
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/129#discussion_r484073886" expanded>

Some magic numbers here. Not sure if its better for you to change it
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/129#discussion_r484073923" expanded>

Great use of comments
</panel>

</panel>

<panel type="info" header="### 61. YEE ..NSON `@Johnson-Yee` (9 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/90#discussion_r483416071" expanded>

The while loop could be too extensive and hard to read. Do consider changing the lines of code into methods such as commandDeadline. And on top of that, the while loop could be refactored into another method eg executeCommands. :D
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/90#discussion_r483418544" expanded>

Neat form of if-else statements! Good Job!
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/90#discussion_r483423615" expanded>

Just a small change here: Boolean done should be named isDone
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/90#discussion_r483424799" expanded>

Good job on the explicit importing of the specific classes.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/82#discussion_r484078146" expanded>

Just a small indentation error here. There is no indentation for case clauses. https://se-education.org/guides/conventions/java/basic.html :D
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/82#discussion_r484079179" expanded>

Could consider changing the function name to printWelcomeMessage()
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/82#discussion_r484079676" expanded>

Could define the magic number here :D
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/82#discussion_r484079860" expanded>

Could remove some uneccessary blank lines 
</panel>

<panel  header="**9 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/82#discussion_r484080058" expanded>

Accurate use of PascalCase! :)
</panel>

</panel>

<panel type="info" header="### 62. ANG ..YANG `@acyang97` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/216#discussion_r482716552" expanded>

similar for all the variables, eg NumberOfTexts should be numberOfTexts
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/216#discussion_r482716874" expanded>

Can consider to delete this extra unnecessary blank line so that code is neater and of better quality.
Similarly for the rest of the code in the other classes.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/216#discussion_r482717170" expanded>

Consider spelling out arrOfStr fully as it may vague to arrayOfString to make code more readable.
Similarly for the other variables in the other classes, would be good if you can spell them out fully.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/216#discussion_r482717906" expanded>

I think there is a need to put a white space between "do" and "{" to follow the coding standards. 
Similarly for the "if" and "while".
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/216#discussion_r482718524" expanded>

I think this condition might be too long and may be hard to read.
I think it is possible to put it at the else part of a if-else clause so that you don't need to write this long condition out.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/72#discussion_r482714364" expanded>

May be better to indicate what does i stands for.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/72#discussion_r482714998" expanded>

May be better to spell out number, similarly for the other variables that has "num"
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/72#discussion_r482715292" expanded>

Consider putting a white space before and after the "+" for better readability, similarly for the rest of the code
</panel>

</panel>

<panel type="info" header="### 63. YEAP.. LIK `@yeapcl` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/211#discussion_r482714912" expanded>

Coding standard:
The if-else statements are adhering to the recommended coding standard however I feel that there might be too many nested if-else statements, perhaps a switch-case statement would aid user readability and easier debugging? The incrementation of taskCount in each if-else next perhaps can be refactored out to avoid duplication of code.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/211#discussion_r482715274" expanded>

Great use of class inheritance. Keep up the good work!
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/211#discussion_r482718183" expanded>

Coding standard:
5 is indeed a magic number here. Perhaps you could elaborate more about the number with a comment? Otherwise, perhaps use a constant with a sensible name like STRING_POSITION so that reader can follow your train of thought.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/88#discussion_r482812635" expanded>

Coding quality: I feel that there might be too many nested if-else statements in this part. Perhaps it'd be better to avoid arrowhead style and substitute it with switch-case statements which would improve code readability and understandability.

</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/88#discussion_r482815846" expanded>

Code quality: the operation `countThings++` is repeated, perhaps it can be further refactored to minimise code duplication.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/73#discussion_r482807180" expanded>

Good job on following coding standards where an explicit "//fallthrough" comment is provided in the case `BYE` when there is no `break`.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/37#discussion_r482822194" expanded>

Good job on structuring if-else statement this way! Very easy to follow and understand.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/37#discussion_r482823597" expanded>

I like the happy path structuring here. Very easy to follow and allows unexpected condition to be easily spotted. Good job!
</panel>

</panel>

<panel type="info" header="### 64. HENG..YUEN `@HengFuYuen` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/201#discussion_r482742322" expanded>

Perhaps you can consider moving line 30 up to line 29.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/201#discussion_r482743034" expanded>

Perhaps you can consider leaving a white space after ) and before {. Same for the other methods in this file.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/201#discussion_r482744151" expanded>

Hi! Perhaps you can consider giving this a more specific name in plural form.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/201#discussion_r482756333" expanded>

Maybe you can consider breaking this segment of code into smaller methods for better readability.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/201#discussion_r482757114" expanded>

Maybe you can consider putting these into methods for better readability.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/123#discussion_r482747065" expanded>

Hi! As this is a method, perhaps you can consider adding a verb like show or print to the method name. You can also consider this for your other methods.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/123#discussion_r482750520" expanded>

Perhaps you can consider leaving a whitespace between ) and { to make your code more consistent and you can also consider this suggestion for other methods as well.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/123#discussion_r482754155" expanded>

Hi! Maybe you can consider removing these additional blank lines.  
</panel>

</panel>

<panel type="info" header="### 65. R RA..MANA `@R-Ramana` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/181#discussion_r482719679" expanded>

It would be better to state what exactly you are importing instead of .* for example import java.util.Scanner so we know what exactly it is that you imported and will be using
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/181#discussion_r482720209" expanded>

I think this could perhaps be declared at the very top.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/181#discussion_r482720864" expanded>

I think you might have forgotten a whitespace next to the bracket and break keyword;
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/181#discussion_r482720993" expanded>

Likewise as above, the whitespace is missing and there are a few such cases below as well
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/181#discussion_r482721673" expanded>

Seems like in some cases you leave a line between methods and some others you don't. Perhaps it may be better if it were more consistent
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/143#discussion_r482715977" expanded>

I think perhaps currentTime or something to that effect might be better in terms of clarifying what the current variable refers to. 
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/143#discussion_r482716688" expanded>

Seems like your comments for the above methods were all written in the line above the method. Perhaps to be consistent, you could also have this comment in the line just above.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/143#discussion_r482717376" expanded>

I see the index was declared here, but only used in the else statement. Would it be better if we declared it over there instead?
</panel>

</panel>

<panel type="info" header="### 66. LIEW..SIEW `@LiewWS` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/126#discussion_r482748773" expanded>

Correct naming convention used for constants but perhaps the final keyword should be used for these constants?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/126#discussion_r484079080" expanded>

I agree. It would also help to make the code for this method shorter and easier to read.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/126#discussion_r484080617" expanded>

Should a getTotalNumOfTasks() method be used here instead of directly accessing totalNumOfTasks?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/126#discussion_r484082248" expanded>

Good use of named constants to avoid magic numbers and improving readability.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/47#discussion_r482743563" expanded>

The code is well written and although variables and method names are clear, maybe adding comments could make the code easier to understand.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/47#discussion_r484076844" expanded>

Good to see that the correct naming format is being used for constants.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/47#discussion_r484077175" expanded>

Nice alignment of the case labels to the switch statement according to the standard.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/47#discussion_r484077522" expanded>

I like how you place the array specifier immediately after Task to indicate that the type of the variable is an array of Task type elements.
</panel>

</panel>

<panel type="info" header="### 67. WANG..NNAN `@AnnanWangDaniel` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/211#discussion_r482823754" expanded>

Maybe can use switch to replace the else-if set.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/206#discussion_r482820472" expanded>

better to use scanner instead of  '*'.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/99#discussion_r484075415" expanded>

Maybe switch-case can be used instead of the if-else statement to make the code reads easier.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/99#discussion_r484075733" expanded>

May consider write a method to print messages in each case so the main function body can be shortened and the logic can be easier to understand.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/99#discussion_r484076214" expanded>

May consider using "dueTime" instead of "by" to make it easier to understand.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/84#discussion_r484073777" expanded>

Maybe use "printLine" instead of "printLines" to make it more precise. 
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/84#discussion_r484074128" expanded>

Can add "@Override" here to point out the method override. 
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/84#discussion_r484074658" expanded>

May use addTodo instead of addToDo.
</panel>

</panel>

<panel type="info" header="### 68. KER ..TIAN `@kerct` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/226#discussion_r483378787" expanded>

I like how you made use of the parent's toString()
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/226#discussion_r483379087" expanded>

Should this be named as HORIZONTAL_ROW? HR seems a bit vague and might be mistaken for e.g. hour. 
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/226#discussion_r483380182" expanded>

Should these variables be private since Duke has no subclasses? 
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/226#discussion_r483382728" expanded>

I like how you explained the function and its parameters :)
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/226#discussion_r483383380" expanded>

I like that you explained the status icons! 👍 
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/26#discussion_r483384378" expanded>

I like how you handled the case where the list is empty! :) 
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/26#discussion_r483384751" expanded>

I like how you are very detailed in validating the inputs! 👍 
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/26#discussion_r483385901" expanded>

I don't quite understand the purposes of these variables. May I know what are they used for? Also, I feel that the name is a bit lengthy, and the grammar is a bit off; for example, it should be REQUIRED_NUMBER_OF_ARGUMENT**S**_FOR_TODO. 
</panel>

</panel>

<panel type="info" header="### 69. ZHU ..ZEYU `@Zhu-Ze-Yu` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/93#discussion_r483364701" expanded>

I like these public static final Strings!
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/93#discussion_r483366644" expanded>

I like the way you refactor the things in the while loop, which makes it clear for me to understand
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/93#discussion_r483368970" expanded>

Should it be Deadline extends Task? or is it ok to just write Deadline.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/93#discussion_r484077029" expanded>

These methods are very useful to check some exceptions
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/92#discussion_r483374672" expanded>

I think you can use uppercase for the case statements
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/92#discussion_r483374912" expanded>

Overall the code is very clear, readable.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/92#discussion_r484077458" expanded>

Maybe you can use some methods to print the horizontal lines and other messages.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/92#discussion_r484077573" expanded>

Good use of trim() is good, I like it.
</panel>

</panel>

<panel type="info" header="### 70. LU Z..ZIYI `@luziyi9898` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/172#discussion_r484035554" expanded>

Coding standard violation: line length exceeds 120 chars. Do a line wrap with 8 space indentation
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/172#discussion_r484035879" expanded>

Coding standard violation: names representing methods must be verbs and written in camelCase.
Can consider a more reasonable name, such as printBetweenLines, to better explain what the method does
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/172#discussion_r484036065" expanded>

Follow the standard way to add comments. For example:
while (true) {
    // Do something
    something();
}

</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/73#discussion_r484036983" expanded>

Avoid using magic numbers. Name the constant something like MAX_TASKS.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/73#discussion_r484037390" expanded>

Methods should be verbs.Can consider a more reasonable name, such as printBetweenLines, to better explain what the method does.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/73#discussion_r484037556" expanded>

Good usage of SLAP that makes the code looks neat and readable. Great job!
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/50#discussion_r484020418" expanded>

Very helpful comments that explained the code in details to anyone who reads it. I really like that, well done!
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/50#discussion_r484021902" expanded>

Great job making sure that all possible scenarios are dealt with. I'm not sure if I missed it, but perhaps you can consider the case of trying to do a task that is already done? It's not exactly an error but it would be great if your code recognises that and acknowledges it too.
</panel>

</panel>

<panel type="info" header="### 71. HO M.. JUN `@homingjun` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/199#discussion_r483363175" expanded>

Code is very organised and easy to understand
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/199#discussion_r483363787" expanded>

The else if and else statement format are not abiding the java coding standards. There are also several unnecessary empty lines in the while loop, consider removing them.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/199#discussion_r483364151" expanded>

Unnecessary empty line at line 24
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/199#discussion_r483364364" expanded>

Code is very organised and easy to understand
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/199#discussion_r483364406" expanded>

Code is very organised and easy to understand
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/90#discussion_r483371049" expanded>

Code naming is good and in accordance with java coding standards.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/90#discussion_r483371652" expanded>

The while loop is a little long and affects the ease of readability. Consider shortening the loop or separate some code into functions/classes.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/90#discussion_r484063362" expanded>

Try not to have nested loops (AKA arrow head) in your code. Try to refactor some parts of this loop to prevent this from happening.
</panel>

</panel>

<panel type="info" header="### 72. KENN.. EER `@KennethEer` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/183#discussion_r483384107" expanded>

I think these constant names should be in uppercase, what do you think? 
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/183#discussion_r483388583" expanded>

I think it will be better to include curly brackets and put the statement in a new line even though there is only one statement, what do you think? 
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/183#discussion_r484069834" expanded>

You might want to include a space after each punctuation in the for loop so for example, for(initialization; condition; update), there is a space between ; and condition as well as ; and update
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/183#discussion_r484070219" expanded>

I like how you combine the greeting messages into one function printWelcomeMessage(). Keep it up.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/40#discussion_r483403523" expanded>

I think these print statements can be refactored into one function on its own, similarly for lines 70-72 etc, following SLAP (Single Level of Abstraction Principle), what do you think?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/40#discussion_r484072917" expanded>

I think these statements can be refactored into another function such as insertDeadline, what do you think?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/40#discussion_r484073436" expanded>

I think these statements can be refactored into a function such as insertEvent, same for the statements in Todo tasks in line 155 to 159. 
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/40#discussion_r484073887" expanded>

I think that the naming for String s can be changed to a more descriptive name such as taskToAdd, what do you think?
</panel>

</panel>

<panel type="info" header="### 73. SEAN..IANG `@Aseanseen` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/139#discussion_r482652186" expanded>

Maybe this can be in caps since it is a constant
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/139#discussion_r482661506" expanded>

Avoid unnecessary use of this with fields.
Refer to: https://se-education.org/guides/conventions/java/index.html#variables
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/139#discussion_r482669230" expanded>

I like this too!
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/80#discussion_r482646237" expanded>

else not on the same line as the brace, violates the coding standard
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/80#discussion_r482647274" expanded>

Empty constructor
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/80#discussion_r482663577" expanded>

Avoid unnecessary use of this with fields. There are a few occurrences.
Refer to: https://se-education.org/guides/conventions/java/index.html#variables
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/80#discussion_r482667560" expanded>

Try to avoid deep nesting
https://nus-cs2113-ay2021s1.github.io/website/schedule/week4/topics.html#w4-6-code-quality-readability
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/80#discussion_r482669886" expanded>

Maybe you can try to shorten this method such as through refactoring
</panel>

</panel>

<panel type="info" header="### 74. DANI..-JIE `@daniellimzj` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/140#discussion_r484032828" expanded>

Perhaps consider extracting this out into a method.


</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/140#discussion_r484032855" expanded>

The name for this method could be renamed to printList to help ensure consistency with printTaskAssignment


</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/140#discussion_r484032997" expanded>

It might be worth extracting this out into another method too.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/140#discussion_r484033216" expanded>

Is it possible to relate these magic numbers to "deadline" and "\\by" somehow? Just to make it clear where they are from
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/140#discussion_r484033285" expanded>

Could these magic numbers also be changed to relate to the strings as well?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/111#discussion_r484032004" expanded>

Could this be renamed as tasksList? It might make it clearer it is to store multiple tasks
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/111#discussion_r484032022" expanded>

Could this be renamed to printWelcomeMessage? Just to make it extra clear it is to print a message.


</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/111#discussion_r484032219" expanded>

Consider just using an else statement if there are no more conditions to check
</panel>

</panel>

<panel type="info" header="### 75. TOLE..ALES `@abnermtj` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/98#discussion_r482144322" expanded>

I like the use of @params and commenting every single function
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/98#discussion_r482163658" expanded>

Perhaps some of the comments such as these could be removed, they are quite self documenting.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/98#discussion_r482167839" expanded>

Nice clear separation between variables and constants
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/11#discussion_r481613693" expanded>

maybe consistently add or remove this blank line, abit inconsistent in other files
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/11#discussion_r481614735" expanded>

woud be nice for consistent spacing around the equal signs
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/11#discussion_r481617012" expanded>

this function is a bit long, perhaps extracts some lines for each case as a separate function
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/11#discussion_r481618193" expanded>

Maybe rename args in the function argument to this function as a "description" instead of making a new variable to copy it
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/11#discussion_r481624039" expanded>

Maybe change list name to taskList
</panel>

</panel>

<panel type="info" header="### 76. LEE ..YUAN `@lhydl` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/217#discussion_r483383901" expanded>

Maybe you can refactor this out of your main as a printWelcomeScreen method?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/134#discussion_r484034491" expanded>

Your code is generally well written and very readable. Keep it up!
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/134#discussion_r484035394" expanded>

I like that you used constants for the Strings which will make your code more readable.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/134#discussion_r484035869" expanded>

I think your if-else statement here should follow the required Java coding standard. 
https://se-education.org/guides/conventions/java/basic.html
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/134#discussion_r484036459" expanded>

Your if-else statements here have the required coding standard as compared to the previous ones. Good job!
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/56#discussion_r483383880" expanded>

Your overall code is very neat and readable. Good job!
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/56#discussion_r484037037" expanded>

Generally, your code follows the coding standards pretty well. Keep it up!
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/56#discussion_r484037118" expanded>

I like that you added comments before every method. 
</panel>

</panel>

<panel type="info" header="### 77. TEY ..RONG `@xingrong123` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/146#discussion_r481633496" expanded>

Should there be a spacing between the normal bracket and the curly bracket?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/146#discussion_r481634477" expanded>

Should the else if statement be in the same line as the closing curly bracket?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/146#discussion_r484035062" expanded>

This line may not be too easy to read. Perhaps split them into multiple lines?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/146#discussion_r484035480" expanded>

Perhaps extracting this part out would make the code easier to read?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/146#discussion_r484035673" expanded>

Should the name of the class be singular instead?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/97#discussion_r481639571" expanded>

Should there be 1 spacing instead of 3 between the curly bracket and "else"?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/97#discussion_r481643433" expanded>

I like how you make this part of the code readable by refactoring.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/97#discussion_r481645267" expanded>

Should the specific class that that is used be imported instead of all classes?
</panel>

</panel>

<panel type="info" header="### 78. SEAH..HLOE `@chloesyy` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/196#discussion_r482644935" expanded>

I think it would make the code more readable if you replace the 100 with a constant name, maybe "MAX_TASKS" to describe the number?

Also, I think Tasks is a variable - should it be named "tasks" instead? :)
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/196#discussion_r482646240" expanded>

Hi! I think you can try extracting the code fragments into different methods to increase readability? :)
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/196#discussion_r484038337" expanded>

Hi! In this case since the indentations are constants, would it be better to name them as finals and in capital letters instead? e.g. "INDENTATION" 

((Hi I'm back to do more reviews))
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/196#discussion_r484038445" expanded>

Same thing here - since the wrong warning is a constant string, should it be named WRONG_WARNING instead?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/39#discussion_r482642047" expanded>

Instead of just welcomeMessage(), I think you can try naming it printWelcomeMessage() so that the methods are verbs and not nouns? :) 
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/39#discussion_r482642719" expanded>

I think it's the same for the other methods below - maybe you can consider naming them as getUserCommand() or something that better describes what the method does? 
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/39#discussion_r484036601" expanded>

Hello! I see that you've made the changes from my previous review, and it looks much better now! 👍 
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/39#discussion_r484037156" expanded>

I like that the constants are categorised accordingly to their usage like "COMMAND_SOMETHING". 👍 
</panel>

</panel>

<panel type="info" header="### 79. ZHAN..NJIA `@jessicazhang617` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/118#discussion_r483371568" expanded>

Perhaps you can write more comments to explain how your methods work?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/118#discussion_r483371930" expanded>

Maybe you can separate the indicators into another method and call it to retrieve it? The main is a little long.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/118#discussion_r483372717" expanded>

I like how your if-else statements here are very readable!
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/118#discussion_r483373567" expanded>

Perhaps you can write a comment on what do your constants used for?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/29#discussion_r483367998" expanded>

Perhaps you can use a verb for names representing methods?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/29#discussion_r483369082" expanded>

Should the method name be written in camelCase?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/29#discussion_r483369727" expanded>

Perhaps the indentation for wrapped lines can be adjusted to 8 spaces more than the parent line?
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/29#discussion_r483376554" expanded>

Perhaps you can adjust the indentation in the greet() method as well?
</panel>

</panel>

<panel type="info" header="### 80. FANG.. HUI `@hui444` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/41#discussion_r481733907" expanded>

Should this be printMessage?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/41#discussion_r481737611" expanded>

Maybe separate this into another file? (classes Deadline, Event, and Todo)
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/41#discussion_r481740880" expanded>

I like that you included errors
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/41#discussion_r481772129" expanded>

Maybe use camelCase for these methods? (lines 126, 144, 151, 166)
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/20#discussion_r481751249" expanded>

I like that you checked if the command is valid
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/20#discussion_r484071296" expanded>

I think maybe you can extract this part of the code and make it a function to increase readability!
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/20#discussion_r484071404" expanded>

Maybe you could refactor these functions like todo and deadline etc, and make sure that there is less duplicated code by making a function to add task or print the statements after the task is added.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/20#discussion_r484071567" expanded>

I like that you added a default output for tasks that do not fall under list, done, todo, deadline or event!
</panel>

</panel>

<panel type="info" header="### 81. ZHOU..IKAI `@shikai-zhou` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/200#discussion_r481785310" expanded>

getFirstWordOf is a better name
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/200#discussion_r481786828" expanded>

Good use of SLAP principle by separating out the functions
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/200#discussion_r484082344" expanded>

Use curly brackets for one liners as well
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/200#discussion_r484082716" expanded>

Try to make the case where everything runs well more prominent instead of the unusual case (the bye case)
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/164#discussion_r481776464" expanded>

Good use of naming and follows naming convention. It would be good to add a few comments for readability.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/164#discussion_r484083266" expanded>

Perhaps a good name for your method can be setAsDone() as stipulated in the coding standard
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/164#discussion_r484084255" expanded>

Did you check if your taskCount exceeds your task capacity? And the use ternary operator makes the logic of the code hard to read.
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/125#discussion_r481679858" expanded>

This line is repeated quite a few times. Can you try to refactor into a new function?
</panel>

</panel>

<panel type="info" header="### 82. WU H..ITAO `@Wu-Haitao` (8 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/159#discussion_r483417797" expanded>

Missing spaces here.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/159#discussion_r483419261" expanded>

Missing spaces here.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/159#discussion_r483419592" expanded>

Missing a space here.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/159#discussion_r483420086" expanded>

Better not to put your comment here.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/159#discussion_r483420592" expanded>

Cool logo.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/159#discussion_r483420934" expanded>

Instead of 100, you could define a constant like MAX_SIZE as a replacement.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/44#discussion_r483423152" expanded>

Personally I prefer to align these lines in order to show the full logo completely. And it would be better if you put spaces before and after the "+".
</panel>

<panel  header="**8 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/44#discussion_r483425822" expanded>

Missing a space here.
It seems that you missed every spaces after the first lines of the methods.
</panel>

</panel>

<panel type="info" header="### 83. NG Y..ONIO `@yh-ng` (7 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/216#discussion_r482739741" expanded>

As per coding standards, the class name and "{" should be separated by a space. Eg "...extends Task {...". This also applies to while, for loops, etc.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/216#discussion_r482741398" expanded>

consider writing variables in camelCase
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/216#discussion_r482741842" expanded>

Consider using camelCase for variable names
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/216#discussion_r482742251" expanded>

Consider using a more descriptive name for Event e
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/216#discussion_r482742588" expanded>

Consider renaming variable "arrOfStr" to be more descriptive
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/216#discussion_r482743212" expanded>

Consider using a more descriptive name instead of "t" for Todo t
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/79#discussion_r482745944" expanded>

Consider importing the needed packages individually 
</panel>

</panel>

<panel type="info" header="### 84. CHON..IANG `@Chongjx` (7 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/189#discussion_r482716785" expanded>

'line" is quite a vague name, maybe you can give a more unique or clearer name to better understand what this variable is used for in the program
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/189#discussion_r482717644" expanded>

There is quite a number of repeated lines here, maybe you can refactor into a function.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/189#discussion_r482719579" expanded>

The else if and else should be on the same as the } from the previous else
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/189#discussion_r484038402" expanded>

You should only import packages that you need and not import everything from java.util
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/130#discussion_r482721794" expanded>

You may wish to add some short comment for each if, else ifs and else so that others do not need to read what the 'else if' is suppose to check. Also, the else ifs and else should be on the same line as the } from the previous else statement.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/130#discussion_r484039181" expanded>

You can maybe define a final variable for the value 9 that you used here. Avoid using magic number.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/130#discussion_r484039238" expanded>

Likewise here, avoid magic number '6'
</panel>

</panel>

<panel type="info" header="### 85. ZHOU..ZEYU `@xX-Conan-Xx` (7 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/181#discussion_r482710483" expanded>

Imported classes should always be listed explicitly.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/181#discussion_r482712421" expanded>

you may consider delete brackets inside each case.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/181#discussion_r482712700" expanded>

better to separate them into a few subclasses.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/181#discussion_r482713502" expanded>

can change the list to tasks to make it clear
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/169#discussion_r484041470" expanded>

You may consider combining "]" and " "
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/169#discussion_r484041593" expanded>

may consider changing to switch cases
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/169#discussion_r484041798" expanded>

may consider using Task task : listTasks instead of using i
</panel>

</panel>

<panel type="info" header="### 86. NG Y..ANDY `@randynyl` (7 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/142#discussion_r484050414" expanded>

you can consider using the split() method to separate the description and by strings, with " /by " as the separator, this way it'll save a few lines and we need not count the number of characters for substrings
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/142#discussion_r484050578" expanded>

I may be wrong but this method does not seem to be used anywhere in the code! If so, it can be deleted.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/142#discussion_r484050654" expanded>

Great use of SLAP overall to make the main function extremely readable!
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/142#discussion_r484051574" expanded>

To reduce the number of branches both in the while loop and the addToList method, you can consider just modifying the addToList method to simply taking in the taskList and a Task. Above each addToList, separate methods to create each task object eg. deadline/event can be created to handle the user input. This way, the addToList method will not be handling too many different functions on its own, and we can make use of polymorphism to simplify the method.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/142#discussion_r484051941" expanded>

it may be good to not have so many chained method calls in one line as it could reduce code readability and efficiency. Perhaps an assignment could be made for userInput.trim().toLowerCase() before the loop!
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/59#discussion_r482811090" expanded>

Everything looks good with regards to coding standard :) good job!
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/59#discussion_r482820009" expanded>

Very good use of SLAP to encapsulate the code for each user command. Perhaps the while loop and user input could further be refactored into one method, but overall code quality looks good!
</panel>

</panel>

<panel type="info" header="### 87. CHON.. LIM `@ychong032` (7 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/225#discussion_r482776290" expanded>

Should this be separated into multiple import statements to show exactly which packages were imported?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/225#discussion_r482777745" expanded>

I recommend writing each statement of the method on separate lines for increased readability.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/225#discussion_r482778285" expanded>

Again, it is recommended to not write both statements in one line.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/225#discussion_r482802260" expanded>

The Duke class contains very long code. Would it be better to separate each class into different java files?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/225#discussion_r482804243" expanded>

Should these lines be extracted into a method called getTaskIcon()?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/60#discussion_r482771799" expanded>

I like the idea of storing all the print messages as constants in a separate class!
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/60#discussion_r482772810" expanded>

Should this method be renamed to be a verb? E.g. getSize().
</panel>

</panel>

<panel type="info" header="### 88. WANG..IXIN `@WangZixin67` (7 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/190#discussion_r483417694" expanded>

I think it does not have to be so many lines, one is enough 
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/190#discussion_r483419503" expanded>

I think this line can be deleted.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/180#discussion_r483421258" expanded>

This line is too long. Maybe you can do some changes on your addTask method?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/180#discussion_r483423423" expanded>

I'm not sure if "\u2713" and "\u2718" is very readable? I need to search for this meaning. Or maybe add some comments beside it
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/180#discussion_r483424104" expanded>

I think the else can be put into a new line.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/31#discussion_r484047589" expanded>

Maybe you can shorten this println by using if else I think?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/31#discussion_r484048389" expanded>

I think this else can be combine into the switch. Because the default operates the same thing as else, maybe do not need to check valid? 
</panel>

</panel>

<panel type="info" header="### 89. NG N..OLIN `@Colin386` (7 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/213#discussion_r482701296" expanded>

Looks good! I like how the functions for the main code are split into different sub functions
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/213#discussion_r482703356" expanded>

Perhaps a suggestion would be to group the addList and the displayList function into a sort of list class to improve the code quality
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/34#discussion_r482698671" expanded>

LGTM
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/34#discussion_r482699459" expanded>

May I suggest to put the line 13 and 14 into a single line or perhaps to ensure the intentation is around 4 spaces
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/34#discussion_r482699980" expanded>

Looks good! I really like the use of constants in switch statements. It makes things clear

</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/34#discussion_r482701792" expanded>

Perhaps for comments of function features, you can add a blank line to separate the function descriptions from the parameters
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/34#discussion_r482702146" expanded>

I like how you verify the task number before running
</panel>

</panel>

<panel type="info" header="### 90. DORI..FONG `@dorianfong98` (7 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/152#discussion_r481744709" expanded>

Like what Arindam mentioned, perhaps try to avoid using shortforms like "dl" to improve readability
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/152#discussion_r481746428" expanded>

same point on avoiding shortforms to improve readability, perhaps consider using a name like getDeadlineDescription() 

👍  
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/152#discussion_r481747481" expanded>

Perhaps also consider naming this printCompletedTask too :)
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/152#discussion_r481748749" expanded>

Perhaps consider adding comments before every class declaration such as its inputs, what the object does, what it inherits from, etc :)
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/58#discussion_r481731419" expanded>

I'm inclined to agree with Arindam
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/58#discussion_r481732747" expanded>

consider using camelCase for variable names like commandLength
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/58#discussion_r481737824" expanded>

For if-else class of statements, perhaps try adding { } for your code that follows :)
</panel>

</panel>

<panel type="info" header="### 91. RANI..UMAR `@1-Karthigeyan-1` (7 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/222#discussion_r482647413" expanded>

Please avoid deep nesting
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/222#discussion_r482649004" expanded>

I think it is possible to group similar code fragments together via refactoring. I have noticed a few similar areas along with the code.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/222#discussion_r482656729" expanded>

is it possible to shorten the main method?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/222#discussion_r482661406" expanded>

is it possible to avoid magic numbers in the array size?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/88#discussion_r482644123" expanded>

Is it possible to have a better naming convention?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/88#discussion_r482644870" expanded>

Is it better to define the magic strings with constants? 
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/88#discussion_r484056268" expanded>

Is it possible to have verbs in the name of the method? For example, I would think that adding the verb 'print' would make the bye method clearer 
</panel>

</panel>

<panel type="info" header="### 92. EDMU.. JIE `@EdmundEXE` (7 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/124#discussion_r481751188" expanded>

Consider the spacing between  '=' consistently
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/124#discussion_r481751264" expanded>

Consider the spacing between ','. eg ( blabla(abc, xyz) )
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/124#discussion_r484185837" expanded>

variable is in camelCase and sound 'boolean'. Good!
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/124#discussion_r484186174" expanded>

Plural form name used for a collection of objects. Nice!
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/76#discussion_r484184122" expanded>

The function here clearly shows what they are going to do. Nice!
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/76#discussion_r484184552" expanded>

I would recommend a bracket between each logic statement.
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/76#discussion_r484184956" expanded>

Deep nesting avoided by using &&. Nice!
</panel>

</panel>

<panel type="info" header="### 93. YU J..YANG `@yujinyang1998` (7 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/192#discussion_r483368528" expanded>

Great Job! Very neat code.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/179#discussion_r483971150" expanded>

Could add a comment on the rough output of the string here to increase readability.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/179#discussion_r484077932" expanded>

Naming for function is abit too long. Perhaps shorten it a little
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/179#discussion_r484081990" expanded>

Good job in extracting out the classes to make the code more readable. Keep it up!
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/154#discussion_r484082190" expanded>

Could perhaps come up with a clearer naming for this function.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/154#discussion_r484082446" expanded>

Could find a way to refactor this chunk of code under case "done"
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/154#discussion_r484082620" expanded>

Good job in coding practices. Could try to make case statements shorter and more readable by refactoring. Keep up the good work!!
</panel>

</panel>

<panel type="info" header="### 94. TENG..N EN `@tengkianen` (7 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/136#discussion_r481629523" expanded>

Good coding standards in terms of indentations
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/136#discussion_r481631775" expanded>

Good coding standards with respect to if-else statements
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/136#discussion_r484095926" expanded>

Very readable classes but can be better if class is named as ToDo than ToDos
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/136#discussion_r484096047" expanded>

Could have better naming as compared to just tmp2 and tmp
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/21#discussion_r481640499" expanded>

Excellent readability and appropriate naming for almost all variables.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/21#discussion_r481647184" expanded>

Overall good naming of all variables and methods
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/21#discussion_r481650259" expanded>

Sufficient and minimal comments overall
</panel>

</panel>

<panel type="info" header="### 95. WONG.. WEI `@keke101` (7 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/93#discussion_r483371112" expanded>

Good use of the superclass' toString 
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/93#discussion_r483371681" expanded>

Good use of the constants
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/93#discussion_r483371770" expanded>

Good refactoring
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/93#discussion_r483374989" expanded>

A better name for this would be printExit, because exit() sounds like you are terminating the program at this point right away
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/40#discussion_r483363031" expanded>

If these are supposed be be constants, the keyword "final" should be included
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/40#discussion_r483363055" expanded>

If these are supposed be be constants, the keyword "final" should be included
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/40#discussion_r483364563" expanded>

if-else should have the following form

if (condition) {
    statements;
} else if (condition) {
    statements;
} else {
   statements;
}
</panel>

</panel>

<panel type="info" header="### 96. TUTE..NDHA `@sugandha929` (7 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/113#discussion_r481733119" expanded>

It is better to specify the libraries you have used instead of using a '*'.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/113#discussion_r481734045" expanded>

Maybe specify what i is
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/113#discussion_r481735000" expanded>

again better to specify what op is
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/113#discussion_r481735393" expanded>

This class looks good
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/94#discussion_r481744453" expanded>

Your code looks good and is pretty easy to read. I like how you have used different methods and not put all of your code in the main method.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/94#discussion_r484040123" expanded>

Good usage of comments
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/94#discussion_r484040289" expanded>

the at variable name can be changed to something a little more descriptive 
</panel>

</panel>

<panel type="info" header="### 97. ENER..ILLA `@johan9se` (7 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/176#discussion_r484045194" expanded>

Could the method name be changed to doActivity() to reduce the ambiguity from using 'it' instead?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/176#discussion_r484046143" expanded>

The name listChecker is a little misleading may come across more like a method that does the action of checking rather than a variable. Perhaps you can consider something like itemStatus or activityStatus or something to that effect? The same applies for your Todo, Deadline and Event classes.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/14#discussion_r481709145" expanded>

Do add white spaces between 'if', the condition and the curly bracket; if statements should have the following form:
if (!commandArgs.isEmpty()) {
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/14#discussion_r481719666" expanded>

I like how you have this! 
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/14#discussion_r481735367" expanded>

Not a coding standard violation but... it seems to me that your printAddTodoMsg, printAddDeadlineMsg and printAddEventMsg all do the same thing, I think you can consider putting it all under one method and just changing the method parameters to accept a Task type member variable, then you can use it for all different cases and also shorten your code! :) 
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/14#discussion_r481736178" expanded>

I would suggest leaving whitespace between the method arguments and the opening curly bracket such that:
public void someMethod (String description) {
I noticed the same issue in other files as well, so do try to apply it consistently.
(This rule generally applies for other statements such as if-else, while, for, try, etc.)
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/13#discussion_r481750008" expanded>

I know the variables dlBy and eAt are intuitively for deadline and events respectively, but perhaps you can consider writing it out completely to reduce ambiguity.
</panel>

</panel>

<panel type="info" header="### 98. WANG..IHAO `@killingbear999` (7 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/159#discussion_r483417413" expanded>

Perhaps "100" should be defined as a constant, it seems like a magic number here?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/159#discussion_r483418583" expanded>

Should there be a space between "if" and "(", and "}" and "else"?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/159#discussion_r483420866" expanded>

I noticed the same issues in other several places as well (the spacing)
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/51#discussion_r483424730" expanded>

May be you can refactor this part to increase readibility and avoid complicated expressions?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/51#discussion_r483425770" expanded>

I have noticed the same issue here. May be you can include intermediate steps to avoid complicated expressions?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/51#discussion_r483426436" expanded>

May be you can input intermediate variables to increase readability?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/51#discussion_r483426702" expanded>

I have noticed similar mistakes above
</panel>

</panel>

<panel type="info" header="### 99. TAN ..UANG `@weishuangtan` (7 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/145#discussion_r481625059" expanded>

Incorrect bracket layout for if-else statements
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/145#discussion_r481626114" expanded>

Comments should have a /** opening on a separate line
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/145#discussion_r481629949" expanded>

Can consider standardising bracket formats:

eg if (....) { } vs if (...){ }


</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/145#discussion_r481630517" expanded>

Can caps LOGO because the string is constant
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/36#discussion_r481638860" expanded>

One of the coding standards is to avoid long methods, maybe you can consider refactoring the code to have a method for analysing inputs, and then from there call the respective functions to carry out the necessary actions
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/36#discussion_r481639277" expanded>

Maybe you can create a method for printing line so that the code appears neater
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/36#discussion_r481640720" expanded>

Maybe the println line can be placed at the start of the while loop instead of within each if-else statement since it will get executed no matter the case
</panel>

</panel>

<panel type="info" header="### 100. XIE ..OYUE `@xieyaoyue` (7 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/43#discussion_r483421408" expanded>

Do remember to add spacing after the class name before adding the braces.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/43#discussion_r483422204" expanded>

Please ensure consistencies of whether to leave a space after 'catch' before adding the catch conditions.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/43#discussion_r483423020" expanded>

Perhaps you can comment here on what do '\u2713' and 'u2718' mean respectively?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/43#discussion_r483423966" expanded>

Perhaps you can delete the blank line here
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/25#discussion_r483395054" expanded>

Any reason why you didn't write '\n' as the constant 'NEW_LINE'?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/25#discussion_r483396978" expanded>

Perhaps you can use a more descriptive method name? 
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/25#discussion_r483401272" expanded>

Perhaps you can fill up line 86 more before wrapping the rest of the code to the next line? Otherwise, I like how you ensure the indentation for the wrapping.
</panel>

</panel>

<panel type="info" header="### 101. CHAN..BETH `@elizabethcwt` (7 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/156#discussion_r481668851" expanded>

Hello Felix! Perhaps in lines 47 and 86, you could shorten the code line a bit by setting a variable for the conditional statement, then inputting that variable into the System.out.println(). Other than that, the code looks neat! 
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/156#discussion_r484070090" expanded>

Hi Felix :) Glad to see your reply! Hm, perhaps you could consider using the variable name 'taskTense'? Since the conditional statement here is to implement the appropriate tense for your task(s). Hope this helps!
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/132#discussion_r481674432" expanded>

Hello! Something small I've noticed is that the method Greet() begins with a capital G. Perhaps you could follow the camelCase standard and replace it with greet() instead.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/132#discussion_r481680316" expanded>

This line is repeated quite a few times in your code. Perhaps you could refactor --> extract method, so as to make your code a bit more concise! :)
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/100#discussion_r482001190" expanded>

Good use of enums!
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/100#discussion_r482001499" expanded>

Hmm, small issue, but for consistency sake and general neatness of the code, should these empty lines be removed?
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/100#discussion_r484069687" expanded>

For consistency, should there be an empty line here (since you left empty lines between the other cases)?
</panel>

</panel>

<panel type="info" header="### 102. MOOI..CENE `@chuckiex3` (7 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/219#discussion_r482699514" expanded>

I like how you made a method to check if your input is valid 👍🏼 
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/219#discussion_r482701460" expanded>

overall, good job at following coding conventions! :) 👍🏼 
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/219#discussion_r482702228" expanded>

perhaps, you could add a single-line comment here to explain what this does? :) 
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/177#discussion_r482724837" expanded>

just a suggestion, maybe you could have a method to print your divider or set it as a constant instead :D
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/177#discussion_r482731986" expanded>

perhaps, you could break up this code into a few other methods? e.g. one method to getInput, another one to printMessage, etc. this will then improve your code's readability (i see lots of deep nesting at the moment) :) 
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/177#discussion_r482733188" expanded>

I see this in all your other case statements as well, but curly braces are not required here! :) you can take a look at java's coding conventions here: https://se-education.org/guides/conventions/java/basic.html
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/177#discussion_r484035026" expanded>

perhaps you could put this in a separate method e.g. printWelcomeMessage? same for the bye message 👍🏼 :)
</panel>

</panel>

<panel type="info" header="### 103. LING..HIHO `@lingsihui` (7 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/211#discussion_r482704820" expanded>

Well done! 
No coding standard violation. 

</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/211#discussion_r482705780" expanded>

Coding quality: 
1) 5 is a magic number! Perhaps you could replace 5 with a constant DONE_LENGTH.


</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/211#discussion_r484045041" expanded>

2) More refactoring can be done! The main method is too long. Perhaps you could refactor each case. Example, markTaskAsDone for the code under the done case.  
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/211#discussion_r484045267" expanded>

Magic numbers 9 and 4! Perhaps you could make 9 and 4 a constant to DEADLINE_LENGTH and BY_LENGTH
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/109#discussion_r484043475" expanded>

I think endFlag should be a Boolean and it should be named Boolean hasEnded = false instead, to indicate that the loop has exited. 
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/109#discussion_r484043795" expanded>

There is a coding standard violation here! if - else loop should be done in this format
 if(condition) {
} else if {
}
instead of having else if in another line. :) 
</panel>

<panel  header="**7 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/109#discussion_r484044520" expanded>

I think your boolean can be name isEmpty instead of b! 
</panel>

</panel>

<panel type="info" header="### 104. BRAN..G YI `@bqxy` (6 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/81#discussion_r484060910" expanded>

Good idea to create this class; improves the code structure and helps with readability in the main class
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/81#discussion_r484061997" expanded>

Variables and classes properly described, easy to understand, good job!
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/81#discussion_r484062001" expanded>

Good idea for refactoring; helps with readability 
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/80#discussion_r484059295" expanded>

Not a violation of coding standard but there's an inconsistency between [taskNumber-1] at line 100 and 
[taskNumber - 1] at line 104
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/80#discussion_r484059427" expanded>

No violation of coding standard, good job!
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/80#discussion_r484059997" expanded>

No violation of coding standard, PascalCase for Class and camelCase for variable and methods properly followed, good job!
</panel>

</panel>

<panel type="info" header="### 105. DIXO..CHUN `@dixoncwc` (6 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/188#discussion_r482822669" expanded>

Consider doing this instead "if (stringAfterDone.isEmpty()){ return false; }"
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/188#discussion_r484045639" expanded>

Consider using a more define name for clearer understanding. 
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/188#discussion_r484046497" expanded>

There is a space between int i=0 and the semi colon ;  
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/187#discussion_r482822364" expanded>

Good use of comment to explain why array have to minus 1.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/187#discussion_r484045317" expanded>

Consider using public String getTypeOfTask(){ return typeOfTask; }
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/187#discussion_r484046277" expanded>

Good use of naming, clear to reader what this function is about
</panel>

</panel>

<panel type="info" header="### 106. NAZR.. LIM `@Nazryl` (6 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/204#discussion_r482719717" expanded>

A spacing helps to see the codes clearer. Eg. "if (txt.equals("list")) {"
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/204#discussion_r482720767" expanded>

Description should be in lower case.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/204#discussion_r482721246" expanded>

Perhaps a more descriptive name like "welcomeMessage".
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/7#discussion_r482716284" expanded>

Perhaps a more descriptive name to the variable here?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/7#discussion_r482718747" expanded>

I like the variable name used in this. Every clear and precise.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/7#discussion_r482719128" expanded>

Perhaps a more descriptive name to the variable here?
</panel>

</panel>

<panel type="info" header="### 107. KWEK.. HAN `@chuhann` (6 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/219#discussion_r484039438" expanded>

Perhaps, you could add comments for what each of the methods does so that reviewers have a brief idea of what the method does just by looking at the comments instead of looking through the codes :)
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/219#discussion_r484039736" expanded>

Would it be better if you have a fixed FINAL variable for "9", this could come in handy there are changes in the future 
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/219#discussion_r484040712" expanded>

Perhaps you can change "validDoneInput" to "isValidDoneInput" to make it sound more like booleans.  Anyway, good job :)
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/74#discussion_r482720139" expanded>

Perhaps you can change the boolean variable to hasSaidBye instead of taskManagerSaysBye
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/74#discussion_r482721098" expanded>

Perhaps you can add some comments before each of the functions for readability
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/72#discussion_r482717551" expanded>

Comments can be added to each of the functions.
e.g.
/**
Prints all tasks in inventory

@param tasks tasks in inventory added by the user
**/
</panel>

</panel>

<panel type="info" header="### 108. PRAC..ENKA `@prachi2023` (6 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/225#discussion_r482716362" expanded>

shouldn't task be capitalised since its a class name? 
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/225#discussion_r482717054" expanded>

class names should be in PascalCase
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/225#discussion_r482717411" expanded>

I like the way you named your variables
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/225#discussion_r482717692" expanded>

I like how you indented the if statements so that it is not "arrow like"
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/155#discussion_r482720395" expanded>

I feel like this could be a more descriptive name to show what it is indexing. 
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/155#discussion_r482720720" expanded>

I like the way you have named these methods, makes easy to tell what they do

</panel>

</panel>

<panel type="info" header="### 109. ALVI.. JUN `@trolommonm` (6 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/28#discussion_r482804839" expanded>

else should not be on a new line, and there should be a space before the "{".
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/28#discussion_r482805180" expanded>

else if should not be on a new line, and space before "{".
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/28#discussion_r482805517" expanded>

space before "{"
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/28#discussion_r482805883" expanded>

space before "{"
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/28#discussion_r482806185" expanded>

else if should not be on a new line
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/28#discussion_r482813735" expanded>

rather than using "index" as the variable to track the last element of the array, perhaps using "numberOfInstructions" may be more intuitive to understand.
</panel>

</panel>

<panel type="info" header="### 110. FENG..NGYU `@Louis-Feng` (6 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/162#discussion_r482708409" expanded>

You may use the partial solution of A-classes to output tick
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/162#discussion_r482708822" expanded>

You may refactor these three lines into a Bye() Method
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/162#discussion_r482709147" expanded>

You may refactor this as a method to print "______________________" or turn "___________________________" to be a constant
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/74#discussion_r484042669" expanded>

You may add a few comments for people to understand these long methods better.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/74#discussion_r484042802" expanded>

You may use a switch function when there are more and more comments
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/74#discussion_r484043425" expanded>

I think this is an idiom, do not need to change. 
</panel>

</panel>

<panel type="info" header="### 111. WANG.. QIN `@wangqinNick` (6 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/225#discussion_r482647191" expanded>

isCompleted
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/225#discussion_r482647693" expanded>

add specifier private 
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/225#discussion_r482647790" expanded>

getDate
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/225#discussion_r482648131" expanded>

no need to create another Scanner instance
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/225#discussion_r482648250" expanded>

Extract to a new function
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/179#discussion_r482646677" expanded>

avoid using "should" "must" in the code.
</panel>

</panel>

<panel type="info" header="### 112. WIRA..HMAD `@hughjazzman` (6 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/76#discussion_r481736201" expanded>

Perhaps this could be plural i.e. 'MAX_TASKS'?
'''suggestion
    private static final int MAX_TASKS = 100;
'''
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/76#discussion_r481736324" expanded>

Maybe could add a space before and after the brackets?
'''suggestion
        for (int i = 1; i < taskCount + 1; i = i + 1) {
'''
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/76#discussion_r481736407" expanded>

You can consider using plural form since the variable is for multiple tasks i.e. 'numberOfTasks'.
'''suggestion
    protected static int numberOfTasks = 0;
'''
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/65#discussion_r481745587" expanded>

Perhaps 4 could be related to the "/at" string to avoid being a magic number? Could even make "/at" a constant so that you can change it easily.
'''
private static final String PARAM_AT = "/at";
'''
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/65#discussion_r481789086" expanded>

This might not be self-explanatory, so maybe you can add a comment as to what the symbols are?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/65#discussion_r481815902" expanded>

It's possible this might not follow encapsulation: https://nus-cs2113-ay2021s1.github.io/website/schedule/week3/topics.html#paradigms-oop-objects-encapsulation-of-objects
Maybe make it 'private'? And add a getter for it as well? The access to the variable in 'Duke.java' might need to follow as well.
'''suggestion
    private static int taskCount = 0;
    
public static int getTaskCount() {
    return taskCount;
}
'''
</panel>

</panel>

<panel type="info" header="### 113. ZHAN..UKAI `@zsk612` (6 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/104#discussion_r483371262" expanded>

It is nice to state who is responding next
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/104#discussion_r483371443" expanded>

Why not refactor the number 100 to specify the meaning of it
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/104#discussion_r484082757" expanded>

What if the user input is not any of these commands or task names? Why not add exception handlers to handle this possible exception haha?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/2#discussion_r483367678" expanded>

Please specify the meaning of number 100 (MAX_SIZE)
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/2#discussion_r483367849" expanded>

Please specify the meaning of number 40
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/2#discussion_r483369095" expanded>

Nice joke :>
</panel>

</panel>

<panel type="info" header="### 114. ZHAN..NRUI `@zhangcaicai123` (6 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/173#discussion_r484010818" expanded>

could add some comments to help understand 
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/173#discussion_r484010965" expanded>

maybe can put in a single function like printExitMessage()
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/173#discussion_r484011081" expanded>

could declare two final string constants for tick or cross symbol  
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/129#discussion_r483371797" expanded>

I think maybe give more information about how "2" comes from which may avoid "magic number" in code
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/74#discussion_r484011346" expanded>

perhaps add some comments for several long functions to help understand 
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/74#discussion_r484011677" expanded>

maybe sc is not a good variable name, could change it to a more mnemonic name 
</panel>

</panel>

<panel type="info" header="### 115. ZHON..GMOU `@ZhongNingmou` (6 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/102#discussion_r484060294" expanded>

What's this semicolumn for?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/102#discussion_r484060788" expanded>

I like that you add a separate function to create new classes, which makes the code more readable and cleaner. Keep your good job~
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/102#discussion_r484061379" expanded>

I think you did a good job~ You add sperate functions and use understandable function names, it's readable and logical. 
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/25#discussion_r484062525" expanded>

I like that you define these static string at the beginning of your code. You used understandable names and made the content more clear.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/25#discussion_r484063111" expanded>

Perhaps you can change another name instead of allActions?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/25#discussion_r484063390" expanded>

I like this part that you consider another possible situation to make your code more completed.
</panel>

</panel>

<panel type="info" header="### 116. CHEO..RCUS `@Kafcis` (6 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/193#discussion_r481685957" expanded>

unclear what the semicolon is for?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/193#discussion_r481688171" expanded>

Tasklist can be initialized and assigned a value in the same line Task[] Tasklist = Task[100]
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/193#discussion_r481689236" expanded>

it would be helpful to define taskNumber as one lower if all the applications of the variable needs to be one lower as well
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/4#discussion_r481671965" expanded>

removing the space will help with readability
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/4#discussion_r484153485" expanded>

if else class could use K&R style brackets?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/4#discussion_r484153631" expanded>

removing space will help with readability (duplicate comment because I need to redo the review)
</panel>

</panel>

<panel type="info" header="### 117. ELAN..VEEN `@PraveenElango` (6 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/94#discussion_r481755699" expanded>

Consider commenting on the usage of numbers such as 1 and 4 to explain how it affects the indexing.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/52#discussion_r481755912" expanded>

Functionally correct - but consider using a setter inside the Deadline class itself to avoid abstraction violations.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/52#discussion_r481761239" expanded>

Functionally correct - but consider using a setter inside the Event class itself to avoid abstraction violations.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/52#discussion_r481768265" expanded>

Consider using boolean values true/false instead of creating a variable to store those values.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/52#discussion_r481769039" expanded>

Consider using camelCase naming conventions.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/52#discussion_r481769567" expanded>

Good systemic use of cases inside the switch statement
</panel>

</panel>

<panel type="info" header="### 118. TAN ..HING `@TYS0n1` (6 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/64#discussion_r484024221" expanded>

Good use of constants here (comment failed to submit on last week tutorial so ignore this).
Also nice use of word wrap.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/64#discussion_r484037593" expanded>

In general very good following of coding standard for the course: all caps for constants, camelCase for variables and methods etc..
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/20#discussion_r481631603" expanded>

Try to reduce deep nesting here! Break up the if else statements into separate functions or combine certain commands eg int doneTask = Integer.parseInt(words[1]) - 1; is repeated twice.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/20#discussion_r484038883" expanded>

Minor nitpick with regards to code readability, it's ok if not changed since it is within a class.
Instead of naming your stored String as "by", could name it something more descriptive like deadlineDate or date since when reviewers when Ctrl + F looking the date stored in your class, they might not think to search for "by" since it is a common word used in many classes, functions and comments,
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/20#discussion_r484039635" expanded>

For todo, deadline and event cases in switch, there is duplication of the following code
                    System.out.println("Got it. I've added this task:");
                    System.out.println(list[inputs].toString());
                    System.out.println("Now you have " + (inputs + 1) + " tasks in the list.");
                    inputs++;
Try to consolidate this repeated code into a single function eg. void printAddedTask(Task task); for all the System.out functions then call this function for each case. This will help minimise duplication of the code and make your main function more readable.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/20#discussion_r484039940" expanded>

change "inputs" to "input".
plural form only used for collection of variables/objects
</panel>

</panel>

<panel type="info" header="### 119. THNG..XUAN `@thngyuxuan` (6 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/216#discussion_r481612249" expanded>

The naming convention for variables is camelCase, so do remember to use the correct naming convention!
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/216#discussion_r481623476" expanded>

Perhaps these variables could be named in another way? You may want to double check the naming conventions for variables and classes/enums as it is quite similar.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/216#discussion_r481625784" expanded>

Maybe you could add a comment explaining what these variables are meant for!
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/216#discussion_r481626937" expanded>

Perhaps this new line is unnecessary, you may want to remove this so your code looks slightly neater.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/171#discussion_r481630798" expanded>

i like the comment here that explains what the variables do :)
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/171#discussion_r481632410" expanded>

I think the naming for variables is camelCase instead of PascalCase!
</panel>

</panel>

<panel type="info" header="### 120. YUEN.. HAO `@yuen-sihao` (6 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/220#discussion_r482642845" expanded>

I like how you used a variable name for MAX_TASK instead of "magic numbers".
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/220#discussion_r484043640" expanded>

Consider having spaces before and after the operator signs like '=' and '&gt;' to make it more readable.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/220#discussion_r484043914" expanded>

Consider leaving out the "this" word when they are not necessary.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/139#discussion_r482645304" expanded>

Maybe your main method can be shorten so that it does not exceed 30 LOC?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/139#discussion_r482646853" expanded>

I like how all your methods have readable names.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/139#discussion_r482647725" expanded>

I like how your code is not deeply nested so there is no "arrow head" code.
</panel>

</panel>

<panel type="info" header="### 121. FRAN..NSAN `@fchensan` (6 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/36#discussion_r481636594" expanded>

Nice job keeping the length of the lines shorter than 120 characters!
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/36#discussion_r481639247" expanded>

Perhaps you can add in a space before the opening bracket of the if block, so that it follows the code standards.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/36#discussion_r481738826" expanded>

If I remember correctly, the `else if` part should be placed on the same line with the closing bracket of the if block above it.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/3#discussion_r481746792" expanded>

It's very clear what the code is doing, but I would suggest refactoring the code for each case block into their own methods, so that `execAddTask` doesn't get too long.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/3#discussion_r481759022" expanded>

Great job organising the code, very clear overview of the program.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/3#discussion_r481764637" expanded>

Nice use of constants in the switch block!
</panel>

</panel>

<panel type="info" header="### 122. I MU..UMAR `@syncode98` (6 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/27#discussion_r481752437" expanded>

Hi Jericho. Your code is readable and there are no other serious issues. However, I would like to suggest that you do not need to have the spaces in lines 11 and 13. I think that your code would still be readable even without these spaces. However, if you do feel that these spaces improves readability, do implement them.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/27#discussion_r484070838" expanded>

Perhaps consider changing the name of the String variable to deadline or dueDate.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/27#discussion_r484071161" expanded>

Perhaps you could provide a comment regarding what these two Unicode represent. You can define them separately if you want to. This would make it easier to understand what they are. 
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/3#discussion_r481739700" expanded>

Hi. Your code looks fine throughout.Just would like to suggest that
you do not have to split  lines(61-62) into two seperate lines.They dont seem to exceed the 120 char
limit given to us. Great job nonetheless!
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/3#discussion_r484066679" expanded>

Perhaps consider renaming this variable to date/deadline to be a bit more precise.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/3#discussion_r484067114" expanded>

Consider leaving an empty line in between the description and parameter for this Javadoc comments
</panel>

</panel>

<panel type="info" header="### 123. JU Z..IHAO `@JuZihao` (6 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/114#discussion_r483382352" expanded>

Maybe you can change input.equalsIgnoreCase(LIST_COMMAND) to a function such that it is easier for others to understand what it means?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/114#discussion_r483383053" expanded>

Perhaps " [E] " can be set as a private variable?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/86#discussion_r483383699" expanded>

Perhaps you can add a space before date.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/45#discussion_r484074663" expanded>

Perhaps instead of number of persons, you can say it is number of tasks?

</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/45#discussion_r484074679" expanded>

Javadoc of class members can be specified on a single line as follow:
/** Maximum number of tasks that can be held */

</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/45#discussion_r484074746" expanded>

Perhaps use /** instead of /* follows the coding standard given.
</panel>

</panel>

<panel type="info" header="### 124. ALST.. HAO `@alstontham` (6 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/164#discussion_r481688002" expanded>

Perhaps it would be better to put your welcome message and the logo into a method of its own
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/164#discussion_r484048443" expanded>

I think you could format line 102, 103, and 104 to be on the same line since it doesn't exceed the line limit of 120 characters for a single line.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/141#discussion_r481663738" expanded>

Perhaps a more descriptive variable name for "answer" would be better here?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/141#discussion_r481669871" expanded>

These nested if-statements were a bit hard to follow, but good job for attempting to handle possible errors!
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/141#discussion_r484046867" expanded>

For a collection of objects, you might want to consider using the plural form. So here instead of calling the array "list" you could call it "tasks" since it is a collection of tasks.
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/141#discussion_r484047357" expanded>

I noticed that for a few cases of if-else statements, you formatted it like:
}
else{
I think it would be better to format it like this: "} else {" with the two ends of the curly braces on the same line as "else".
</panel>

</panel>

<panel type="info" header="### 125. TAY ..HENG `@dozenmatter` (6 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/201#discussion_r482646759" expanded>

Hi! I think you could consider making this a final variable!
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/201#discussion_r484043817" expanded>

Hi! For this variable, I think it can be changed into private! Same applies to the other variables in other classes as well.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/201#discussion_r484044192" expanded>

I like that your main method consists of readable methods which allows readers to guess its functions.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/137#discussion_r482644580" expanded>

Hi, I think you could consider making this a final variable! Other than that I like how you named your variable name as MAX_TASK.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/137#discussion_r484044789" expanded>

Hi, I think you can consider making this a private variable! Same goes for the variables in other classes as well!
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/137#discussion_r484045012" expanded>

I like that your main method consists of readable methods, making it easy for readers to understand their functionalities.
</panel>

</panel>

<panel type="info" header="### 126. LIU ..MING `@Jingming517` (6 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/106#discussion_r484080644" expanded>

Can consider changing this into a switch statement. It's clearer when you have more commands.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/106#discussion_r484080721" expanded>

Very good coding standard. Keep up with it!
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/106#discussion_r484080764" expanded>

Unnecessary comment
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/73#discussion_r484018102" expanded>

Very neat and clear, good job!
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/53#discussion_r484081290" expanded>

Very good! Your program checks whether user input is valid. 
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/53#discussion_r484081528" expanded>

Good coding standard. Your variable names are clear and easy to understand.
</panel>

</panel>

<panel type="info" header="### 127. LUSI..U QI `@Lusi711` (6 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/137#discussion_r482701001" expanded>

Could the variable be changed from an iterator i to a variable name (e.g. spaceIndex). I noticed it in addDeadline() and addEvent() too.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/137#discussion_r484032047" expanded>

I find it a clever idea to use an enumeration for the command type.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/137#discussion_r484032286" expanded>

Instead of a while loop, could this be phrased as a for loop instead?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/63#discussion_r484029027" expanded>

I am not entirely sure whether an empty line counts as a violation, but it might be safer to not leave the line breaks?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/63#discussion_r484029304" expanded>

Perhaps you can specify whether this is a "public", "protected" or "private" member?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/32#discussion_r482706572" expanded>

I like your code. Method functions are clear and format is strictly adhered.
</panel>

</panel>

<panel type="info" header="### 128. ALIC..IMIN `@AliciaHo` (6 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/176#discussion_r482036035" expanded>

Comment should be indented relative to their position in code
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/176#discussion_r482036572" expanded>

Maybe the name can be more specific other than temp1 or temp2?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/14#discussion_r481701784" expanded>

Maybe you can remove this empty line?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/12#discussion_r481692681" expanded>

Name should not be a single letter
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/12#discussion_r481692918" expanded>

Name should not be a single letter
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/12#discussion_r481693720" expanded>

Comment should be indented relative to their position in code
</panel>

</panel>

<panel type="info" header="### 129. PUAH.. WEN `@e0425705` (6 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/151#discussion_r482644971" expanded>

Do you think that there is an indentation error here? Do consider looking through your code for consistency in code indentation.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/151#discussion_r482645191" expanded>

Do you think that there is unnecessary amount of  spacing here?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/151#discussion_r482645574" expanded>

Do you think that there is a better way to name this rather than just line?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/151#discussion_r482646374" expanded>

Can there be a better naming for this variable?
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/151#discussion_r482646788" expanded>

You can consider putting these in a if-else loop?
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/54#discussion_r482642113" expanded>

same issue here, minor indentation error
</panel>

</panel>

<panel type="info" header="### 130. WANG..SONG `@wgzesg` (6 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/173#discussion_r483367276" expanded>

No indentation for switch statement
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/96#discussion_r483369779" expanded>

Can put this as one of the attribute of class Duke so later static functions you will not need to pass in this array
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/96#discussion_r483369952" expanded>

Can put this into another static (one-line) method to maintain the same level of abstraction
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/96#discussion_r483370918" expanded>

Can extract this part out into a method like printResponseMessage() 
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/96#discussion_r483371142" expanded>

Since it's used in todo, ddl and event creation 
</panel>

<panel  header="**6 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/96#discussion_r483372013" expanded>

Try use the toString method of event/ ddl/ toto?
</panel>

</panel>

<panel type="info" header="### 131. ELIJ..I YI `@mxksowie` (5 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/168#discussion_r482737377" expanded>

Consider leaving spaces between operators for better readability
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/168#discussion_r482740112" expanded>

Consider the use of javadocs to describe the behavior of your methods.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/123#discussion_r482745381" expanded>

Consider a different variable name; thing seems a bit too vague.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/123#discussion_r482745869" expanded>

Consider avoiding the use of AT_LENGTH; it appears to be a "magic number".
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/123#discussion_r482746938" expanded>

Consider a cleaner way to implement commandLength
</panel>

</panel>

<panel type="info" header="### 132. CAO ..ZEYU `@Cao-Zeyu` (5 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/143#discussion_r482751546" expanded>

It might be better to avoid abbreviation?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/143#discussion_r482753497" expanded>

You can consider following the camelCase format for methods where the first letter is lowercase.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/143#discussion_r482757681" expanded>

To increase the code readability, you can replace the (... ? ... : ...) statement with an if-else statement. But line 33 still seems quite okay to me. 
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/131#discussion_r482738400" expanded>

For the "switch" statement, it would be better if you provide a "default" case also.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/131#discussion_r482739125" expanded>

To follow the Java coding standard, there should be no indentation for "case" clauses.
</panel>

</panel>

<panel type="info" header="### 133. ONG ..XIAN `@zongxian-ctrl` (5 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/151#discussion_r482747568" expanded>

Consider using toString for all the print action? As they are repetitive and can be simplified?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/151#discussion_r482748067" expanded>

Consider importing classes explicitly? 
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/151#discussion_r482749743" expanded>

Can consider refactor these lines for done, todo, event, deadline? To make it less clustered 
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/28#discussion_r482739025" expanded>

Consider making System.out.println("----------------------------------------"); into a method? 
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/28#discussion_r482740209" expanded>

Consider If else loop? To prevent deep nesting
</panel>

</panel>

<panel type="info" header="### 134. WANG..G YI `@wly99` (5 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/213#discussion_r484032963" expanded>

Magic number 100 could be replaced with a constant instead
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/213#discussion_r484033221" expanded>

not the same level of abstraction as the rest of the code in main. perhaps it is better placed in enterGreet()
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/161#discussion_r484015236" expanded>

Good that class name follows upper camel case, also good use of inheritance to prevent repetitive code
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/161#discussion_r484031606" expanded>

There are a lot of implementation details, perhaps it would be even better if you could refactor and abstract most of it into other methods so that other readers have an easier time reading it.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/161#discussion_r484031721" expanded>

Good that class name follows upper camel case, also good use of inheritance to prevent repetitive code
</panel>

</panel>

<panel type="info" header="### 135. WANG..AYNE `@wangwaynesg` (5 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/204#discussion_r482740618" expanded>

Should there be spaces between commas to follow the coding standards?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/204#discussion_r484062391" expanded>

Should there be spaces between "}else" and ")){" to comply with coding standards?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/23#discussion_r482739164" expanded>

Should Task t have a better variable name?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/23#discussion_r484061340" expanded>

I like this! Interesting concept of enumerating TaskType here!
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/23#discussion_r484062197" expanded>

I like this! Use of ArrayList so that the list of tasks do not have a fixed capacity!
</panel>

</panel>

<panel type="info" header="### 136. LIEW..HENG `@GoldenCorgi` (5 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/221#discussion_r482804518" expanded>

Perhaps it is good practice to use taskList[i].taskType.equals("T") for string comparison here?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/109#discussion_r482812159" expanded>

Try to avoid the use of a magic number here. Using a named constant makes the code easier to understand because the name tells us more about the meaning of the number.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/77#discussion_r482809903" expanded>

Is there a reason to override when the both Task and Todo is similar for this function? 
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/62#discussion_r482813091" expanded>

Try to avoid the use of a magic number here. Using a named constant makes the code easier to understand because the name tells us more about the meaning of the number.


</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/62#discussion_r482814817" expanded>

Could this be replaced by a traditional for loop? Example : 

'''
for (i = 0; i < tasks.length(); i++) {
    System.out.println(i+ ". " + tasks[i]);
}

'''
</panel>

</panel>

<panel type="info" header="### 137. HUAN..HANG `@yellow-fellow` (5 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/206#discussion_r482715298" expanded>

Good work on Level 0.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/206#discussion_r482715441" expanded>

Good work on Level 1.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/206#discussion_r482716475" expanded>

Blank lines can be omitted. Otherwise good work on Level 2.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/206#discussion_r482716759" expanded>

Multiple lines of unnecessary spacings. Would be good if you can omit these blank spaces.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/162#discussion_r482718303" expanded>

Able to create a new method to replace these 3 lines for organization.
</panel>

</panel>

<panel type="info" header="### 138. DING..BANG `@dmbclub` (5 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/186#discussion_r484060609" expanded>

for the if else loop. You can follow this
if (condition) {
statements;
} else if (condition) {
statements;
} else {
statements;
}
Leave a space between else/if and bracket.
And also It is not suggested to use so many if else if.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/166#discussion_r481745778" expanded>

For example here boolean taskFinished =  false;
I think you should use isFinished for boolean variables.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/110#discussion_r484061593" expanded>

else if(t.description.contains("done")) (should have a space here){
For if-else statements, please follow this
if (condition) {
statements;
} else if (condition) {
statements;
} else {
statements;
}
There should be a space between "if and" (condition) and space between (condition) and "{"
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/84#discussion_r483970219" expanded>

It is not suggested to use so many if else if. I think you can try switch case.
switch (expression) {
  case x:
    // code block
    break;
  case y:
    // code block
    break;
  default:
    // code block
}
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/63#discussion_r484061331" expanded>

I think you can define a constant variable to avoid magic number like 4,
</panel>

</panel>

<panel type="info" header="### 139. BENA..XIAN `@BenardoTang` (5 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/209#discussion_r481676730" expanded>

Would it be better to read if the variables and System.out were separated with a blank line?


</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/184#discussion_r483969098" expanded>

It would be more appropriate to name the method as 'printGreeting' instead of 'printGreetings' since the method only contains one greeting.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/184#discussion_r483969406" expanded>

Perhaps it would be easier to declare a String constant for the line border, so u do not need to type it out every time. 
For example, declare a private static final String MESSAGE_BOUNDARY = "    _____________________________________"
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/160#discussion_r484046897" expanded>

It feels like the line 
else if(command.contains("todo")||command.contains("deadline")||command.contains("event")... seems pretty redundant as well.
Would it be easier to use switch case instead? That would make the logic of duke's response much easier to code, i think.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/94#discussion_r481683396" expanded>

Would it be possible to use the already existing listSize instead of creating a new method getListSize?
</panel>

</panel>

<panel type="info" header="### 140. SIM .. YOU `@f0fz` (5 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/163#discussion_r483970453" expanded>

Do consider making a 'decorator' function that can neatly print any output you want to give to the user, with appropriate formatting, divider bars, and newlines.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/163#discussion_r483970845" expanded>

You can define toString() here as returning the main few things in a 'task printout' - the checkbox and description. Then, you can use super.toString() in the subclasses of Task like so: `return "[D] " + super.toString() + " by: " + this.by`
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/142#discussion_r482646379" expanded>

Didn't find any coding standard violations, good job!
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/130#discussion_r483970077" expanded>

It's possible for you to use super.toString() in your child classes of Task like Todo, Deadline, etc. such that you don't need to repeat yourself too much.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/130#discussion_r483970187" expanded>

Do use this.size in line 28 instead of size for consistency.
</panel>

</panel>

<panel type="info" header="### 141. DASH..SHEK `@oasisbeatle` (5 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/140#discussion_r481692421" expanded>

You can assign the line separator to a string or make a separate line printing function 
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/140#discussion_r481693327" expanded>

line can be changed to something like userInput so it is more clear what the string line does
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/12#discussion_r481737206" expanded>

The naming of String by seems a little ambiguous, so it would be good to use a more descriptive variable
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/12#discussion_r481739225" expanded>

It maybe better to set a constant like MAX_TASK_LENGTH = 100 as to avoid the use of magic numbers
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/12#discussion_r481746847" expanded>

You can try adding some more spaces just like the rest of the code
</panel>

</panel>

<panel type="info" header="### 142. HERM.. HAN `@rashien3` (5 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/170#discussion_r481744627" expanded>

Consider using a switch(input.startsWith("done")) - case block instead of cascading else if statements


</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/170#discussion_r481744973" expanded>

Consider making this function return a boolean variable instead of an int


</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/85#discussion_r481749663" expanded>

Consider declaring these as static final String in the superclass and naming them with capital letters, eg. MESSAGE_BYE_SIGN
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/85#discussion_r481752524" expanded>

Consider using a more descriptive name like numberOfTasks, and declare it as a static variable under Duke and not in Main
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/85#discussion_r481755317" expanded>

consider SLAPing the codes and using a case-switch block such that each case only contains one function
</panel>

</panel>

<panel type="info" header="### 143. NGUY..LONG `@longngng` (5 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/148#discussion_r482703375" expanded>

Perhaps you can break this into methods like printHello, handleInput, to make the code more readable?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/148#discussion_r482703575" expanded>

I think it is better to name the method with a verb, like markAsDone()
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/32#discussion_r482698833" expanded>

I like how you have the constant MAX_TASKS instead of some magic number!
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/32#discussion_r484071000" expanded>

I like how you define these variables as constants
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/32#discussion_r484071756" expanded>

I like this usage of constants instead of putting the Unicode values
</panel>

</panel>

<panel type="info" header="### 144. FELI..ALIM `@felixhalim` (5 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/132#discussion_r481634835" expanded>

Variable name should be in camelCase
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/132#discussion_r481636431" expanded>

You are accessing a variable named Tasks of class Tasks, the similarity of the name might cause confusion.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/132#discussion_r481637659" expanded>

To adhere to the code standard, perhaps change the method name to camelCase?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/55#discussion_r481624617" expanded>

I like the way you implement Java error checking by throw exception.
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/55#discussion_r481630243" expanded>

Perhaps you can add "default" case to adhere with the Code Standard
</panel>

</panel>

<panel type="info" header="### 145. TAN ..BIAS `@tobiasceg` (5 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/162#discussion_r482647046" expanded>

Refactoring: this is possible to extract this to a new method to improve code readability
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/162#discussion_r482648389" expanded>

There's an unused variable 
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/162#discussion_r482649934" expanded>

initialization of variables has to be inside for loop
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/155#discussion_r482646954" expanded>

Switch statements: as per the coding standards, switch statements do no require indentations
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/155#discussion_r482651541" expanded>

boolean naming could be written to sound like a boolean : hasExit()
</panel>

</panel>

<panel type="info" header="### 146. NI Y..ILUN `@lunzard` (5 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/151#discussion_r482640529" expanded>

Hi. The welcome message could be extracted into one method to make the main method shorter and more readable!
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/151#discussion_r482642305" expanded>

Hi, as you can see, the 
'int divider = line.indexOf(" ");
String index = line.substring(divider + 1);' 
has many repetitions such as the one in line 59,60. These lines share the same purpose, which are to process the 'userinput' to get the command type and content. A such, Extracting the method could be a better way of organizing the code. Hope this can help you!
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/151#discussion_r482643076" expanded>

Hi, as mentioned by the prof during the lecture, 10 is a magic number, and reader like me may not know why the number is set to 10 instead of 100 or else. So you may give the number a meaning by defining it as a constant. Hope this helps!
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/147#discussion_r482644909" expanded>

Hi since the separate line is repeatedly used throughout the main method, you may define it as a static constant outside the main method. This could make your code shorter and more readable!
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/147#discussion_r482645716" expanded>

I like how you organize your code in this `switch`
</panel>

</panel>

<panel type="info" header="### 147. GUNI..TTAL `@gmit22` (5 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/226#discussion_r483365024" expanded>

Constant used, to be declared in capital letters
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/226#discussion_r483365452" expanded>

Description of return values is mentioned  clearly. Good job
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/226#discussion_r483370555" expanded>

Parameter types and return values explained. Easy understanding of the code
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/45#discussion_r483371381" expanded>

Constants used in static, declared in capital letters. Coding standards followed
</panel>

<panel  header="**5 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/45#discussion_r483371723" expanded>

Constants used for most outputs in the command line, easy readability. Changing these constants would automatically make changes everywhere needed
</panel>

</panel>

<panel type="info" header="### 148. CHAN..IANG `@scjx123` (4 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/169#discussion_r482720003" expanded>

unnecessary spacing between case 
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/169#discussion_r482720031" expanded>

the closing braket should be in line with the 'if' 
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/130#discussion_r482717186" expanded>

comment should be put at the top 
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/53#discussion_r480655665" expanded>

Interesting use of Enum for Code scalability in future ! 
</panel>

</panel>

<panel type="info" header="### 149. LOW ..LEON `@leonlowzd` (4 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/206#discussion_r482737082" expanded>

I feel importing * is a bad practice as we are uncertain to which file is  being imported. To add on, Scanner has already been added prior to importing *. Thus, this line is not needed
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/206#discussion_r482738567" expanded>

Same comment as Level 1
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/119#discussion_r482745410" expanded>

I like that you have handled exception, however, should we be more specific with the error message? So that the user can be more well informed that he/she did not input an integer.

Suppose:
instead of printing "Opps Error", maybe can print "marked index not found/invalid"
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/119#discussion_r482745563" expanded>

Some of the functions have a white space before parentheses, some does not. Should it be more consistent? 
</panel>

</panel>

<panel type="info" header="### 150. KOH ..AMMY `@tammykoh` (4 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/126#discussion_r482718578" expanded>

You could put the content for each test case in separate functions just like printBye(), so that the code is more uniform and neater
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/126#discussion_r482721697" expanded>

It'll be good to have a constant for 100 so as to avoid magic literals
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/117#discussion_r482726468" expanded>

You could print greet in the showWelcomeScreen() function
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/117#discussion_r482729075" expanded>

Instead of having a chunk of code in main, you could put the code in functions and call the functions from main. Have a look at week 3 lecture on single level of abstraction per function (SLAP).
</panel>

</panel>

<panel type="info" header="### 151. CHAN..JING `@shaojingle` (4 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/81#discussion_r482803898" expanded>

I think upper case is used for constants and strings are immutable by default. Thus, maybe can change the naming of the variables to fit coding standard.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/35#discussion_r482807679" expanded>

Maybe can combine the methods together into a single method to make it simpler?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/35#discussion_r482808694" expanded>

maybe can combine the two ifs and change 1 to if-else
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/35#discussion_r482809862" expanded>

maybe can move all these methods to the Class.java files
</panel>

</panel>

<panel type="info" header="### 152. WOON.. MIN `@yokemin` (4 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/157#discussion_r482807392" expanded>

Coding Standard: can put comment one line above with the same indentation as the return statement
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/121#discussion_r484072310" expanded>

Coding Standards: Long method, could refactor code
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/121#discussion_r484073448" expanded>

Coding Standards: not wrong, but could use just // for shorter comments 
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/121#discussion_r484074296" expanded>

Coding Standards: magic number 100
</panel>

</panel>

<panel type="info" header="### 153. JAZH..SHEN `@jazhten` (4 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/128#discussion_r481670263" expanded>

Perhaps you could consider saving the  "u/2713" as a const variable if there is a need to reuse it in the future?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/128#discussion_r484137453" expanded>

Great use of const to remove ambiguity from magic numbers!
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/124#discussion_r481673305" expanded>

You might consider leaving a space before and after the "=" to improve the readability.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/124#discussion_r481677991" expanded>

Perhaps you could leave some space in the loop forming stage, for example i < MAX_SIZE; to improve readability. 
</panel>

</panel>

<panel type="info" header="### 154. JIN ..XUAN `@JinYixuan-Au` (4 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/215#discussion_r483606248" expanded>

Instead of using long underline Sting, is it better to declare it once?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/186#discussion_r483614068" expanded>

I noticed that when you use "+", sometimes you have spacing before or after it, but sometimes don't. Maybe you can adjust the spacing to make it neat.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/165#discussion_r483371842" expanded>

As for the coding standard, should "else if" statement on the above line with the brace"}"?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/29#discussion_r483621316" expanded>

This conditional statement seems to be so long. Instead of using the switch statement, maybe you can declare some functions singly to make your codes more concise.
</panel>

</panel>

<panel type="info" header="### 155. RIAZ..AMED `@riazaham` (4 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/223#discussion_r482644709" expanded>

Missing a 'break' statement
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/64#discussion_r484020284" expanded>

"placementCorrect" boolean is not phrased as a boolean. Consider "isPlacementCorrect" instead
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/64#discussion_r484020436" expanded>

Misleading naming convention. "DeadLine" can be interpreted as "Dead Line". Consider "Deadline" instead
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/64#discussion_r484021036" expanded>

Formatting of try-catch statements are inconsistent.
Some are formatted as such:
`try {`
`----endTime = dateWithoutTime.parse(endTimeUnformatted);`
`} catch (ParseException e) {`
`----e.printStackTrace();`
`----return;`
`}`

And the rest are formatted as the highlighted lines.
</panel>

</panel>

<panel type="info" header="### 156. SEAN..I AN `@thatseant` (4 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/67#discussion_r482646338" expanded>

Good Job! 👍

I like how you abstracted your entire code into functions, allowing for each section to be readable and nameable without need for much comments.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/34#discussion_r482647714" expanded>

Do we have to use protected here? Would using private suffice?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/34#discussion_r482648030" expanded>

I like how all command keywords are defined as constants at the start of the file so they can be easily changed when necessary.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/34#discussion_r482648644" expanded>

I like how your code is abstracted into functions, enhancing readability without need for comments. Good Job! 👍
</panel>

</panel>

<panel type="info" header="### 157. LEE ..ARRY `@harryleecp` (4 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/184#discussion_r483383736" expanded>

Just a suggestion, maybe you can try accounting for cases where the taskNo is more than 1 digit. 
For example you can split the variable "line" into multiple substrings and then convert the second string to integer as follows:
String[] words = line.split(" ");
int taskNo = Integer.parseInt(words[1]);


</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/118#discussion_r484130521" expanded>

Perhaps some of the variable names can be improved further. For example instead of on, can try something like dueOn in your Event class and instead of by, can try completeBy in your Deadline class
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/16#discussion_r483386758" expanded>

The overall structure of the method descriptions is very organized and easy to read. Well done!
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/16#discussion_r484129504" expanded>

Perhaps the underscores can be assigned as a private static variable such that you do not have to manually enter the them in the code multiple times.
</panel>

</panel>

<panel type="info" header="### 158. OWEN..YANG `@chewyang` (4 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/198#discussion_r482650472" expanded>

I like how you made this additional class to process the user's input.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/198#discussion_r482650505" expanded>

maybe there should be a comment that explains what arguments string is to improve readability?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/59#discussion_r482644855" expanded>

I like how all your functions have very clear names
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/59#discussion_r482644892" expanded>

I like how you did this to simplify your print statements
</panel>

</panel>

<panel type="info" header="### 159. CHAN.. HUI `@durianpancakes` (4 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/176#discussion_r481662059" expanded>

Should this class be renamed as Activity instead of Activities? 
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/176#discussion_r481663398" expanded>

Should there be spaces between your methods? I noticed that there is a little inconsistency in several other places too.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/13#discussion_r481672622" expanded>

Should this space be removed to be consistent with other classes (i.e friendlyBotEvent.java, friendlyBotTask.java)?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/13#discussion_r481673572" expanded>

I liked how you separated your long lines, making it easily readable!
</panel>

</panel>

<panel type="info" header="### 160. XU C.. CHE `@xuche123` (4 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/108#discussion_r484033961" expanded>

Good usage of SLAP here. Functions are short and clear and helps make the overall code easy to understand.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/81#discussion_r483969398" expanded>

The creation of this separate class makes the main Duke file much more clean and readable. Good idea!
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/78#discussion_r483415220" expanded>

There are several unnecessary empty lines here which could be removed.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/74#discussion_r483970116" expanded>

Perhaps the name function getTaskManagerSaysBye() can be changed to something like hasTaskManagerSaidBye to make it clearer as to what the function is doing.
</panel>

</panel>

<panel type="info" header="### 161. JERI..QUAN `@jerichochua` (4 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/138#discussion_r481748627" expanded>

Maybe you can consider abstracting switch to a new method instead?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/138#discussion_r484036377" expanded>

Maybe consider replacing 0x2718 and 0x2713 with a named constant to avoid the use of magic numbers?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/138#discussion_r484037312" expanded>

Is importing this required in this class? If it is not required, would it be better to remove it first?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/65#discussion_r481741411" expanded>

Maybe you can consider removing these extra empty lines within the if-else statements? Other than that, everything looks good!
</panel>

</panel>

<panel type="info" header="### 162. MARC.. TAN `@marcursor` (4 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/73#discussion_r482700239" expanded>

Is this an unnecessary line spacing?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/73#discussion_r482700697" expanded>

Is the return indented too much?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/37#discussion_r482707962" expanded>

Should this be called directly as taskManager.taskIsChecked(userInputLine) in the main function?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/37#discussion_r482708582" expanded>

Is this declaration necessary?
</panel>

</panel>

<panel type="info" header="### 163. AW Y.. WEE `@0xZ3RO` (4 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/195#discussion_r481623200" expanded>

Line declaration here when you have a method to printLine
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/195#discussion_r481623573" expanded>

Use the printLine function already implemented
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/195#discussion_r481623805" expanded>

Use the printLine function already implemented
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/195#discussion_r481626248" expanded>

Is isTure intentional? Maybe use a more easily understood name
</panel>

</panel>

<panel type="info" header="### 164. NEO .. ERN `@neojiaern` (4 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/154#discussion_r483372876" expanded>

Perhaps you could consider separating the main method to several other methods so that it is shorter? 
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/154#discussion_r483375490" expanded>

Perhaps you may want to consider refactoring the unicode characters as constants for easier reference?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/154#discussion_r484036581" expanded>

Perhaps you may want to consider refactoring 100 as a constant e.g. MAX_TASKS so as to avoid magic numbers? 
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/42#discussion_r483365411" expanded>

Should there be an empty line left in between the description and parameter section? I noticed the same issue in other places too. 
Perhaps you could also add a punctuation behind each parameter description. 
</panel>

</panel>

<panel type="info" header="### 165. NG S..JANE `@Jane-Ng` (4 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/104#discussion_r483373813" expanded>

Should there be a space to separate  variables and method?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/104#discussion_r483374094" expanded>

Should there be a space to separate variables and method?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/104#discussion_r483374105" expanded>

Any reason why you used if-else statements instead of switch statement?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/92#discussion_r483369467" expanded>

Good job on your indentation. Code is organised
</panel>

</panel>

<panel type="info" header="### 166. ZHUA..GJIN `@Lee-Juntong` (4 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/82#discussion_r483415463" expanded>

I like this part as this function compiles all possible command the user can input, and then give these tasks to the respective functions.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/82#discussion_r483415679" expanded>

This is a good practice of enum!
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/82#discussion_r483416892" expanded>

I like this function as we are using the line everywhere of the iP, extract this as a function is a wise choice. However, maybe 100 '-' is too long?
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/82#discussion_r483419143" expanded>

Perhaps NoOfIncompleteTasks would be a better name?
</panel>

</panel>

<panel type="info" header="### 167. VANE.. RUI `@vanessa-kang` (4 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/15#discussion_r483384577" expanded>

The loop body should be wrapped by curly braces, even though there is only one line of code in the body
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/15#discussion_r483386236" expanded>

I noticed that the same chunk of code (e.g. lines 48-51, 55-58 etc) is repeated for every addition of a new item. Perhaps you could consider modularising this into one addTask function, in order to avoid unnecessary repetition?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/15#discussion_r483389178" expanded>

Do remember to follow Egyptian style for the curly braces. :)
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/15#discussion_r483391145" expanded>

Could you explain the code in your constructor? Because (as far as I know) a constructor should only be used to create an object, assign values to attributes and call other class methods (if needed). I think you could consider abstracting the rest of the code into a separate printTask function.
</panel>

</panel>

<panel type="info" header="### 168. VARS..A MS `@Varsha3006` (4 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/43#discussion_r483425974" expanded>

I think this is a good idea! Making a separate class for constants. Makes your code neater
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/43#discussion_r484035515" expanded>

 I like how you have put them in different functions for different types of inputs by refactoring the code. Makes the code more readable.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/24#discussion_r483419492" expanded>

Good using of white spaces, makes the code very readable !
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/24#discussion_r483422084" expanded>

I think overall, good use of the Egyptian style for the brackets. Maybe naming for the methods can be improved. Code is readable too!
</panel>

</panel>

<panel type="info" header="### 169. YANG..IAQI `@jiaaaqi` (4 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/175#discussion_r484074801" expanded>

perhaps can consider adding empty lines in between to improve readability
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/175#discussion_r484076058" expanded>

perhaps can just add the code in the two methods directly into echoCommand, i didn't see the point of creating 2 other methods
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/175#discussion_r484076251" expanded>

same as echoCommand, perhaps can consider commenting in the code to separate the 2 parts. since reader would have to go and look for the 2 methods, then be able to understand. decreased readability of code
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/96#discussion_r483424058" expanded>

perhaps can put the while loop that handles commands into a function instead of main
</panel>

</panel>

<panel type="info" header="### 170. NG H..MING `@imhm` (4 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/135#discussion_r482703392" expanded>

Methods should be separated by one blank line
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/135#discussion_r482703786" expanded>

Else statements should be inline with the bracket preceding it. ie. "} else {"
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/135#discussion_r484071316" expanded>

some methods have a space between method name and the open brackets while others doesnt. ie. "Todo {" versus "Todo{". A solution would be to use Ctrl + Alt + L in Intellij to reformat the code easily.
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/135#discussion_r484071457" expanded>

There should be spaces between operators. ie. "indexDivider + 3" instead of "indexDivider+3"
</panel>

</panel>

<panel type="info" header="### 171. POON..N AN `@poonchuanan` (4 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/70#discussion_r482647031" expanded>

Hi, operators should be surrounded by a space character, just like line 6.
Good use of named constant 'MAX_LIST_SIZE'!
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/48#discussion_r484055603" expanded>

avoid magic number like 100
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/48#discussion_r484055858" expanded>

variable names should be in camel case ie taskNumber 
</panel>

<panel  header="**4 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/17#discussion_r482642486" expanded>

You may want to edit the format of the if-else statement such that it follows this form:
if (condition) {
    statements;
} else if (condition) {
    statements;
} else {
    statements;
}
Just like what you did the the sections above.
The rest of the code looks fine. Good Job!
</panel>

</panel>

<panel type="info" header="### 172. ANG .. JUN `@Ang-Cheng-Jun` (3 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/208#discussion_r482738919" expanded>

Try to be consistent in the while loop and if loop, as some got space before the open bracket, some no 
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/17#discussion_r482742434" expanded>

You may consider using switch cases. It will looks neater.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/17#discussion_r482743100" expanded>

Your while loop looks like missing a space. Maybe you can go to the coding standard and compare it .

</panel>

</panel>

<panel type="info" header="### 173. YANG.. FAN `@fanceso` (3 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/188#discussion_r482742113" expanded>

Please use correct spaces "=="
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/188#discussion_r482745171" expanded>

Should the "+" sign at this line or at the next line?
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/160#discussion_r482751463" expanded>

Should the "+" sign  at this line? 
There are multiple repeated lines in string "__________" , you might consider to use a variable to reduce?
</panel>

</panel>

<panel type="info" header="### 174. ANG ..XIAN `@JunxianAng` (3 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/205#discussion_r483969381" expanded>

Instead of importing the enttire package, it would be better to just import the class you need
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/205#discussion_r483969459" expanded>

Instead of having so many system.out.println commands, it would be better to refactor these into a method itself
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/147#discussion_r482803201" expanded>

Hi, 
instead of using 100 which is a magic number, you can give meaning by defining it as a constant.
</panel>

</panel>

<panel type="info" header="### 175. MUHA..MZAH `@skyaxe97` (3 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/21#discussion_r481751492" expanded>

Could consider extracting this segment into a single method to inform user of success operation
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/21#discussion_r481751579" expanded>

Good and clean use of the switch statement 
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/21#discussion_r481751618" expanded>

Consider adding a space after "while"
</panel>

</panel>

<panel type="info" header="### 176. MICH..NATA `@michaeldinata` (3 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/217#discussion_r483388937" expanded>

Maybe you can use the SLAP technique here and refactor this into a new function
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/210#discussion_r483381506" expanded>

can use a better variable name to call the object
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/210#discussion_r483388452" expanded>

Maybe you could add a space after the closing curly brackets } and then type "else"
</panel>

</panel>

<panel type="info" header="### 177. CHEN..NRAN `@untitle4` (3 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/207#discussion_r481667447" expanded>

I like this way you inherit and simplify the task.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/207#discussion_r481671013" expanded>

It's clear to separate the tasks with a comment.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/6#discussion_r481679505" expanded>

It might be more clear if you put this function before main
</panel>

</panel>

<panel type="info" header="### 178. CHEN..XING `@QX-CHEN` (3 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/166#discussion_r481683677" expanded>

According to the coding standard, shouldn't due_date be dueDate?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/55#discussion_r481666917" expanded>

Perhaps the function name could change to shouldQuit or isDone? When the input is "bye", the program should quit.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/55#discussion_r481673319" expanded>

Perhaps can replace desc with description? Took me a second to realise it's description.
</panel>

</panel>

<panel type="info" header="### 179. LIN ..HENG `@slightlyharp` (3 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/38#discussion_r482717584" expanded>

i think the naming of this variable is a bit confusing. It is used to check mainly the first 2 word , and not just for "done". Also since it only checks the first two word i think do not really need to create an array of the whole sentence.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/38#discussion_r482717610" expanded>

I think it would be clearer to create another method for printing the text and then call from main instead of putting it in the constructor.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/22#discussion_r482706447" expanded>

Coding standard violation: else if should be in the same line as the end bracket.
</panel>

</panel>

<panel type="info" header="### 180. WAN ..NDAN `@madbeez` (3 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/224#discussion_r484018872" expanded>

Perhaps you could store the boolean in a variable and return it at the end of the method, instead of returning in the middle of the switch statement. 
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/224#discussion_r484019501" expanded>

This section would be easier to read if the commented out code was placed at the end instead of in the middle.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/215#discussion_r483416013" expanded>

Instead of naming the list "list", you can consider using a more descriptive name like "taskList".
</panel>

</panel>

<panel type="info" header="### 181. BRYA.. JUN `@Bryanbeh1998` (3 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/166#discussion_r482043973" expanded>

due_date should be written as dueDate as per the coding standards
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/166#discussion_r482051121" expanded>

Perhaps you should use isFinished instead of taskFinished
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/4#discussion_r481685191" expanded>

Should not have multiple  return lines in a single method
</panel>

</panel>

<panel type="info" header="### 182. HARR..AUNG `@sixletters` (3 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/116#discussion_r481731160" expanded>

Same!
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/116#discussion_r481732293" expanded>

Instead of using arrays and counting the number of tasks. You could also use arraylists from java docs to access more functionalities
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/13#discussion_r481748539" expanded>

You dont have to use 4 back to back System.out.println. The use of /n actually creates a new print on the next line.
</panel>

</panel>

<panel type="info" header="### 183. TAN ..HAWN `@ShawnTanzc` (3 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/203#discussion_r481629798" expanded>

Could there be an inconsistency with the spacing?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/203#discussion_r481633129" expanded>

I think there could be a similar 
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/132#discussion_r481639110" expanded>

Hi, just thought that since this is a method, it should start with small letters instead of capital letters, small issues
</panel>

</panel>

<panel type="info" header="### 184. CHEA..OTHY `@e0406981` (3 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/209#discussion_r481666652" expanded>

code is nice & readable, easy to uds :)
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/209#discussion_r481678080" expanded>

i agree with benardo, maybe spacing will help!
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/5#discussion_r481688118" expanded>

i like the comments! makes the code more readable
</panel>

</panel>

<panel type="info" header="### 185. ALDO..GITO `@domaxi` (3 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/152#discussion_r481610320" expanded>

Perhaps, you could use less abbreviation for the variable names to make it more straightforward i.e. deadlineDate.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/152#discussion_r481611401" expanded>

I think using the variable name such as noCommand can be a little bit confusing. I would suggest using variable names that are less confusing. noCommand can mean 2 things, 1) no command and 2) number of commands.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/152#discussion_r481614479" expanded>

Perhaps you can opt for more straight forward variable name for the obtainDLDesc, such as obtainDeadlineDescription
</panel>

</panel>

<panel type="info" header="### 186. IVAN..KITO `@ivanderjmw` (3 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/203#discussion_r481635321" expanded>

The code seems a bit repetitive here. It would be great if you modify this part to be less repetitive. The lines here also seem to be a bit long.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/156#discussion_r481628994" expanded>

I like how you changed the functions to private
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/17#discussion_r481624860" expanded>

I like how you are able to reuse `super.toString()` here
</panel>

</panel>

<panel type="info" header="### 187. LOW ..NING `@ninggggx99` (3 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/205#discussion_r484019652" expanded>

using switch case will be better 
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/205#discussion_r484019854" expanded>

instead of putting so many print lines under one condition, extract them and name them according to their commands
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/122#discussion_r482699764" expanded>

Your switch case should have proper indentation
</panel>

</panel>

<panel type="info" header="### 188. LIM ..N QI `@anqi20` (3 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/158#discussion_r483384576" expanded>

I think if-else standards need to be in this form: 
if (...) {
... 
} else if(...) {
...
}
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/158#discussion_r483384614" expanded>

I think these numbers might be viewed as magic numbers 
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/93#discussion_r483387111" expanded>

I really like your coding styles. It is super clear and easy to understand and to read as well. They weren't any magic numbers and the refactoring is awesome! 
</panel>

</panel>

<panel type="info" header="### 189. SAMU.. HAN `@samuellleow` (3 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/168#discussion_r480782913" expanded>

I like the use of extraction to determine the task type, display list and task done function. It makes the code more concise and easy to read.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/163#discussion_r482646306" expanded>

Good job, your code looks clean and good.
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/47#discussion_r482667800" expanded>

Great job on extracting your code into different readable functions with clear function heading.
And also a fantastic job on error handling.
</panel>

</panel>

<panel type="info" header="### 190. YU G..GENG `@gy716` (3 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/75#discussion_r483457143" expanded>

I think it's better to put the main method at the bottom and declare other methods at first, which is more comfortable to read that people don't need to scroll down the code frequently to figure out where you declare and how you implement it.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/75#discussion_r483459870" expanded>

This while loop can be changed to a separate method outside the main method, which will make the main method much shorter
</panel>

<panel  header="**3 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/15#discussion_r483368294" expanded>

I think separating this while loop into mutiple methods such as processTodo, processDeadline, would be more elegant and easy for people to read
</panel>

</panel>

<panel type="info" header="### 191. TIKY..AING `@tikimonarch` (2 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/194#discussion_r482747626" expanded>

Might be good to specify in a way that these are HTML codes for ticks and crosses,, i would consider it as borderline magic number? 
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/8#discussion_r482739399" expanded>

All the else and if else should be right after the closing bracket of the previous condition.
</panel>

</panel>

<panel type="info" header="### 192. SUN ..IUQI `@sunxiuqi-stacked` (2 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/178#discussion_r483967034" expanded>

Good coding practice!
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/119#discussion_r482714864" expanded>

Preferably change line when using curled brackets to organize them better.
</panel>

</panel>

<panel type="info" header="### 193. LOW .. HAO `@haroic1997` (2 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/205#discussion_r482718752" expanded>

would be better to not use '*', replace with the 'scanner...
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/79#discussion_r482716125" expanded>

Very easy to understand, good to go
</panel>

</panel>

<panel type="info" header="### 194. TAN .. WEI `@TanLeeWei` (2 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/205#discussion_r482756111" expanded>

I think maybe it would be better if you use case statements instead of keep on using (else if) for this type of tasks
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/177#discussion_r482743235" expanded>

Maybe you could put all these codes into deadline class to make your main neater
</panel>

</panel>

<panel type="info" header="### 195. LIAU.. JIE `@kaijiel24` (2 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/224#discussion_r482741112" expanded>

Should you avoid using ```this``` if it is unnecessary, aka when it is clear that the variable is referring to the class element? It will also be good to keep it consistent as you used ```this.isComplete``` in ```checkIsComplete()``` but only ```isComplete``` in ```getCompletionStatusIcon```.  Other than this, well done!
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/67#discussion_r482743291" expanded>

Well done :) I think it is good that you have abstracted the individual commands into their own function instead of putting them all in this function.
</panel>

</panel>

<panel type="info" header="### 196. MANU..PAPA `@manuelmanuntag96` (2 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/77#discussion_r482714462" expanded>

It is good practice to use Constants instead of Magic Numbers
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/62#discussion_r482717103" expanded>

Good use of Constants 
</panel>

</panel>

<panel type="info" header="### 197. SUN .. YUE `@Feudalord` (2 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/203#discussion_r482809486" expanded>

Redundant overide that doesn't change super class method. Consider removing the override to shorten the code.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/203#discussion_r482813775" expanded>

Nice spilt method to split string into 2 seperated by '/'
</panel>

</panel>

<panel type="info" header="### 198. TAN .. HWE `@kiathwe97` (2 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/7#discussion_r482813715" expanded>

Could instead use "eventDate"
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/7#discussion_r482814766" expanded>

Magic value here, perhaps use a string variable to hold the tick and cross
</panel>

</panel>

<panel type="info" header="### 199. WALT..KONG `@k-walter` (2 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/197#discussion_r483417429" expanded>

Great implementation! I think you could keep indentation within the previous level.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/26#discussion_r483422459" expanded>

Well done! You could refactor to check and break out of errors, and leave the main logic in the main indentation.
</panel>

</panel>

<panel type="info" header="### 200. CHEN..QING `@judowha` (2 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/141#discussion_r481679881" expanded>

for this part of condition statements, it has more than 3 levels of indentation. So may create some subfunctions to reduce the number of indentations.  
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/83#discussion_r481682758" expanded>

 some lines here are a little bit longer and with many functions in it. May break them into parts. Also can leave some comments to explain them
</panel>

</panel>

<panel type="info" header="### 201. WANG..HUYI `@mrwsy1` (2 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/112#discussion_r483424021" expanded>

Nice code, very neat.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/42#discussion_r483427674" expanded>

nice code, very neat.
</panel>

</panel>

<panel type="info" header="### 202. TAN ..N AN `@Darticune` (2 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/108#discussion_r483363564" expanded>

Any reason why you used if-elseif-else instead of switch here?
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/31#discussion_r483371436" expanded>

I like how readable this section is.
</panel>

</panel>

<panel type="info" header="### 203. HO C..NIEL `@nat-ho` (2 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/198#discussion_r482646289" expanded>

Hi! I think you may have missed out the explicit "//fallthrough" comment for case statements that do not have a break statements.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/60#discussion_r482649854" expanded>

I like how you applied SLAP principles in your code!
</panel>

</panel>

<panel type="info" header="### 204. WONG..CHIN `@EthanWong2212` (2 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/51#discussion_r483422312" expanded>

Perhaps you can refractor such constant statements
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/44#discussion_r483415774" expanded>

Perhaps you can refractor the number 100 to show the meaning of it since its a constant?
</panel>

</panel>

<panel type="info" header="### 205. SAMU..PHER `@samuelchristopher` (2 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/196#discussion_r482647769" expanded>

i like how you used switch / case statements here 👍 
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/49#discussion_r482645876" expanded>

nice job, i like how clean the code is 👍
</panel>

</panel>

<panel type="info" header="### 206. ONG ..HANG `@CookieHoodie` (2 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/113#discussion_r481748643" expanded>

The line "Got it..." is repeated a few times. Can consider restructure your code to reduce redundancy.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/10#discussion_r481737997" expanded>

However, the use of space is not consistent here, some methods have space before curly braces while some do not, like this one
</panel>

</panel>

<panel type="info" header="### 207. MARC..YONG `@Reinbowl` (2 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/150#discussion_r482709958" expanded>

Like the use of constants for each command
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/150#discussion_r482710253" expanded>

Suggestion would to be have a method for the addition of each task type rather than to handle it in case statements
</panel>

</panel>

<panel type="info" header="### 208. WU Y..UXIN `@Lezn0` (2 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/32#discussion_r484182677" expanded>

Good job using capital letters to assign constants.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/2#discussion_r483416384" expanded>

Well done! Good readability and abstraction for the code.
</panel>

</panel>

<panel type="info" header="### 209. JENN.. LIN `@jlifah` (2 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/169#discussion_r482644129" expanded>

Your code looks clean but I would suggest putting spaces like "} else {" to improve readability. but otherwise well done! :) 
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/69#discussion_r482646559" expanded>

Perhaps a more descriptive naming for this would be better? like userInput etc. And I noticed some of your comments are explained in the method name already, would it be more appropriate to remove them in that case? But otherwise it looks it looks good to me! :)
</panel>

</panel>

<panel type="info" header="### 210. LIM ..ENCE `@hailqueenflo` (2 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/204#discussion_r482704209" expanded>

'else if' should start on the same line as the end brackets.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/7#discussion_r482706698" expanded>

good code quality!
</panel>

</panel>

<panel type="info" header="### 211. WU N.. NAN `@max-wunan` (2 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/118#discussion_r483425807" expanded>

I like that you write multiple functions representing different reactions the system is supposed to have when receiving different inputs, which makes the code very readable, but I think you may consider adding some comments before some code, especially in long functions, so that it is easier for you to modify it afterwards, also easier for reviewers.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/61#discussion_r483425861" expanded>

I like how you created a lot of methods to represent different processing of different inputs, which makes the code very readable, but it might be better to put all these functions as methods of the Task class?
</panel>

</panel>

<panel type="info" header="### 212. GAN ..LERK `@jialerk` (2 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/128#discussion_r481749192" expanded>

would be good to refactor the printing of duke logo into a method
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/30#discussion_r481737940" expanded>

Good job on the code!! Nothing much that needs changing :)
</panel>

</panel>

<panel type="info" header="### 213. JOEL..XIAN `@joelngyx` (2 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/118#discussion_r483396441" expanded>

Overall, the code is very readable. However, the main method is quite long. It could be better to apply SLAP coding principles and make multiple methods to handle the many variables in main(). 

In addition, some of the method names are not very clear. For example, what is a traditional task? Perhaps a few lines of comments to explain such names, or finding more apt names could be better.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/29#discussion_r483388981" expanded>

Overall, the code is readable and mostly follows the coding standards. 

However, the method names, while still somewhat reflecting the methods' purposes, deviate slightly from the coding standards prescribed. For example, the method farewell, is a single noun. Perhaps it could be better renamed printFarewellMessage. Another example is listPrinter, which is not a verb, but a noun. Perhaps it could be better named printList. 

Still, there are many other instances where the naming is properly done, such as in markDone and addedTask, and so these slight errors may be due to carelessness
</panel>

</panel>

<panel type="info" header="### 214. SHRE..UMAR `@shreytheshreyas` (2 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/168#discussion_r482676081" expanded>

Hi Sean, Good Job on your code I found no violation to the coding standards in your code. Just one comment  i don't think you have to expliciltly import your classes because they are all kept in the same file other than that everything seems great.
</panel>

<panel  header="**2 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/69#discussion_r482647267" expanded>

Good Job on your code for the individual Project. A small comment I noticed a spacing between the parenthesis and the starting curly brace for some of your methods but other than that I did not find any issues.
</panel>

</panel>

<panel type="info" header="### 215. CHAN.. HAN `@mhchan163` (1 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/46#discussion_r481688453" expanded>

Perhaps you can put tasks[taskCount++] instead to reduce the code by one line
</panel>

</panel>

<panel type="info" header="### 216. LIM ..BING `@farice9` (1 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/22#discussion_r482710026" expanded>

This part is quite heavily nested and lengthy, consider extracting part of it as a separate method. Other than that, pretty clean code!
</panel>

</panel>

<panel type="info" header="### 217. GOH .. HAN `@gohsonghan98` (1 comments)"  collapsed>


<panel  header="**1 :fas-comment:**" popup-url="https://github.com/nus-cs2113-AY2021S1/ip/pull/115#discussion_r481744267" expanded>

You may consider doing a SLAP for the codes within the while loop into different methods to improve readability.
</panel>

</panel>

<panel type="info" header="### 218. JUSU..NAEL `@jusufnathanael` (0 comments)"  collapsed>


</panel>
